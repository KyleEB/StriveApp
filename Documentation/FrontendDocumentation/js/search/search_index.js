var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AchievementsPage.html",[0,0.012,1,0.802]],["body/components/AchievementsPage.html",[0,0.015,1,1.162,2,1.125,3,0.141,4,0.141,5,0.751,6,0.852,7,0.8,8,0.8,9,0.121,10,2.093,11,1.788,12,1.865,13,0.8,14,2.127,15,1.997,16,3.867,17,1.278,18,4.439,19,1.199,20,3.701,21,0.477,22,1.056,23,2.72,24,2.499,25,2.566,26,0.93,27,4.18,28,3.701,29,2.66,30,2.268,31,3.021,32,4.18,33,3.316,34,2.382,35,2.776,36,0.991,37,1.39,38,1.815,39,1.865,40,2.071,41,2.777,42,1.499,43,2.218,44,1.592,45,3.701,46,1.116,47,0.025,48,1.393,49,1.018,50,1.116,51,1.555,52,2.469,53,1.486,54,1.321,55,3.701,56,2.469,57,2.093,58,2.268,59,3.236,60,2.469,61,2.218,62,2.469,63,2.469,64,2.469,65,2.469,66,2.469,67,2.469,68,2.469,69,0.302,70,0.141,71,1.285,72,0.253,73,2.469,74,2.469,75,0.141,76,0.081,77,2.093,78,1.321,79,1.285,80,1.661,81,0.576,82,1.665,83,2.329,84,1.665,85,1.111,86,1.846,87,1.846,88,2.469,89,1.39,90,2.093,91,2.469,92,1.665,93,1.39,94,1.665,95,1.661,96,2.489,97,1.661,98,2.489,99,1.661,100,2.489,101,2.093,102,2.469,103,2.093,104,2.766,105,2.093,106,2.469,107,1.193,108,2.093,109,2.093,110,2.093,111,1.661,112,1.513,113,2.766,114,2.093,115,2.093,116,1.513,117,1.846,118,1.846,119,1.513,120,0.852,121,3.137,122,2.766,123,1.846,124,1.846,125,1.846,126,2.268,127,1.661,128,2.766,129,1.39,130,2.469,131,2.093,132,2.986,133,1.513,134,1.661,135,1.846,136,1.285,137,2.766,138,1.39,139,2.093,140,2.469,141,2.093,142,2.093,143,0.277,144,1.125,145,1.125,146,0.8,147,1.597,148,0.8,149,0.8,150,0.621,151,0.8,152,0.582,153,0.8,154,0.582,155,0.8,156,0.582,157,0.662,158,0.8,159,0.582,160,0.8,161,0.582,162,0.8,163,0.545,164,0.8,165,0.582,166,0.8,167,0.582,168,0.8,169,0.582,170,0.8,171,0.582,172,0.8,173,0.582,174,0.8,175,0.545,176,0.8,177,0.8,178,0.009,179,0.013,180,0.009]],["title/modules/AchievementsPageModule.html",[181,0.316,182,2.086]],["body/modules/AchievementsPageModule.html",[0,0.016,1,1.593,3,0.256,4,0.256,9,0.219,47,0.025,69,0.381,70,0.256,72,0.459,75,0.256,76,0.148,81,0.698,143,0.504,178,0.016,179,0.019,180,0.016,181,0.416,182,4.084,183,1.057,184,1.201,185,1.847,186,1.364,187,1.364,188,1.201,189,3.802,190,3.802,191,1.697,192,1.364,193,1.364,194,4.485,195,1.593,196,1.926,197,1.364,198,1.926,199,1.453,200,1.627,201,1.453,202,0.926,203,1.808,204,4.485,205,1.453,206,1.28,207,1.548]],["title/components/AppComponent.html",[0,0.012,150,0.855]],["body/components/AppComponent.html",[0,0.019,1,0.862,2,1.487,3,0.209,4,0.209,5,1.112,7,1.185,8,1.185,9,0.179,13,1.185,14,2.248,15,2.11,19,1.585,21,0.706,26,1.23,36,1.311,42,1.112,44,1.23,46,0.919,47,0.025,48,1.385,49,0.756,50,0.919,53,0.919,54,0.98,69,0.336,70,0.209,72,0.374,75,0.209,76,0.12,78,1.477,143,0.411,144,1.487,145,1.487,146,1.185,147,1.906,148,1.185,149,1.185,150,1.479,151,1.185,152,0.862,153,1.185,154,0.862,155,1.185,156,0.862,157,0.98,158,1.185,159,0.862,160,1.185,161,0.862,162,1.185,163,0.807,164,1.185,165,0.862,166,1.185,167,0.862,168,1.185,169,0.862,170,1.185,171,0.862,172,1.185,173,0.862,174,1.185,175,0.807,176,1.185,177,1.185,178,0.013,179,0.017,180,0.013,208,3.101,209,2.754,210,4.892,211,5.885,212,3.101,213,4.718,214,5.464,215,5.464,216,3.658,217,3.658,218,2.998,219,2.734,220,3.101,221,2.734,222,3.101,223,3.658,224,3.658,225,3.658,226,3.658]],["title/modules/AppModule.html",[181,0.316,227,2.289]],["body/modules/AppModule.html",[3,0.22,4,0.22,9,0.188,15,1.17,47,0.025,69,0.394,70,0.22,72,0.394,75,0.22,76,0.127,81,0.599,143,0.432,150,1.724,163,1.117,175,0.85,178,0.013,179,0.018,180,0.013,181,0.357,183,0.907,184,1.031,185,1.719,186,1.719,187,1.539,188,1.031,191,1.539,192,1.17,193,1.17,195,1.444,202,0.795,203,1.247,206,1.444,214,4.29,215,4.29,218,3.101,219,2.877,220,3.263,221,2.877,222,3.263,227,4.506,228,3.263,229,3.263,230,3.263,231,3.263,232,3.924,233,2.877,234,5.06,235,3.263,236,2.589,237,5.06,238,5.06,239,3.263,240,3.849,241,1.732,242,5.06,243,3.849,244,3.263,245,3.849,246,3.849,247,3.849,248,4.29,249,2.589,250,2.589,251,2.589,252,2.877,253,2.877,254,3.263,255,3.263,256,3.849,257,3.849,258,3.849,259,3.849,260,3.849,261,3.849]],["title/classes/AppPage.html",[76,0.112,262,2.544]],["body/classes/AppPage.html",[3,0.282,4,0.282,9,0.241,21,0.952,26,1.486,44,1.486,47,0.025,53,1.486,69,0.282,75,0.282,76,0.162,120,2.041,138,2.776,145,1.499,178,0.017,179,0.021,180,0.017,209,2.776,236,3.316,262,4.42,263,4.931,264,4.18,265,6.566,266,6.566,267,4.931,268,4.931,269,4.931,270,4.931,271,4.931,272,4.931]],["title/modules/AppRoutingModule.html",[181,0.316,232,2.086]],["body/modules/AppRoutingModule.html",[3,0.28,4,0.28,9,0.24,47,0.025,69,0.337,70,0.28,75,0.28,76,0.162,81,0.764,157,1.579,178,0.017,179,0.021,180,0.017,183,1.156,188,1.314,195,1.683,200,1.693,201,1.91,202,1.013,205,1.91,206,1.4,232,3.613,273,4.906,274,4.159,275,5.895,276,4.906,277,4.159,278,2.762,279,4.906,280,4.906]],["title/injectables/AudioService.html",[281,1.644,282,2.086]],["body/injectables/AudioService.html",[3,0.188,4,0.188,9,0.161,21,0.636,22,1.3,26,1.145,36,0.882,44,1.537,46,1.312,47,0.025,48,1.312,49,1.263,50,1.312,53,1.145,54,1.22,69,0.298,70,0.188,72,0.337,75,0.188,76,0.108,78,1.68,107,2.522,112,2.018,120,2.042,178,0.011,179,0.016,180,0.011,209,1.854,212,2.792,213,4.572,218,2.018,281,2.2,282,2.791,283,2.215,284,2.462,285,4.427,286,4.427,287,1.803,288,4.427,289,3.861,290,4.555,291,4.687,292,4.555,293,3.861,294,2.787,295,3.293,296,5.418,297,3.978,298,3.861,299,5.568,300,3.293,301,3.861,302,2.194,303,2.052,304,2.522,305,3.789,306,3.293,307,3.33,308,3.512,309,3.293,310,2.462,311,2.792,312,2.018,313,4.427,314,2.215,315,2.462,316,2.792,317,2.792,318,2.792,319,3.861,320,2.792,321,3.861,322,2.792,323,2.792,324,2.462,325,2.792,326,2.792,327,2.215,328,2.792,329,2.792,330,2.792,331,2.792]],["title/components/BlogPage.html",[0,0.012,152,0.802]],["body/components/BlogPage.html",[0,0.018,1,0.763,2,1.369,3,0.185,4,0.185,5,0.985,6,1.118,7,1.049,8,1.049,9,0.158,11,2.175,12,2.175,13,1.049,14,2.215,15,2.079,16,2.179,17,1.555,19,1.459,21,0.625,22,1.285,26,1.132,29,2.175,34,2.702,35,3.15,36,1.206,37,1.824,38,2.06,39,2.175,40,2.35,42,0.985,44,1.406,46,0.814,47,0.025,48,1.301,49,0.93,50,0.814,51,1.892,53,1.132,54,0.868,61,1.458,69,0.296,70,0.185,71,1.686,72,0.332,75,0.185,76,0.107,78,1.206,79,1.686,81,0.504,82,1.458,83,1.892,84,1.458,85,1.458,87,2.422,92,1.458,93,1.824,94,1.458,134,3.029,143,0.364,144,1.369,145,1.369,146,1.049,147,1.812,148,1.049,149,1.049,150,0.814,151,1.049,152,1.318,153,1.049,154,0.763,155,1.049,156,0.763,157,0.868,158,1.049,159,0.763,160,1.049,161,0.763,162,1.049,163,0.715,164,1.049,165,0.763,166,1.049,167,0.763,168,1.049,169,0.763,170,1.049,171,0.763,172,1.049,173,0.763,174,1.049,175,0.715,176,1.049,177,1.049,178,0.011,179,0.016,180,0.011,287,1.787,332,2.746,333,4.395,334,5.176,335,4.503,336,3.31,337,2.84,338,3.24,339,3.24,340,3.24,341,3.24,342,2.422,343,3.24,344,2.746,345,3.24,346,3.24,347,3.24,348,5.396,349,4.503,350,5.594,351,4.743,352,4.503,353,4.503]],["title/modules/BlogPageModule.html",[181,0.316,354,2.086]],["body/modules/BlogPageModule.html",[0,0.016,3,0.256,4,0.256,9,0.219,47,0.025,69,0.381,70,0.256,72,0.459,75,0.256,76,0.148,81,0.698,143,0.504,152,1.593,178,0.016,179,0.019,180,0.016,181,0.416,183,1.057,184,1.201,185,1.847,186,1.364,187,1.364,188,1.201,191,1.697,192,1.364,193,1.364,195,1.593,196,1.926,197,1.364,198,1.926,199,1.453,200,1.627,201,1.453,202,0.926,203,1.808,205,1.453,206,1.28,207,1.548,354,4.084,355,3.802,356,3.802,357,4.485,358,4.485]],["title/components/CalendarPage.html",[0,0.012,154,0.802]],["body/components/CalendarPage.html",[0,0.016,1,0.62,2,1.179,3,0.15,4,0.15,5,0.8,6,0.908,7,0.852,8,0.852,9,0.128,11,1.873,12,1.936,13,0.852,14,2.149,15,2.017,17,1.339,19,1.256,21,0.508,22,1.107,23,2.823,26,0.975,29,2.583,34,2.457,35,2.863,36,1.039,37,1.481,38,1.872,39,1.936,40,2.136,42,0.8,44,1.475,46,0.661,47,0.025,48,1.363,49,0.952,50,0.661,51,1.629,53,1.278,54,0.704,61,2.073,69,0.29,70,0.15,72,0.397,75,0.15,76,0.087,78,1.234,79,1.368,81,0.409,82,2.073,83,2.384,84,2.073,85,1.183,89,1.481,92,2.073,93,1.481,94,2.073,107,2.909,120,1.339,136,2.018,143,0.295,144,1.179,145,1.179,146,0.852,147,1.647,148,0.852,149,0.852,150,0.661,151,0.852,152,0.62,153,0.852,154,1.198,155,0.852,156,0.62,157,0.704,158,0.852,159,0.62,160,0.852,161,0.62,162,0.852,163,0.581,164,0.852,165,0.62,166,0.852,167,0.62,168,0.852,169,0.62,170,0.852,171,0.62,172,0.852,173,0.62,174,0.852,175,0.581,176,0.852,177,0.852,178,0.009,179,0.014,180,0.009,287,1.959,302,1.629,303,1.524,304,2.62,307,1.481,336,2.183,337,2.226,359,2.229,360,3.288,361,4.607,362,3.878,363,4.607,364,4.974,365,4.311,366,2.63,367,2.63,368,2.63,369,2.63,370,2.63,371,4.974,372,6.022,373,3.288,374,2.63,375,5.674,376,2.899,377,5.674,378,3.288,379,2.899,380,2.63,381,2.229,382,2.63,383,2.63,384,2.229,385,2.899,386,2.608,387,2.63,388,2.229,389,2.229,390,1.966,391,2.63,392,2.63,393,2.63,394,3.878]],["title/modules/CalendarPageModule.html",[181,0.316,395,2.086]],["body/modules/CalendarPageModule.html",[0,0.016,3,0.256,4,0.256,9,0.219,47,0.025,69,0.381,70,0.256,72,0.459,75,0.256,76,0.148,81,0.698,143,0.504,154,1.593,178,0.016,179,0.019,180,0.016,181,0.416,183,1.057,184,1.201,185,1.847,186,1.364,187,1.364,188,1.201,191,1.697,192,1.364,193,1.364,195,1.593,196,1.926,197,1.364,198,1.926,199,1.453,200,1.627,201,1.453,202,0.926,203,1.808,205,1.453,206,1.28,207,1.548,395,4.084,396,3.802,397,3.802,398,4.485,399,4.485]],["title/components/ChatRoomPage.html",[0,0.012,156,0.802]],["body/components/ChatRoomPage.html",[0,0.016,1,0.597,2,1.147,3,0.145,4,0.145,5,0.77,6,0.874,7,0.82,8,0.82,9,0.124,13,0.82,14,2.136,15,2.005,17,1.302,19,1.222,21,0.489,22,1.076,26,0.948,29,1.893,36,1.01,42,0.77,44,1.53,46,0.948,47,0.025,48,1.255,49,1.031,50,0.948,53,1.342,54,1.01,69,0.285,70,0.145,72,0.259,75,0.145,76,0.083,78,1.207,83,1.064,85,2.402,120,1.302,136,1.318,143,0.284,144,1.147,145,1.147,146,0.82,147,1.617,148,0.82,149,0.82,150,0.636,151,0.82,152,0.597,153,0.82,154,0.597,155,0.82,156,1.176,157,1.66,158,0.82,159,0.597,160,0.82,161,0.597,162,0.82,163,0.559,164,0.82,165,0.597,166,0.82,167,0.597,168,0.82,169,0.597,170,0.82,171,0.597,172,0.82,173,0.597,174,0.82,175,0.559,176,0.82,177,0.82,178,0.009,179,0.013,180,0.009,249,1.703,250,4.006,251,1.703,277,3.197,278,3.489,294,1.584,302,1.893,303,1.771,304,1.822,337,2.412,386,2.537,400,3.797,401,2.147,402,4.506,403,3.771,404,4.506,405,3.82,406,4.992,407,4.992,408,4.232,409,4.992,410,3.771,411,2.532,412,4.506,413,4.992,414,3.771,415,3.197,416,2.532,417,2.532,418,2.532,419,2.532,420,3.771,421,2.532,422,3.771,423,2.532,424,2.532,425,4.525,426,1.893,427,2.532,428,2.532,429,2.532,430,3.82,431,2.532,432,2.532,433,2.819,434,3.771,435,2.532,436,2.532,437,3.771,438,3.771,439,2.532,440,3.771,441,2.532,442,2.532,443,2.532,444,2.532,445,2.532,446,1.893,447,2.532,448,2.532,449,4.992,450,4.992,451,4.992,452,3.771,453,4.992,454,3.771,455,3.771]],["title/modules/ChatRoomPageModule.html",[181,0.316,456,2.086]],["body/modules/ChatRoomPageModule.html",[0,0.016,3,0.254,4,0.254,9,0.218,47,0.025,69,0.38,70,0.254,72,0.456,75,0.254,76,0.147,81,0.694,143,0.5,156,1.59,157,1.193,178,0.016,179,0.019,180,0.016,181,0.413,183,1.05,184,1.193,185,1.841,186,1.354,187,1.354,188,1.193,191,1.69,192,1.354,193,1.354,195,1.586,196,1.918,197,1.354,198,1.918,199,1.443,200,1.622,201,1.443,202,0.92,203,1.8,205,1.443,206,1.271,207,1.538,278,2.508,400,2.73,456,4.078,457,3.776,458,3.776,459,4.455,460,3.776]],["title/components/DatesPage.html",[0,0.012,159,0.802]],["body/components/DatesPage.html",[0,0.018,1,0.793,2,1.406,3,0.192,4,0.192,5,1.023,6,1.162,7,1.09,8,1.09,9,0.164,11,2.234,12,2.219,13,1.09,14,2.226,15,2.089,17,1.596,19,1.498,21,0.65,22,1.32,26,1.162,34,2.747,36,0.902,41,3.047,42,1.023,44,1.548,46,0.846,47,0.025,48,1.328,49,1.091,50,0.846,53,1.328,54,1.415,69,0.325,70,0.192,72,0.345,75,0.192,76,0.111,78,0.902,143,0.378,144,1.406,145,1.406,146,1.09,147,1.842,148,1.09,149,1.09,150,0.846,151,1.09,152,0.793,153,1.09,154,0.793,155,1.09,156,0.793,157,0.902,158,1.09,159,1.34,160,1.09,161,0.793,162,1.09,163,0.743,164,1.09,165,0.793,166,1.09,167,0.793,168,1.09,169,0.793,170,1.09,171,0.793,172,1.09,173,0.793,174,1.09,175,0.743,176,1.09,177,1.09,178,0.012,179,0.016,180,0.012,202,0.695,241,1.515,287,2.058,336,3.356,337,2.879,364,3.92,371,3.92,390,4.603,461,2.854,462,3.92,463,5.282,464,4.624,465,3.67,466,6.158,467,2.063,468,3.366,469,3.366,470,3.366,471,3.366,472,3.366,473,3.366,474,2.264,475,4.624]],["title/modules/DatesPageModule.html",[181,0.316,476,2.086]],["body/modules/DatesPageModule.html",[0,0.016,3,0.256,4,0.256,9,0.219,47,0.025,69,0.381,70,0.256,72,0.459,75,0.256,76,0.148,81,0.698,143,0.504,159,1.593,178,0.016,179,0.019,180,0.016,181,0.416,183,1.057,184,1.201,185,1.847,186,1.364,187,1.364,188,1.201,191,1.697,192,1.364,193,1.364,195,1.593,196,1.926,197,1.364,198,1.926,199,1.453,200,1.627,201,1.453,202,0.926,203,1.808,205,1.453,206,1.28,207,1.548,476,4.084,477,3.802,478,3.802,479,4.485,480,4.485]],["title/components/GoalsPage.html",[0,0.012,161,0.802]],["body/components/GoalsPage.html",[0,0.009,1,0.278,2,0.619,3,0.067,4,0.067,5,0.359,6,0.408,7,0.383,8,0.383,9,0.058,12,0.496,13,0.383,14,1.801,15,1.69,17,0.703,19,0.66,21,0.228,22,0.581,23,1.645,24,1.511,25,1.661,26,0.512,27,2.706,29,2.525,30,1.248,31,1.956,33,2.147,35,1.797,36,0.546,37,0.665,38,1.175,39,1.128,40,1.341,41,2.038,42,0.971,43,1.436,44,1.511,46,0.99,47,0.025,48,1.614,49,0.963,50,0.99,51,0.856,53,1.349,54,1.055,57,2.706,58,1.248,59,2.207,61,2.006,69,0.241,70,0.067,71,0.615,72,0.121,75,0.067,76,0.039,78,1.13,79,0.615,80,1.37,81,0.317,82,1.772,83,2.256,84,1.772,85,0.531,86,0.883,87,0.883,89,2.625,90,2.706,92,1.772,93,0.665,94,1.772,95,0.794,96,1.37,97,0.794,98,1.37,99,0.794,100,1.37,101,1.001,104,2.007,107,3.314,108,3.779,109,1.001,110,1.001,111,0.794,112,0.724,113,1.522,114,1.001,115,1.001,116,0.724,118,0.883,119,0.724,120,1.102,122,1.522,123,0.883,124,0.883,125,0.883,126,1.956,127,1.37,128,1.522,129,1.147,131,1.001,132,2.147,133,0.724,134,0.794,135,0.883,136,2.519,137,1.522,138,1.147,139,1.001,141,1.001,142,1.727,143,0.133,144,0.619,145,0.619,146,0.383,147,1.034,148,0.383,149,0.383,150,0.297,151,0.383,152,0.278,153,0.383,154,0.278,155,0.383,156,0.278,157,0.316,158,0.383,159,0.278,160,0.383,161,0.752,162,0.383,163,0.261,164,0.383,165,0.278,166,0.383,167,0.278,168,0.383,169,0.278,170,0.383,171,0.278,172,0.383,173,0.278,174,0.383,175,0.261,176,0.383,177,0.383,178,0.004,179,0.007,180,0.004,241,0.531,287,1.773,302,1.513,303,1.415,304,1.297,307,2.375,365,2.706,373,5.207,376,1.522,378,1.727,379,3.153,384,3.338,385,3.485,386,3.136,388,1.001,389,1.727,408,2.706,430,2.706,481,1.001,482,2.685,483,2.037,484,5.136,485,2.685,486,2.685,487,2.685,488,2.037,489,2.037,490,2.037,491,2.037,492,3.192,493,3.192,494,4.219,495,2.037,496,2.037,497,2.685,498,1.181,499,1.181,500,1.181,501,1.181,502,1.181,503,6.641,504,1.181,505,2.037,506,1.181,507,1.181,508,1.181,509,1.181,510,1.181,511,1.181,512,1.181,513,1.181,514,1.181,515,1.181,516,3.937,517,2.037,518,6.342,519,1.181,520,6.217,521,3.192,522,4.457,523,6.057,524,5.136,525,5.641,526,4.841,527,3.937,528,4.663,529,4.663,530,5.848,531,3.192,532,4.457,533,4.457,534,3.601,535,3.192,536,5.469,537,3.601,538,3.192,539,3.192,540,2.706,541,3.192,542,4.457,543,3.192,544,4.663,545,3.192,546,3.192,547,3.192,548,3.192,549,1.181,550,1.181,551,3.192,552,3.192,553,3.192,554,3.192,555,3.192,556,3.192,557,3.192,558,1.181,559,1.181,560,1.181,561,1.181,562,1.181,563,1.181,564,0.724,565,1.181,566,1.181,567,1.181,568,2.037,569,1.181,570,1.181,571,1.181,572,1.181,573,1.181,574,1.181,575,1.181,576,2.276,577,1.181,578,1.181,579,1.181,580,1.181,581,1.181,582,0.883,583,2.037,584,1.001,585,1.181,586,1.001,587,1.181,588,1.181,589,1.181,590,1.181,591,1.181,592,1.001,593,1.181,594,2.037,595,1.181,596,1.522,597,1.181,598,1.001,599,1.181,600,1.181,601,1.181]],["title/modules/GoalsPageModule.html",[181,0.316,602,2.086]],["body/modules/GoalsPageModule.html",[0,0.016,3,0.256,4,0.256,9,0.219,47,0.025,69,0.381,70,0.256,72,0.459,75,0.256,76,0.148,81,0.698,143,0.504,161,1.593,178,0.016,179,0.019,180,0.016,181,0.416,183,1.057,184,1.201,185,1.847,186,1.364,187,1.364,188,1.201,191,1.697,192,1.364,193,1.364,195,1.593,196,1.926,197,1.364,198,1.926,199,1.453,200,1.627,201,1.453,202,0.926,203,1.808,205,1.453,206,1.28,207,1.548,602,4.084,603,3.802,604,3.802,605,4.485,606,4.485]],["title/components/HomePage.html",[0,0.012,163,0.751]],["body/components/HomePage.html",[0,0.016,1,0.6,2,1.151,3,0.145,4,0.145,5,0.774,6,0.879,7,0.825,8,0.825,9,0.124,13,0.825,14,2.138,15,2.006,17,1.307,19,1.226,21,0.491,22,1.081,24,2.131,25,1.97,26,0.951,29,2.561,30,2.32,31,3.067,36,0.682,39,1.899,40,2.103,41,2.997,42,1.374,43,2.252,44,1.602,46,0.951,47,0.025,48,1.258,49,1.158,50,0.951,53,1.409,54,1.014,58,2.32,59,3.278,61,2.034,69,0.306,70,0.145,72,0.261,75,0.145,76,0.084,78,1.341,81,0.589,82,1.145,83,2.247,84,1.145,85,1.145,92,1.145,94,1.145,100,1.712,111,1.712,116,1.56,117,1.903,119,1.56,120,1.728,133,2.32,138,1.433,143,0.286,144,1.151,145,1.151,146,0.825,147,1.621,148,0.825,149,0.825,150,0.64,151,0.825,152,0.6,153,0.825,154,0.6,155,0.825,156,0.6,157,0.682,158,0.825,159,0.6,160,0.825,161,0.6,162,0.825,163,1.105,164,0.825,165,0.6,166,0.825,167,0.6,168,0.825,169,0.6,170,0.825,171,0.6,172,0.825,173,0.6,174,0.825,175,0.562,176,0.825,177,0.825,178,0.009,179,0.013,180,0.009,202,0.526,241,1.145,287,2.059,294,1.59,327,1.712,336,3.012,337,2.584,342,1.903,446,1.903,465,3.432,467,1.56,474,1.712,564,1.56,582,1.903,607,2.158,608,3.832,609,4.52,610,3.786,611,5.005,612,4.753,613,5.005,614,4.243,615,3.378,616,3.378,617,3.741,618,2.352,619,3.741,620,3.786,621,2.545,622,2.545,623,2.545,624,2.545,625,2.545,626,2.545,627,2.545,628,2.545,629,2.545,630,2.545,631,2.158,632,2.158,633,2.158,634,2.545,635,3.786,636,3.832,637,3.209,638,2.545,639,2.545,640,2.545,641,2.545,642,2.545,643,2.158,644,1.903,645,2.158,646,2.158,647,3.209,648,2.158,649,2.158,650,2.158,651,2.158,652,2.158,653,2.545,654,2.158,655,2.545,656,2.545,657,3.209,658,3.786,659,3.786,660,2.158,661,3.786,662,2.545,663,2.545,664,2.545]],["title/modules/HomePageModule.html",[181,0.316,665,2.086]],["body/modules/HomePageModule.html",[0,0.016,3,0.257,4,0.257,9,0.22,47,0.025,69,0.381,70,0.257,72,0.46,75,0.257,76,0.148,81,0.7,143,0.505,163,1.493,178,0.016,179,0.019,180,0.016,181,0.417,183,1.059,184,1.204,185,1.849,186,1.367,187,1.367,188,1.204,191,1.699,192,1.367,193,1.367,195,1.595,196,1.929,197,1.367,198,1.929,199,1.456,200,1.629,201,1.456,202,0.928,203,1.81,205,1.456,206,1.283,207,1.552,665,4.087,666,3.811,667,3.811,668,4.495,669,4.495]],["title/components/JournalPage.html",[0,0.012,165,0.802]],["body/components/JournalPage.html",[0,0.018,1,0.723,2,1.318,3,0.175,4,0.175,5,0.933,6,1.06,7,0.994,8,0.994,9,0.15,11,2.095,12,2.112,13,0.994,14,2.198,15,2.064,17,1.497,19,1.405,21,0.592,22,1.238,26,1.09,29,2.112,34,2.639,35,3.076,36,1.162,37,1.728,38,2.011,39,2.112,40,2.295,42,0.933,44,1.578,46,1.09,47,0.025,48,1.373,49,1.038,50,1.09,51,1.822,53,1.448,54,1.464,61,1.381,69,0.287,70,0.175,71,1.597,72,0.314,75,0.175,76,0.101,78,1.162,79,1.597,81,0.478,82,1.381,83,1.822,84,1.381,85,1.381,86,2.294,92,1.381,93,1.728,94,1.381,121,2.602,143,0.345,144,1.318,145,1.318,146,0.994,147,1.77,148,0.994,149,0.994,150,0.771,151,0.994,152,0.723,153,0.994,154,0.723,155,0.994,156,0.723,157,0.822,158,0.994,159,0.723,160,0.994,161,0.723,162,0.994,163,0.678,164,0.994,165,1.287,166,0.994,167,0.723,168,0.994,169,0.723,170,0.994,171,0.723,172,0.994,173,0.723,174,0.994,175,0.678,176,0.994,177,0.994,178,0.011,179,0.015,180,0.011,287,1.736,294,1.289,302,1.289,303,1.206,336,3.245,337,2.784,344,2.602,348,3.676,351,3.676,390,4.084,618,2.256,645,2.602,670,2.602,671,4.308,672,5.027,673,4.336,674,3.758,675,5.463,676,5.463,677,4.336,678,3.069,679,3.069,680,3.069,681,4.336,682,3.069,683,3.069,684,3.069,685,3.069,686,3.069,687,2.916,688,4.336,689,4.336]],["title/modules/JournalPageModule.html",[181,0.316,690,2.086]],["body/modules/JournalPageModule.html",[0,0.016,3,0.256,4,0.256,9,0.219,47,0.025,69,0.381,70,0.256,72,0.459,75,0.256,76,0.148,81,0.698,143,0.504,165,1.593,178,0.016,179,0.019,180,0.016,181,0.416,183,1.057,184,1.201,185,1.847,186,1.364,187,1.364,188,1.201,191,1.697,192,1.364,193,1.364,195,1.593,196,1.926,197,1.364,198,1.926,199,1.453,200,1.627,201,1.453,202,0.926,203,1.808,205,1.453,206,1.28,207,1.548,690,4.084,691,3.802,692,3.802,693,4.485,694,4.485]],["title/components/MainPage.html",[0,0.012,167,0.802]],["body/components/MainPage.html",[0,0.016,1,0.629,2,1.192,3,0.152,4,0.152,5,0.811,6,0.921,7,0.864,8,0.864,9,0.13,13,0.864,14,2.154,15,2.022,17,1.353,19,1.27,21,0.515,22,1.119,23,2.848,25,1.389,26,0.985,31,3.138,32,4.342,33,3.445,36,0.715,38,1.885,39,1.952,40,2.151,41,2.848,42,0.811,43,2.304,44,1.52,46,0.671,47,0.025,48,1.287,49,1.058,50,0.671,51,1.952,53,1.287,54,1.372,69,0.337,70,0.152,71,1.389,72,0.273,75,0.152,76,0.088,77,2.262,78,1.62,79,1.389,80,1.795,89,2.207,95,1.795,96,2.637,97,2.637,98,1.795,103,2.262,104,1.995,105,2.262,118,1.995,122,2.93,123,1.995,124,1.995,125,1.995,126,1.635,127,1.795,128,2.93,132,3.836,133,1.635,134,1.795,135,1.995,136,2.418,137,3.473,143,0.3,144,1.192,145,1.192,146,0.864,147,1.659,148,0.864,149,0.864,150,0.671,151,0.864,152,0.629,153,0.864,154,0.629,155,0.864,156,0.629,157,1.245,158,0.864,159,0.629,160,0.864,161,0.629,162,0.864,163,0.589,164,0.864,165,0.629,166,0.864,167,1.207,168,0.864,169,0.629,170,0.864,171,0.629,172,0.864,173,0.629,174,0.864,175,0.589,176,0.864,177,0.864,178,0.009,179,0.014,180,0.009,202,0.551,241,1.201,249,1.795,250,4.068,251,1.795,287,1.353,304,1.894,337,2.474,405,2.262,415,3.939,465,3.475,467,1.635,474,1.795,540,3.323,564,1.635,584,2.262,586,3.323,615,3.473,616,3.473,617,3.828,618,2.418,619,3.828,657,4.342,687,2.637,695,2.262,696,4.647,697,3.92,698,5.895,699,5.121,700,3.92,701,2.669,702,2.669,703,2.669,704,2.669,705,2.669,706,2.669,707,3.92,708,2.669,709,2.669,710,2.669,711,2.669,712,2.669,713,3.92,714,3.92,715,2.669]],["title/modules/MainPageModule.html",[181,0.316,716,2.086]],["body/modules/MainPageModule.html",[0,0.016,3,0.256,4,0.256,9,0.219,47,0.025,69,0.381,70,0.256,72,0.459,75,0.256,76,0.148,81,0.698,143,0.504,167,1.593,178,0.016,179,0.019,180,0.016,181,0.416,183,1.057,184,1.201,185,1.847,186,1.364,187,1.364,188,1.201,191,1.697,192,1.364,193,1.364,195,1.593,196,1.926,197,1.364,198,1.926,199,1.453,200,1.627,201,1.453,202,0.926,203,1.808,205,1.453,206,1.28,207,1.548,716,4.084,717,3.802,718,3.802,719,4.485,720,4.485]],["title/components/MeditationPage.html",[0,0.012,169,0.802]],["body/components/MeditationPage.html",[0,0.016,1,0.611,2,1.167,3,0.148,4,0.148,5,0.788,6,0.895,7,0.84,8,0.84,9,0.127,11,1.854,12,1.919,13,0.84,14,2.144,15,2.012,17,1.325,19,1.243,21,0.5,22,1.095,26,0.964,29,2.371,34,2.439,35,2.843,36,1.028,37,1.459,38,1.859,39,2.265,40,2.265,42,0.788,44,1.566,46,0.651,47,0.025,48,1.148,49,1.113,50,0.651,51,1.612,53,1.355,54,1.224,61,1.726,69,0.288,70,0.148,71,1.349,72,0.265,75,0.148,76,0.085,78,1.028,79,1.349,81,0.597,82,1.726,83,2.121,84,1.726,85,1.166,92,1.726,93,1.459,94,1.726,107,2.604,120,0.895,126,2.351,127,1.743,132,2.581,136,1.997,143,0.291,144,1.167,145,1.167,146,0.84,147,1.636,148,0.84,149,0.84,150,0.651,151,0.84,152,0.611,153,0.84,154,0.611,155,0.84,156,0.611,157,0.694,158,0.84,159,0.611,160,0.84,161,0.611,162,0.84,163,0.572,164,0.84,165,0.611,166,0.84,167,0.611,168,0.84,169,1.19,170,0.84,171,0.611,172,0.84,173,0.611,174,0.84,175,0.572,176,0.84,177,0.84,178,0.009,179,0.013,180,0.009,282,3.094,287,1.577,289,4.281,294,1.612,297,1.743,302,1.919,303,1.795,305,3.073,307,1.459,385,2.868,386,2.581,576,2.197,596,3.415,598,2.197,721,2.197,722,4.219,723,4.568,724,3.837,725,3.837,726,3.837,727,3.837,728,5.049,729,5.049,730,3.837,731,2.592,732,2.592,733,2.592,734,2.592,735,2.592,736,2.592,737,2.592,738,2.592,739,2.592,740,2.592,741,2.592,742,2.592,743,2.592,744,2.592,745,2.592,746,4.568,747,2.592,748,2.592,749,2.592,750,2.592,751,2.592,752,2.592,753,2.592,754,2.592,755,2.592,756,4.568,757,3.837,758,2.592,759,2.592,760,2.592,761,3.837,762,3.837,763,2.592,764,2.592,765,2.592,766,2.592,767,2.592,768,2.592,769,2.592,770,2.592,771,2.592,772,2.592,773,3.837,774,2.592,775,2.592,776,2.592]],["title/modules/MeditationPageModule.html",[181,0.316,777,2.086]],["body/modules/MeditationPageModule.html",[0,0.016,3,0.256,4,0.256,9,0.219,47,0.025,69,0.381,70,0.256,72,0.459,75,0.256,76,0.148,81,0.698,143,0.504,169,1.593,178,0.016,179,0.019,180,0.016,181,0.416,183,1.057,184,1.201,185,1.847,186,1.364,187,1.364,188,1.201,191,1.697,192,1.364,193,1.364,195,1.593,196,1.926,197,1.364,198,1.926,199,1.453,200,1.627,201,1.453,202,0.926,203,1.808,205,1.453,206,1.28,207,1.548,777,4.084,778,3.802,779,3.802,780,4.485,781,4.485]],["title/components/MenuPage.html",[0,0.012,171,0.802]],["body/components/MenuPage.html",[0,0.016,1,0.643,2,1.211,3,0.156,4,0.156,5,0.829,6,0.942,7,0.883,8,0.883,9,0.133,11,1.924,12,1.977,13,0.883,14,2.161,15,2.028,16,2.679,17,1.375,19,1.29,21,0.526,22,1.137,26,1.001,34,2.5,36,0.731,38,1.905,42,0.829,44,1.383,46,0.685,47,0.025,48,1.183,49,0.972,50,0.685,51,1.977,53,1.001,54,1.067,69,0.296,70,0.156,71,1.419,75,0.156,76,0.09,78,1.067,89,2.243,129,1.536,138,1.536,143,0.306,144,1.211,145,1.211,146,0.883,147,1.783,148,0.883,149,0.883,150,0.685,151,0.883,152,0.643,153,0.883,154,0.643,155,0.883,156,0.643,157,0.731,158,0.883,159,0.643,160,0.883,161,0.643,162,0.883,163,1.215,164,0.883,165,0.643,166,0.883,167,0.643,168,0.883,169,0.643,170,0.883,171,1.219,172,0.883,173,0.643,174,0.883,175,0.602,176,0.883,177,0.883,178,0.01,179,0.014,180,0.01,202,0.563,253,4.987,294,1.146,302,1.673,303,1.565,315,2.039,333,2.977,342,4.987,433,2.039,465,3.236,467,1.671,618,2.693,660,5.655,671,2.977,674,2.039,687,2.679,722,2.977,782,2.312,783,4.705,784,3.983,785,4.705,786,4.705,787,4.873,788,4.705,789,2.727,790,2.727,791,2.727,792,3.983,793,3.983,794,3.983,795,3.983,796,3.983,797,3.983,798,3.983,799,2.977,800,3.983,801,2.727,802,2.727,803,3.983,804,2.312,805,2.727,806,2.727,807,2.727,808,2.727,809,2.727,810,2.727,811,3.983,812,2.727,813,2.727,814,2.727,815,2.727,816,1.834]],["title/modules/MenuPageModule.html",[181,0.316,817,2.289]],["body/modules/MenuPageModule.html",[3,0.19,4,0.19,9,0.162,47,0.025,69,0.395,70,0.19,72,0.34,75,0.19,76,0.109,143,0.373,171,1.445,178,0.012,179,0.016,180,0.012,181,0.308,182,3.758,183,0.783,184,0.89,185,1.595,186,1.01,187,1.01,188,0.89,191,1.393,192,1.01,193,1.01,195,1.308,196,1.582,197,1.01,198,1.582,199,1.076,203,1.484,206,1.308,244,2.815,278,1.87,354,3.758,395,3.758,400,2.035,456,3.758,476,3.758,602,3.758,618,1.728,665,3.758,690,3.758,716,3.758,777,3.758,817,4.783,818,2.815,819,2.815,820,2.815,821,3.758,822,3.758,823,3.758,824,3.321,825,2.815,826,3.321,827,3.321,828,3.321,829,3.321,830,3.321,831,3.321,832,3.321,833,3.321,834,3.321,835,3.321,836,3.321,837,3.321]],["title/modules/MenuRoutingModule.html",[181,0.316,821,2.086]],["body/modules/MenuRoutingModule.html",[0,0.024,1,1.113,3,0.198,4,0.198,9,0.17,16,2.335,42,1.056,47,0.025,69,0.392,70,0.198,75,0.198,76,0.114,81,0.541,89,1.955,152,1.113,154,1.113,156,1.113,157,0.93,159,1.113,161,1.113,163,1.043,165,1.113,167,1.113,169,1.113,171,1.113,173,1.113,175,1.043,178,0.012,179,0.016,180,0.012,183,0.818,188,0.93,195,1.348,200,1.438,201,1.53,202,0.717,205,2.213,206,0.991,207,1.199,274,2.944,278,1.955,333,2.595,360,2.944,400,2.128,460,2.944,462,2.944,465,1.955,608,2.944,618,1.807,671,2.595,687,2.335,722,2.595,799,2.595,804,2.944,821,2.894,825,2.944,838,3.472,839,3.472,840,3.472,841,3.472,842,3.472,843,3.472,844,3.472,845,3.472,846,3.472,847,3.472,848,3.472,849,3.472,850,6.749,851,6.749,852,3.472,853,3.472]],["title/components/ProfilePage.html",[0,0.012,173,0.802]],["body/components/ProfilePage.html",[0,0.014,1,0.507,2,1.014,3,0.123,4,0.123,5,0.655,6,0.743,7,0.697,8,0.697,9,0.105,11,1.611,12,1.714,13,0.697,14,2.076,15,1.949,17,1.151,19,1.08,21,0.416,22,0.952,24,2.798,25,2.947,26,0.838,29,2.208,30,2.043,33,3.09,34,2.219,36,0.893,38,1.691,39,1.714,40,1.93,41,2.87,42,1.397,43,2.067,44,1.624,46,1.025,47,0.025,48,1.378,49,1.201,50,1.025,51,2.088,53,1.423,54,1.408,58,2.043,59,3.045,61,1.836,69,0.284,70,0.123,72,0.22,75,0.123,76,0.071,78,1.093,80,1.448,81,0.519,82,0.969,83,1.714,84,0.969,92,0.969,94,0.969,95,1.448,96,2.242,97,1.448,98,2.242,99,1.448,107,1.04,116,1.319,117,1.609,119,1.319,120,0.743,133,2.5,143,0.242,144,1.014,145,1.014,146,0.697,147,1.488,148,0.697,149,0.697,150,0.541,151,0.697,152,0.507,153,0.697,154,0.507,155,0.697,156,0.507,157,0.577,158,0.697,159,0.507,160,0.697,161,0.507,162,0.697,163,0.475,164,0.697,165,0.507,166,0.697,167,0.507,168,0.697,169,0.507,170,0.697,171,0.507,172,0.697,173,1.082,174,0.697,175,0.475,176,0.697,177,0.697,178,0.008,179,0.012,180,0.008,241,0.969,287,1.814,294,1.401,297,1.448,302,2.208,303,1.603,327,1.448,336,2.586,337,2.4,381,1.825,433,1.609,564,1.319,582,1.609,637,1.825,643,1.825,644,1.609,646,1.825,787,4.455,799,3.434,816,3.686,854,1.609,855,4.08,856,3.334,857,4.097,858,3.334,859,4.08,860,4.593,861,4.593,862,4.593,863,3.334,864,4.593,865,2.153,866,3.334,867,2.153,868,2.153,869,3.334,870,2.153,871,2.153,872,2.153,873,2.153,874,2.153,875,2.153,876,2.153,877,2.153,878,2.153,879,2.153,880,2.153,881,2.153,882,2.153,883,2.153,884,1.609,885,3.459,886,1.825,887,3.928,888,1.825,889,3.928,890,1.825,891,3.928,892,1.825,893,3.434,894,1.825,895,4.233,896,2.826,897,1.825,898,1.825,899,1.825,900,1.825,901,1.825,902,1.825,903,1.825,904,3.459,905,1.825,906,1.825,907,1.825,908,1.825,909,1.825,910,1.609,911,1.609,912,1.609,913,1.609,914,1.609,915,1.609,916,1.609,917,1.609,918,1.609,919,1.609,920,1.609,921,1.609,922,2.153,923,2.153,924,2.153,925,2.153,926,2.153,927,2.153,928,2.153,929,2.153,930,2.153,931,2.153,932,2.153,933,2.153,934,2.153,935,2.153,936,1.825,937,2.153,938,2.153,939,2.153,940,4.593,941,3.334,942,3.334,943,2.153]],["title/modules/ProfilePageModule.html",[181,0.316,822,2.086]],["body/modules/ProfilePageModule.html",[0,0.016,3,0.256,4,0.256,9,0.219,47,0.025,69,0.381,70,0.256,72,0.459,75,0.256,76,0.148,81,0.698,143,0.504,173,1.593,178,0.016,179,0.019,180,0.016,181,0.416,183,1.057,184,1.201,185,1.847,186,1.364,187,1.364,188,1.201,191,1.697,192,1.364,193,1.364,195,1.593,196,1.926,197,1.364,198,1.926,199,1.453,200,1.627,201,1.453,202,0.926,203,1.808,205,1.453,206,1.28,207,1.548,822,4.084,944,3.802,945,3.802,946,4.485,947,4.485]],["title/components/RegisterPage.html",[0,0.012,175,0.751]],["body/components/RegisterPage.html",[0,0.015,1,0.572,2,1.111,3,0.139,4,0.139,5,0.738,6,0.838,7,0.786,8,0.786,9,0.119,12,1.02,13,0.786,14,2.121,15,1.991,17,1.261,19,1.183,21,0.468,22,1.043,24,2.752,25,2.286,26,0.918,29,2.528,30,2.239,31,2.995,36,0.979,39,1.846,40,2.053,41,2.761,42,1.893,43,2.199,44,1.586,46,0.918,47,0.025,48,1.318,49,1.181,50,0.918,53,1.318,54,0.979,58,2.239,59,3.212,61,1.977,69,0.299,70,0.139,72,0.248,75,0.139,76,0.08,78,1.404,81,0.569,82,1.092,83,2.202,84,1.092,85,1.092,92,1.092,94,1.092,99,1.632,100,2.955,111,1.632,112,1.487,113,1.814,116,1.487,119,1.487,120,1.687,143,0.273,144,1.111,145,1.111,146,0.786,147,1.583,148,0.786,149,0.786,150,0.61,151,0.786,152,0.572,153,0.786,154,0.572,155,0.786,156,0.572,157,0.65,158,0.786,159,0.572,160,0.786,161,0.572,162,0.786,163,0.536,164,0.786,165,0.572,166,0.786,167,0.572,168,0.786,169,0.572,170,0.786,171,0.572,172,0.786,173,0.572,174,0.786,175,1.079,176,0.786,177,0.786,178,0.008,179,0.013,180,0.008,202,0.501,241,1.092,287,1.517,294,2.202,302,2.202,303,2.06,446,1.814,465,3.388,467,1.487,564,1.487,596,1.814,612,3.097,614,4.144,615,3.284,616,3.284,617,3.654,618,2.286,619,3.654,631,2.058,632,2.058,633,2.058,636,2.058,644,1.814,647,3.097,648,2.058,649,2.058,650,2.058,651,2.058,652,2.058,654,2.058,857,3.284,936,2.058,948,2.058,949,4.393,950,3.653,951,3.097,952,3.653,953,4.888,954,3.653,955,2.427,956,2.427,957,2.427,958,2.427,959,2.427,960,2.427,961,2.427,962,2.427,963,2.427,964,2.427,965,2.427,966,2.427,967,2.427,968,2.427,969,5.242,970,5.242,971,4.888,972,2.427,973,2.427,974,2.427,975,2.427,976,2.427,977,3.653,978,2.427,979,2.427,980,2.427,981,2.427,982,2.427,983,2.427,984,2.427,985,2.427,986,2.427,987,2.427,988,3.653]],["title/modules/RegisterPageModule.html",[181,0.316,823,2.086]],["body/modules/RegisterPageModule.html",[0,0.016,3,0.256,4,0.256,9,0.219,47,0.025,69,0.381,70,0.256,72,0.459,75,0.256,76,0.148,81,0.698,143,0.504,175,1.492,178,0.016,179,0.019,180,0.016,181,0.416,183,1.057,184,1.201,185,1.847,186,1.364,187,1.364,188,1.201,191,1.697,192,1.364,193,1.364,195,1.593,196,1.926,197,1.364,198,1.926,199,1.453,200,1.627,201,1.453,202,0.926,203,1.808,205,1.453,206,1.28,207,1.548,823,4.084,989,3.802,990,3.802,991,4.485,992,4.485]],["title/injectables/RegisterService.html",[43,1.532,281,1.644]],["body/injectables/RegisterService.html",[3,0.209,4,0.209,9,0.179,21,0.707,22,1.398,23,3.761,24,3.956,25,3.542,26,1.231,36,0.982,43,2.204,44,1.587,46,1.543,47,0.025,48,1.543,49,1.012,50,1.543,53,1.48,69,0.315,70,0.209,75,0.209,76,0.121,120,2.033,178,0.013,179,0.017,180,0.013,209,2.063,239,3.107,281,2.366,283,2.465,287,1.691,314,2.465,425,5.625,426,2.739,474,2.465,857,4.588,951,5.203,993,3.107,994,5.889,995,4.898,996,4.898,997,4.898,998,4.898,999,3.665,1000,6.137,1001,3.665,1002,4.898,1003,3.665,1004,4.898,1005,3.665,1006,4.898,1007,3.665,1008,4.898,1009,3.665,1010,3.665,1011,3.665,1012,3.665,1013,3.665,1014,3.665]],["title/interfaces/Sound.html",[308,2.289,312,2.086]],["body/interfaces/Sound.html",[3,0.214,4,0.214,9,0.183,21,0.723,22,1.419,47,0.025,49,1.152,54,1.004,69,0.319,70,0.214,72,0.384,75,0.214,76,0.123,78,1.495,107,2.695,112,2.297,120,2.135,178,0.013,179,0.017,180,0.013,209,2.11,213,4.17,218,2.297,281,2.402,282,2.297,284,2.801,285,3.177,286,3.177,287,1.294,288,3.177,291,4.17,293,3.177,294,2.8,296,5.65,297,4.159,298,3.177,299,5.752,301,3.177,304,2.402,305,3.752,307,3.345,308,3.752,310,2.801,311,3.177,312,2.297,313,5.388,314,2.521,315,2.801,316,3.177,317,3.177,318,3.177,319,4.215,320,3.177,321,4.215,322,3.177,323,3.177,324,2.801,325,3.177,326,3.177,327,2.521,328,3.177,329,3.177,330,3.177,331,3.177,1015,3.748]],["title/injectables/ThemeService.html",[38,1.253,281,1.644]],["body/injectables/ThemeService.html",[3,0.126,4,0.126,9,0.107,21,0.425,26,0.852,36,0.908,38,1.248,41,2.669,44,1.262,46,1.168,47,0.025,48,1.262,49,0.7,50,1.168,51,1.425,53,1.04,54,1.108,69,0.265,70,0.126,75,0.126,76,0.072,78,1.345,81,0.782,120,1.428,126,2.535,129,4.011,136,2.152,138,4.005,178,0.008,179,0.012,180,0.008,197,0.669,209,1.239,241,0.99,281,1.638,283,1.48,294,1.738,303,1.826,304,1.063,314,1.48,674,2.535,816,3.936,887,4.374,889,4.374,891,4.546,893,4.374,895,4.546,910,1.645,911,1.645,912,1.645,913,4.374,914,1.645,915,4.374,916,1.645,917,4.374,918,1.645,919,1.645,920,1.645,921,1.645,1016,1.48,1017,3.391,1018,3.391,1019,3.391,1020,3.391,1021,4.136,1022,2.201,1023,5.302,1024,2.201,1025,3.391,1026,2.201,1027,4.136,1028,3.391,1029,2.201,1030,3.391,1031,2.201,1032,2.201,1033,2.201,1034,2.201,1035,2.201,1036,2.201,1037,3.391,1038,2.201,1039,2.201,1040,1.645,1041,3.391,1042,2.201,1043,2.201,1044,2.201,1045,2.201,1046,1.866,1047,2.201,1048,2.201,1049,2.201,1050,2.535,1051,2.875,1052,1.866,1053,3.507,1054,2.201,1055,4.647,1056,2.201,1057,2.201,1058,4.91,1059,3.391,1060,4.136,1061,4.136,1062,3.391,1063,6.529,1064,2.201,1065,2.201,1066,5.704,1067,5.852,1068,2.201,1069,5.852,1070,2.201,1071,2.201,1072,2.201,1073,2.201,1074,2.201,1075,2.201,1076,2.201,1077,2.201,1078,2.201,1079,2.201,1080,2.201,1081,2.201,1082,2.201,1083,2.201,1084,2.201,1085,2.201,1086,2.201,1087,2.201,1088,2.201,1089,2.201,1090,2.201,1091,2.201,1092,2.201,1093,2.201,1094,2.201,1095,2.201,1096,2.201,1097,2.201,1098,2.201,1099,2.201,1100,2.201,1101,2.201,1102,1.866,1103,1.866,1104,2.201,1105,2.201,1106,2.201,1107,2.201,1108,2.201]],["title/coverage.html",[1109,3.95]],["body/coverage.html",[0,0.024,1,0.875,9,0.181,10,3.147,38,1.367,43,1.67,47,0.025,49,0.767,76,0.122,150,0.933,152,0.875,154,0.875,156,0.875,159,0.875,161,0.875,163,0.82,165,0.875,167,0.875,169,0.875,171,0.875,173,0.875,175,0.82,178,0.013,179,0.017,180,0.013,208,3.147,233,2.775,252,2.775,262,2.775,264,3.147,278,2.09,281,2.683,282,2.275,284,3.693,304,1.794,308,2.497,312,2.275,332,3.147,359,3.147,400,2.275,401,3.147,461,3.147,481,3.147,592,6.045,607,3.147,670,3.147,695,3.147,721,3.147,782,3.147,854,3.693,884,2.775,948,3.147,993,3.147,1016,3.982,1046,5.484,1050,2.775,1051,4.189,1058,2.775,1109,3.147,1110,3.713,1111,3.713,1112,3.713,1113,4.941,1114,6.652,1115,3.713,1116,5.553,1117,4.941,1118,4.941,1119,3.713,1120,5.553,1121,3.713,1122,3.713,1123,3.713,1124,3.713,1125,3.713,1126,3.147,1127,3.147,1128,4.189,1129,3.147,1130,4.189,1131,3.147,1132,3.147,1133,3.713,1134,3.713]],["title/dependencies.html",[184,1.098,1135,2.836]],["body/dependencies.html",[5,1.282,47,0.025,70,0.241,72,0.432,129,2.375,144,1.282,178,0.015,179,0.019,180,0.015,184,1.13,197,1.282,199,1.366,202,0.871,218,3.934,219,3.153,221,3.153,235,4.551,236,3.611,241,1.898,249,2.837,250,2.837,251,2.837,291,3.153,305,2.837,310,3.153,324,3.153,426,3.153,1136,6.668,1137,4.218,1138,4.218,1139,4.218,1140,5.906,1141,4.218,1142,4.218,1143,4.218,1144,4.218,1145,4.218,1146,4.218,1147,4.218,1148,4.218,1149,4.218,1150,6.562,1151,4.218,1152,4.218,1153,4.218,1154,4.218,1155,4.218,1156,4.218,1157,4.218,1158,4.218,1159,4.218,1160,4.218,1161,4.218,1162,4.218,1163,4.218,1164,4.218,1165,4.218,1166,4.218,1167,5.368,1168,4.218,1169,4.218,1170,4.218,1171,4.218,1172,4.218,1173,4.218,1174,4.218,1175,4.218,1176,4.218,1177,4.218,1178,4.218]],["title/miscellaneous/functions.html",[1179,1.907,1180,3.474]],["body/miscellaneous/functions.html",[21,1.001,46,1.532,47,0.023,48,1.532,49,1.072,50,1.532,129,2.921,178,0.018,179,0.021,180,0.018,1016,3.49,1052,4.399,1053,4.399,1058,4.555,1102,4.399,1103,5.167,1126,5.167,1179,3.49,1180,4.399,1181,5.167,1182,6.094]],["title/index.html",[21,0.657,1183,2.886]],["body/index.html",[1,1.246,2,1.025,47,0.025,76,0.111,143,0.379,150,1.586,152,1.246,154,1.246,156,1.246,159,1.246,161,1.246,163,1.167,165,1.246,167,1.246,169,1.246,171,1.246,173,1.246,175,1.167,178,0.012,179,0.016,180,0.012,181,0.313,182,3.655,183,0.795,184,0.903,185,1.025,186,1.025,187,1.025,188,0.903,189,2.858,190,2.858,191,1.408,192,1.025,193,1.025,200,0.903,227,4.244,228,2.858,229,2.858,230,2.858,231,2.858,232,3.24,283,2.268,312,2.066,354,3.655,355,2.858,356,2.858,376,3.46,379,2.52,395,3.655,396,2.858,397,2.858,456,3.655,457,2.858,458,2.858,476,3.655,477,2.858,478,2.858,602,3.655,603,2.858,604,2.858,665,3.655,666,2.858,667,2.858,690,3.655,691,2.858,692,2.858,716,3.655,717,2.858,718,2.858,777,3.655,778,2.858,779,2.858,817,4.776,818,2.858,819,2.858,820,2.858,821,3.24,822,3.655,823,3.655,944,2.858,945,2.858,989,2.858,990,2.858,1183,2.858,1184,3.372,1185,3.372,1186,3.372]],["title/modules.html",[183,1.098]],["body/modules.html",[47,0.02,178,0.016,179,0.02,180,0.016,182,2.799,183,1.076,227,3.072,232,2.799,236,4.756,354,2.799,395,2.799,456,2.799,476,2.799,602,2.799,665,2.799,690,2.799,716,2.799,777,2.799,817,3.072,821,2.799,822,2.799,823,2.799,1187,7.071,1188,7.071,1189,7.109,1190,5.643,1191,5.643]],["title/routes.html",[200,1.248]],["body/routes.html",[47,0.022,178,0.019,179,0.022,180,0.019,200,1.491]],["title/miscellaneous/variables.html",[1040,3.063,1179,1.907]],["body/miscellaneous/variables.html",[21,0.733,47,0.025,49,1.318,107,1.835,178,0.013,179,0.017,180,0.013,233,2.839,248,3.22,252,3.749,253,2.839,254,3.22,255,3.22,302,2.733,303,2.507,307,2.824,816,4.177,854,2.839,884,3.749,885,3.22,886,3.22,887,4.642,888,3.22,889,4.642,890,3.22,891,4.642,892,3.22,893,4.642,894,3.22,895,4.642,896,4.252,897,3.22,898,3.22,899,3.22,900,3.22,901,3.22,902,3.22,903,3.22,904,3.22,905,3.22,906,3.22,907,3.22,908,3.22,909,3.22,910,3.749,911,3.749,912,3.749,913,3.749,914,3.749,915,3.749,916,3.749,917,3.749,918,3.749,919,3.749,920,3.749,921,3.749,1016,2.554,1040,2.839,1050,3.749,1127,3.22,1128,5.064,1129,3.22,1130,3.22,1131,4.252,1132,4.252,1179,2.554,1181,3.22,1192,3.798,1193,5.016,1194,3.798,1195,3.798,1196,3.798,1197,3.798,1198,3.798,1199,5.973,1200,5.016]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":592,"title":{},"body":{"components/GoalsPage.html":{},"coverage.html":{}}}],["0,0,0",{"_index":1099,"title":{},"body":{"injectables/ThemeService.html":{}}}],["0.1",{"_index":1055,"title":{},"body":{"injectables/ThemeService.html":{}}}],["0.1.1",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":1062,"title":{},"body":{"injectables/ThemeService.html":{}}}],["0.3.7",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["0.5.5",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["0.6.2",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":1104,"title":{},"body":{"injectables/ThemeService.html":{}}}],["0.8.29",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0cd1e8",{"_index":911,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":376,"title":{},"body":{"components/CalendarPage.html":{},"components/GoalsPage.html":{},"index.html":{}}}],["1.3.0",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":128,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["10dc60",{"_index":914,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["112,68,255",{"_index":1075,"title":{},"body":{"injectables/ThemeService.html":{}}}],["12,209,232",{"_index":1071,"title":{},"body":{"injectables/ThemeService.html":{}}}],["14",{"_index":1185,"title":{},"body":{"index.html":{}}}],["152,154,162",{"_index":1094,"title":{},"body":{"injectables/ThemeService.html":{}}}],["16",{"_index":1184,"title":{},"body":{"index.html":{}}}],["16,220,96",{"_index":1079,"title":{},"body":{"injectables/ThemeService.html":{}}}],["2",{"_index":378,"title":{},"body":{"components/CalendarPage.html":{},"components/GoalsPage.html":{}}}],["2.1.1",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":447,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["222428",{"_index":919,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["244,244,244",{"_index":1098,"title":{},"body":{"injectables/ThemeService.html":{}}}],["245,61,61",{"_index":1087,"title":{},"body":{"injectables/ThemeService.html":{}}}],["25",{"_index":135,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["255,206,0",{"_index":1083,"title":{},"body":{"injectables/ThemeService.html":{}}}],["255,255,255",{"_index":1066,"title":{},"body":{"injectables/ThemeService.html":{}}}],["25px",{"_index":942,"title":{},"body":{"components/ProfilePage.html":{}}}],["3",{"_index":379,"title":{},"body":{"components/CalendarPage.html":{},"components/GoalsPage.html":{},"index.html":{}}}],["3.0.1",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["3.0.5",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["3.0.9",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":651,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["34,34,34",{"_index":1091,"title":{},"body":{"injectables/ThemeService.html":{}}}],["34162a",{"_index":896,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["3880ff",{"_index":910,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["39bfbd",{"_index":905,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["495867",{"_index":903,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["4ce0b3",{"_index":906,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["4d9078",{"_index":888,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["5.3.3",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["50px",{"_index":664,"title":{},"body":{"components/HomePage.html":{}}}],["54",{"_index":1186,"title":{},"body":{"index.html":{}}}],["56,128,255",{"_index":1064,"title":{},"body":{"injectables/ThemeService.html":{}}}],["6.3.3",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["7044ff",{"_index":912,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["8cba80",{"_index":898,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["8px",{"_index":814,"title":{},"body":{"components/MenuPage.html":{}}}],["989aa2",{"_index":920,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":1020,"title":{},"body":{"injectables/ThemeService.html":{}}}],["achieved",{"_index":526,"title":{},"body":{"components/GoalsPage.html":{}}}],["achievements",{"_index":16,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{}}}],["achievements'},{'name",{"_index":149,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["achievements.page",{"_index":204,"title":{},"body":{"modules/AchievementsPageModule.html":{}}}],["achievements.page.html",{"_index":20,"title":{},"body":{"components/AchievementsPage.html":{}}}],["achievements.page.scss",{"_index":18,"title":{},"body":{"components/AchievementsPage.html":{}}}],["achievementspage",{"_index":1,"title":{"components/AchievementsPage.html":{}},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["achievementspagemodule",{"_index":182,"title":{"modules/AchievementsPageModule.html":{}},"body":{"modules/AchievementsPageModule.html":{},"modules/MenuPageModule.html":{},"index.html":{},"modules.html":{}}}],["active",{"_index":812,"title":{},"body":{"components/MenuPage.html":{}}}],["actual_component",{"_index":177,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["add",{"_index":364,"title":{},"body":{"components/CalendarPage.html":{},"components/DatesPage.html":{}}}],["afterviewinit",{"_index":739,"title":{},"body":{"components/MeditationPage.html":{}}}],["alert",{"_index":82,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["alert.present",{"_index":94,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["alertcontroller",{"_index":40,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["alertctrl",{"_index":39,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["align",{"_index":137,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["angular/common",{"_index":197,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"injectables/RegisterService.html":{}}}],["angular/compiler",{"_index":563,"title":{},"body":{"components/GoalsPage.html":{}}}],["angular/core",{"_index":70,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/core/src/render3",{"_index":566,"title":{},"body":{"components/GoalsPage.html":{}}}],["angular/forms",{"_index":199,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":202,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["app.component",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":150,"title":{"components/AppComponent.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["appmodule",{"_index":227,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apppage",{"_index":262,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":232,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["asset",{"_index":299,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["assets/meditation/beach.jpg",{"_index":763,"title":{},"body":{"components/MeditationPage.html":{}}}],["assets/meditation/forest.jpg",{"_index":758,"title":{},"body":{"components/MeditationPage.html":{}}}],["assets/meditation/forest.wav",{"_index":760,"title":{},"body":{"components/MeditationPage.html":{}}}],["assets/meditation/ocean.wav",{"_index":765,"title":{},"body":{"components/MeditationPage.html":{}}}],["assets/meditation/silence.flac",{"_index":768,"title":{},"body":{"components/MeditationPage.html":{}}}],["async",{"_index":29,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["ate",{"_index":543,"title":{},"body":{"components/GoalsPage.html":{}}}],["audio",{"_index":305,"title":{},"body":{"injectables/AudioService.html":{},"components/MeditationPage.html":{},"interfaces/Sound.html":{},"dependencies.html":{}}}],["audio.src",{"_index":320,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["audio/ngx",{"_index":311,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["audioplayer",{"_index":285,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["audioservice",{"_index":282,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/MeditationPage.html":{},"interfaces/Sound.html":{},"coverage.html":{}}}],["available",{"_index":1191,"title":{},"body":{"modules.html":{}}}],["await",{"_index":83,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["b4436c",{"_index":890,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["b682a5",{"_index":909,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["backdropdismiss",{"_index":755,"title":{},"body":{"components/MeditationPage.html":{}}}],["backgroud",{"_index":597,"title":{},"body":{"components/GoalsPage.html":{}}}],["background",{"_index":126,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"injectables/ThemeService.html":{}}}],["backtomain",{"_index":675,"title":{},"body":{"components/JournalPage.html":{}}}],["bar",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["base",{"_index":1057,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bcc2c7",{"_index":901,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["begin",{"_index":748,"title":{},"body":{"components/MeditationPage.html":{}}}],["better",{"_index":579,"title":{},"body":{"components/GoalsPage.html":{}}}],["black",{"_index":600,"title":{},"body":{"components/GoalsPage.html":{}}}],["blog",{"_index":333,"title":{},"body":{"components/BlogPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{}}}],["blog'},{'name",{"_index":153,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["blog.page",{"_index":358,"title":{},"body":{"modules/BlogPageModule.html":{}}}],["blog.page.html",{"_index":335,"title":{},"body":{"components/BlogPage.html":{}}}],["blog.page.scss",{"_index":334,"title":{},"body":{"components/BlogPage.html":{}}}],["blog/blog.module",{"_index":830,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["blog/blog.page",{"_index":842,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["blog/journal/journal.module",{"_index":831,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["blog/journal/journal.page",{"_index":843,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["blogpage",{"_index":152,"title":{"components/BlogPage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["blogpagemodule",{"_index":354,"title":{"modules/BlogPageModule.html":{}},"body":{"modules/BlogPageModule.html":{},"modules/MenuPageModule.html":{},"index.html":{},"modules.html":{}}}],["boolean",{"_index":297,"title":{},"body":{"injectables/AudioService.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"interfaces/Sound.html":{}}}],["bootstrap",{"_index":186,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["border",{"_index":813,"title":{},"body":{"components/MenuPage.html":{}}}],["bottle",{"_index":497,"title":{},"body":{"components/GoalsPage.html":{}}}],["bottle.checked",{"_index":590,"title":{},"body":{"components/GoalsPage.html":{}}}],["bottlecheck",{"_index":488,"title":{},"body":{"components/GoalsPage.html":{}}}],["bottlecheck(card",{"_index":496,"title":{},"body":{"components/GoalsPage.html":{}}}],["bottlenum",{"_index":516,"title":{},"body":{"components/GoalsPage.html":{}}}],["bottles",{"_index":484,"title":{},"body":{"components/GoalsPage.html":{}}}],["bottom:5vh",{"_index":663,"title":{},"body":{"components/HomePage.html":{}}}],["breathe",{"_index":746,"title":{},"body":{"components/MeditationPage.html":{}}}],["browse",{"_index":1189,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":270,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["bubbles",{"_index":650,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["button",{"_index":747,"title":{},"body":{"components/MeditationPage.html":{}}}],["buttons",{"_index":92,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["calendar",{"_index":360,"title":{},"body":{"components/CalendarPage.html":{},"modules/MenuRoutingModule.html":{}}}],["calendar'},{'name",{"_index":155,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["calendar.page",{"_index":399,"title":{},"body":{"modules/CalendarPageModule.html":{}}}],["calendar.page.html",{"_index":362,"title":{},"body":{"components/CalendarPage.html":{}}}],["calendar.page.scss",{"_index":361,"title":{},"body":{"components/CalendarPage.html":{}}}],["calendar/calendar.module",{"_index":835,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["calendar/calendar.page",{"_index":847,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["calendar/dates/dates.module",{"_index":836,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["calendar/dates/dates.page",{"_index":848,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["calendarpage",{"_index":154,"title":{"components/CalendarPage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["calendarpagemodule",{"_index":395,"title":{"modules/CalendarPageModule.html":{}},"body":{"modules/CalendarPageModule.html":{},"modules/MenuPageModule.html":{},"index.html":{},"modules.html":{}}}],["cancel",{"_index":466,"title":{},"body":{"components/DatesPage.html":{}}}],["card",{"_index":57,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["card.achieved",{"_index":106,"title":{},"body":{"components/AchievementsPage.html":{}}}],["card.desc",{"_index":594,"title":{},"body":{"components/GoalsPage.html":{}}}],["card.goal",{"_index":585,"title":{},"body":{"components/GoalsPage.html":{}}}],["card.name",{"_index":122,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["cards",{"_index":23,"title":{},"body":{"components/AchievementsPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"injectables/RegisterService.html":{}}}],["cards:any",{"_index":77,"title":{},"body":{"components/AchievementsPage.html":{},"components/MainPage.html":{}}}],["cardtemplate",{"_index":485,"title":{},"body":{"components/GoalsPage.html":{}}}],["cardupdate",{"_index":27,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["center",{"_index":132,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{}}}],["centercard",{"_index":715,"title":{},"body":{"components/MainPage.html":{}}}],["change",{"_index":940,"title":{},"body":{"components/ProfilePage.html":{}}}],["changecolor",{"_index":861,"title":{},"body":{"components/ProfilePage.html":{}}}],["changed",{"_index":442,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["changepassword",{"_index":862,"title":{},"body":{"components/ProfilePage.html":{}}}],["changepassworduser",{"_index":995,"title":{},"body":{"injectables/RegisterService.html":{}}}],["changepassworduser(username",{"_index":1002,"title":{},"body":{"injectables/RegisterService.html":{}}}],["changetheme",{"_index":863,"title":{},"body":{"components/ProfilePage.html":{}}}],["changetheme(name",{"_index":869,"title":{},"body":{"components/ProfilePage.html":{}}}],["chat",{"_index":157,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["chatroompage",{"_index":156,"title":{"components/ChatRoomPage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["chatroompagemodule",{"_index":456,"title":{"modules/ChatRoomPageModule.html":{}},"body":{"modules/ChatRoomPageModule.html":{},"modules/MenuPageModule.html":{},"index.html":{},"modules.html":{}}}],["check",{"_index":524,"title":{},"body":{"components/GoalsPage.html":{}}}],["checked",{"_index":518,"title":{},"body":{"components/GoalsPage.html":{}}}],["checked\":\"false",{"_index":517,"title":{},"body":{"components/GoalsPage.html":{}}}],["checklist",{"_index":383,"title":{},"body":{"components/CalendarPage.html":{}}}],["children",{"_index":849,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["choices",{"_index":541,"title":{},"body":{"components/GoalsPage.html":{}}}],["choose",{"_index":576,"title":{},"body":{"components/GoalsPage.html":{},"components/MeditationPage.html":{}}}],["choosepic",{"_index":728,"title":{},"body":{"components/MeditationPage.html":{}}}],["chosenpic",{"_index":725,"title":{},"body":{"components/MeditationPage.html":{}}}],["chosenpic:string",{"_index":743,"title":{},"body":{"components/MeditationPage.html":{}}}],["class",{"_index":76,"title":{"classes/AppPage.html":{}},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":263,"title":{},"body":{"classes/AppPage.html":{}}}],["close",{"_index":750,"title":{},"body":{"components/MeditationPage.html":{}}}],["cluster_achievementspagemodule",{"_index":189,"title":{},"body":{"modules/AchievementsPageModule.html":{},"index.html":{}}}],["cluster_achievementspagemodule_declarations",{"_index":190,"title":{},"body":{"modules/AchievementsPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_blogpagemodule",{"_index":355,"title":{},"body":{"modules/BlogPageModule.html":{},"index.html":{}}}],["cluster_blogpagemodule_declarations",{"_index":356,"title":{},"body":{"modules/BlogPageModule.html":{},"index.html":{}}}],["cluster_calendarpagemodule",{"_index":396,"title":{},"body":{"modules/CalendarPageModule.html":{},"index.html":{}}}],["cluster_calendarpagemodule_declarations",{"_index":397,"title":{},"body":{"modules/CalendarPageModule.html":{},"index.html":{}}}],["cluster_chatroompagemodule",{"_index":457,"title":{},"body":{"modules/ChatRoomPageModule.html":{},"index.html":{}}}],["cluster_chatroompagemodule_declarations",{"_index":458,"title":{},"body":{"modules/ChatRoomPageModule.html":{},"index.html":{}}}],["cluster_datespagemodule",{"_index":477,"title":{},"body":{"modules/DatesPageModule.html":{},"index.html":{}}}],["cluster_datespagemodule_declarations",{"_index":478,"title":{},"body":{"modules/DatesPageModule.html":{},"index.html":{}}}],["cluster_goalspagemodule",{"_index":603,"title":{},"body":{"modules/GoalsPageModule.html":{},"index.html":{}}}],["cluster_goalspagemodule_declarations",{"_index":604,"title":{},"body":{"modules/GoalsPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":666,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":667,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_journalpagemodule",{"_index":691,"title":{},"body":{"modules/JournalPageModule.html":{},"index.html":{}}}],["cluster_journalpagemodule_declarations",{"_index":692,"title":{},"body":{"modules/JournalPageModule.html":{},"index.html":{}}}],["cluster_mainpagemodule",{"_index":717,"title":{},"body":{"modules/MainPageModule.html":{},"index.html":{}}}],["cluster_mainpagemodule_declarations",{"_index":718,"title":{},"body":{"modules/MainPageModule.html":{},"index.html":{}}}],["cluster_meditationpagemodule",{"_index":778,"title":{},"body":{"modules/MeditationPageModule.html":{},"index.html":{}}}],["cluster_meditationpagemodule_declarations",{"_index":779,"title":{},"body":{"modules/MeditationPageModule.html":{},"index.html":{}}}],["cluster_menupagemodule",{"_index":818,"title":{},"body":{"modules/MenuPageModule.html":{},"index.html":{}}}],["cluster_menupagemodule_declarations",{"_index":819,"title":{},"body":{"modules/MenuPageModule.html":{},"index.html":{}}}],["cluster_menupagemodule_imports",{"_index":820,"title":{},"body":{"modules/MenuPageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule",{"_index":944,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":945,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_registerpagemodule",{"_index":989,"title":{},"body":{"modules/RegisterPageModule.html":{},"index.html":{}}}],["cluster_registerpagemodule_declarations",{"_index":990,"title":{},"body":{"modules/RegisterPageModule.html":{},"index.html":{}}}],["color",{"_index":129,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MenuPage.html":{},"injectables/ThemeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["color(color",{"_index":1105,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(danger).darken(shaderatio",{"_index":1089,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(danger).lighten(tintratio",{"_index":1090,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(dark).darken(shaderatio",{"_index":1092,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(dark).lighten(tintratio",{"_index":1093,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(light).darken(shaderatio",{"_index":1100,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(light).lighten(tintratio",{"_index":1101,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(medium).darken(shaderatio",{"_index":1096,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(medium).lighten(tintratio",{"_index":1097,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(primary).darken(shaderatio",{"_index":1068,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(primary).lighten(tintratio",{"_index":1070,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(secondary).darken(shaderatio",{"_index":1073,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(secondary).lighten(tintratio",{"_index":1074,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(success).darken(shaderatio",{"_index":1081,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(success).lighten(tintratio",{"_index":1082,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(tertiary).darken(shaderatio",{"_index":1077,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(tertiary).lighten(tintratio",{"_index":1078,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(warning).darken(shaderatio",{"_index":1085,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color(warning).lighten(tintratio",{"_index":1086,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.darken(ratio",{"_index":1108,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.isdark",{"_index":1106,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.lighten(ratio",{"_index":1107,"title":{},"body":{"injectables/ThemeService.html":{}}}],["colors",{"_index":1053,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["commonmodule",{"_index":196,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{}}}],["completed",{"_index":88,"title":{},"body":{"components/AchievementsPage.html":{}}}],["component",{"_index":0,"title":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":148,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"index.html":{}}}],["config",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["congratulate",{"_index":489,"title":{},"body":{"components/GoalsPage.html":{}}}],["congratulate(card",{"_index":500,"title":{},"body":{"components/GoalsPage.html":{}}}],["console.log('your",{"_index":96,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{}}}],["console.log(card",{"_index":589,"title":{},"body":{"components/GoalsPage.html":{}}}],["console.log(err",{"_index":328,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["console.log(res",{"_index":112,"title":{},"body":{"components/AchievementsPage.html":{},"injectables/AudioService.html":{},"components/GoalsPage.html":{},"components/RegisterPage.html":{},"interfaces/Sound.html":{}}}],["console.log(res.user",{"_index":643,"title":{},"body":{"components/HomePage.html":{},"components/ProfilePage.html":{}}}],["const",{"_index":81,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/ThemeService.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"injectables/ThemeService.html":{}}}],["constructor(document",{"_index":1022,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(http",{"_index":999,"title":{},"body":{"injectables/RegisterService.html":{}}}],["constructor(nav",{"_index":865,"title":{},"body":{"components/ProfilePage.html":{}}}],["constructor(navctrl",{"_index":411,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["constructor(platform",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{}}}],["constructor(private",{"_index":315,"title":{},"body":{"injectables/AudioService.html":{},"components/MenuPage.html":{},"interfaces/Sound.html":{}}}],["constructor(public",{"_index":474,"title":{},"body":{"components/DatesPage.html":{},"components/HomePage.html":{},"components/MainPage.html":{},"injectables/RegisterService.html":{}}}],["constructor(router",{"_index":467,"title":{},"body":{"components/DatesPage.html":{},"components/HomePage.html":{},"components/MainPage.html":{},"components/MenuPage.html":{},"components/RegisterPage.html":{}}}],["constructor(theme",{"_index":37,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{}}}],["content",{"_index":142,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["content')).gettext",{"_index":272,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contrast",{"_index":1058,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["contrast(color",{"_index":1102,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["contrast(danger",{"_index":1088,"title":{},"body":{"injectables/ThemeService.html":{}}}],["contrast(dark",{"_index":1061,"title":{},"body":{"injectables/ThemeService.html":{}}}],["contrast(light",{"_index":1060,"title":{},"body":{"injectables/ThemeService.html":{}}}],["contrast(medium",{"_index":1095,"title":{},"body":{"injectables/ThemeService.html":{}}}],["contrast(primary",{"_index":1065,"title":{},"body":{"injectables/ThemeService.html":{}}}],["contrast(secondary",{"_index":1072,"title":{},"body":{"injectables/ThemeService.html":{}}}],["contrast(success",{"_index":1080,"title":{},"body":{"injectables/ThemeService.html":{}}}],["contrast(tertiary",{"_index":1076,"title":{},"body":{"injectables/ThemeService.html":{}}}],["contrast(warning",{"_index":1084,"title":{},"body":{"injectables/ThemeService.html":{}}}],["cordova",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["cornsilk",{"_index":599,"title":{},"body":{"components/GoalsPage.html":{}}}],["cover",{"_index":598,"title":{},"body":{"components/GoalsPage.html":{},"components/MeditationPage.html":{}}}],["coverage",{"_index":1109,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["css",{"_index":1027,"title":{},"body":{"injectables/ThemeService.html":{}}}],["cssclass",{"_index":388,"title":{},"body":{"components/CalendarPage.html":{},"components/GoalsPage.html":{}}}],["csstext",{"_index":1041,"title":{},"body":{"injectables/ThemeService.html":{}}}],["csstextgenerator",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["csstextgenerator(colors",{"_index":1052,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["csstextgenerator(theme",{"_index":1042,"title":{},"body":{"injectables/ThemeService.html":{}}}],["current",{"_index":586,"title":{},"body":{"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["custom",{"_index":389,"title":{},"body":{"components/CalendarPage.html":{},"components/GoalsPage.html":{}}}],["danger",{"_index":917,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["dark",{"_index":895,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":386,"title":{},"body":{"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/GoalsPage.html":{},"components/MeditationPage.html":{}}}],["data['event",{"_index":432,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["data['user",{"_index":431,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["date:'dd.mm",{"_index":452,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["date:\\'dd.mm",{"_index":455,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["dates",{"_index":462,"title":{},"body":{"components/DatesPage.html":{},"modules/MenuRoutingModule.html":{}}}],["dates'},{'name",{"_index":160,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["dates.page",{"_index":480,"title":{},"body":{"modules/DatesPageModule.html":{}}}],["dates.page.html",{"_index":464,"title":{},"body":{"components/DatesPage.html":{}}}],["dates.page.scss",{"_index":463,"title":{},"body":{"components/DatesPage.html":{}}}],["datespage",{"_index":159,"title":{"components/DatesPage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["datespagemodule",{"_index":476,"title":{"modules/DatesPageModule.html":{}},"body":{"modules/DatesPageModule.html":{},"modules/MenuPageModule.html":{},"index.html":{},"modules.html":{}}}],["day",{"_index":503,"title":{},"body":{"components/GoalsPage.html":{}}}],["daycheck",{"_index":490,"title":{},"body":{"components/GoalsPage.html":{}}}],["daycheck(card",{"_index":502,"title":{},"body":{"components/GoalsPage.html":{}}}],["declarations",{"_index":185,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["default",{"_index":302,"title":{},"body":{"injectables/AudioService.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/GoalsPage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1050,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1044,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"injectables/ThemeService.html":{}}}],["delete",{"_index":689,"title":{},"body":{"components/JournalPage.html":{}}}],["deleteach",{"_index":28,"title":{},"body":{"components/AchievementsPage.html":{}}}],["deleteach(card",{"_index":55,"title":{},"body":{"components/AchievementsPage.html":{}}}],["deletecard",{"_index":491,"title":{},"body":{"components/GoalsPage.html":{}}}],["deletecard(card",{"_index":505,"title":{},"body":{"components/GoalsPage.html":{}}}],["dependencies",{"_index":184,"title":{"dependencies.html":{}},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["desc",{"_index":373,"title":{},"body":{"components/CalendarPage.html":{},"components/GoalsPage.html":{}}}],["destination",{"_index":754,"title":{},"body":{"components/MeditationPage.html":{}}}],["devdactic",{"_index":708,"title":{},"body":{"components/MainPage.html":{}}}],["diet",{"_index":492,"title":{},"body":{"components/GoalsPage.html":{}}}],["directive",{"_index":146,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["directives",{"_index":176,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["dismiss",{"_index":119,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["displayalert",{"_index":30,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["displayalert(header",{"_index":58,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["document",{"_index":1023,"title":{},"body":{"injectables/ThemeService.html":{}}}],["documentation",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["drank",{"_index":522,"title":{},"body":{"components/GoalsPage.html":{}}}],["drink",{"_index":527,"title":{},"body":{"components/GoalsPage.html":{}}}],["drinkwater",{"_index":493,"title":{},"body":{"components/GoalsPage.html":{}}}],["duration",{"_index":446,"title":{},"body":{"components/ChatRoomPage.html":{},"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["dynamic",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":264,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":268,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":267,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":532,"title":{},"body":{"components/GoalsPage.html":{}}}],["eat",{"_index":536,"title":{},"body":{"components/GoalsPage.html":{}}}],["element",{"_index":145,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["element(by.deepcss('app",{"_index":271,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":857,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{}}}],["email:string",{"_index":966,"title":{},"body":{"components/RegisterPage.html":{}}}],["empty",{"_index":639,"title":{},"body":{"components/HomePage.html":{}}}],["enter",{"_index":971,"title":{},"body":{"components/RegisterPage.html":{}}}],["entry.val",{"_index":394,"title":{},"body":{"components/CalendarPage.html":{}}}],["entrycomponents",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":327,"title":{},"body":{"injectables/AudioService.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{},"interfaces/Sound.html":{}}}],["err.error",{"_index":646,"title":{},"body":{"components/HomePage.html":{},"components/ProfilePage.html":{}}}],["error",{"_index":116,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["event",{"_index":371,"title":{},"body":{"components/CalendarPage.html":{},"components/DatesPage.html":{}}}],["event.url",{"_index":807,"title":{},"body":{"components/MenuPage.html":{}}}],["example",{"_index":350,"title":{},"body":{"components/BlogPage.html":{}}}],["exercise",{"_index":494,"title":{},"body":{"components/GoalsPage.html":{}}}],["experience",{"_index":749,"title":{},"body":{"components/MeditationPage.html":{}}}],["export",{"_index":75,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{}}}],["exports",{"_index":188,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["eyes",{"_index":751,"title":{},"body":{"components/MeditationPage.html":{}}}],["f",{"_index":555,"title":{},"body":{"components/GoalsPage.html":{}}}],["f04141",{"_index":918,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["f4edf2",{"_index":908,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["f4f5f8",{"_index":921,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["f78154",{"_index":886,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["f7f7ff",{"_index":902,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":638,"title":{},"body":{"components/HomePage.html":{}}}],["false",{"_index":107,"title":{},"body":{"components/AchievementsPage.html":{},"injectables/AudioService.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"interfaces/Sound.html":{},"miscellaneous/variables.html":{}}}],["fcd0a2",{"_index":894,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["fcff6c",{"_index":899,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["fde8df",{"_index":892,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["fe5f55",{"_index":900,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["ff5e79",{"_index":907,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["ffce00",{"_index":916,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["fields",{"_index":640,"title":{},"body":{"components/HomePage.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["fixed",{"_index":776,"title":{},"body":{"components/MeditationPage.html":{}}}],["food",{"_index":545,"title":{},"body":{"components/GoalsPage.html":{}}}],["for(num;num",{"_index":593,"title":{},"body":{"components/GoalsPage.html":{}}}],["forcewebaudio",{"_index":286,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["forest",{"_index":756,"title":{},"body":{"components/MeditationPage.html":{}}}],["form",{"_index":363,"title":{},"body":{"components/CalendarPage.html":{}}}],["formsmodule",{"_index":198,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{}}}],["friend's",{"_index":352,"title":{},"body":{"components/BlogPage.html":{}}}],["friend\\'s",{"_index":353,"title":{},"body":{"components/BlogPage.html":{}}}],["friends",{"_index":346,"title":{},"body":{"components/BlogPage.html":{}}}],["from'@ionic/storage",{"_index":73,"title":{},"body":{"components/AchievementsPage.html":{}}}],["full",{"_index":972,"title":{},"body":{"components/RegisterPage.html":{}}}],["fullname",{"_index":951,"title":{},"body":{"components/RegisterPage.html":{},"injectables/RegisterService.html":{}}}],["fullname:string",{"_index":965,"title":{},"body":{"components/RegisterPage.html":{}}}],["function",{"_index":1051,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["functions",{"_index":1180,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getmessages",{"_index":406,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["getparagraphtext",{"_index":265,"title":{},"body":{"classes/AppPage.html":{}}}],["getstoredtheme",{"_index":1032,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getusers",{"_index":407,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["global",{"_index":1039,"title":{},"body":{"injectables/ThemeService.html":{}}}],["go",{"_index":525,"title":{},"body":{"components/GoalsPage.html":{}}}],["goal",{"_index":520,"title":{},"body":{"components/GoalsPage.html":{}}}],["goals",{"_index":89,"title":{},"body":{"components/AchievementsPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{}}}],["goals'},{'name",{"_index":162,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["goals.page",{"_index":606,"title":{},"body":{"modules/GoalsPageModule.html":{}}}],["goals.page.html",{"_index":483,"title":{},"body":{"components/GoalsPage.html":{}}}],["goals.page.scss",{"_index":482,"title":{},"body":{"components/GoalsPage.html":{}}}],["goals/achievements/achievements.module",{"_index":833,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["goals/achievements/achievements.page",{"_index":846,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["goals/goals.module",{"_index":832,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["goals/goals.page",{"_index":845,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["goalspage",{"_index":161,"title":{"components/GoalsPage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["goalspagemodule",{"_index":602,"title":{"modules/GoalsPageModule.html":{}},"body":{"modules/GoalsPageModule.html":{},"modules/MenuPageModule.html":{},"index.html":{},"modules.html":{}}}],["gone",{"_index":531,"title":{},"body":{"components/GoalsPage.html":{}}}],["good",{"_index":90,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["goregister",{"_index":611,"title":{},"body":{"components/HomePage.html":{}}}],["graph",{"_index":1190,"title":{},"body":{"modules.html":{}}}],["gym",{"_index":529,"title":{},"body":{"components/GoalsPage.html":{}}}],["gymdays",{"_index":486,"title":{},"body":{"components/GoalsPage.html":{}}}],["handler",{"_index":385,"title":{},"body":{"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/MeditationPage.html":{}}}],["happy",{"_index":542,"title":{},"body":{"components/GoalsPage.html":{}}}],["header",{"_index":61,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["health",{"_index":540,"title":{},"body":{"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["healthier",{"_index":537,"title":{},"body":{"components/GoalsPage.html":{}}}],["height:300px",{"_index":125,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["here",{"_index":86,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/JournalPage.html":{}}}],["hh:mm",{"_index":453,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["home",{"_index":608,"title":{},"body":{"components/HomePage.html":{},"modules/MenuRoutingModule.html":{}}}],["home'},{'name",{"_index":164,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["home.page",{"_index":669,"title":{},"body":{"modules/HomePageModule.html":{}}}],["home.page.html",{"_index":610,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":609,"title":{},"body":{"components/HomePage.html":{}}}],["home/home.page",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["homepage",{"_index":163,"title":{"components/HomePage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":665,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/MenuPageModule.html":{},"index.html":{},"modules.html":{}}}],["hour",{"_index":528,"title":{},"body":{"components/GoalsPage.html":{}}}],["html",{"_index":144,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"dependencies.html":{}}}],["htmlaudioelement",{"_index":301,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["http",{"_index":994,"title":{},"body":{"injectables/RegisterService.html":{}}}],["http://localhost:3001",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1000,"title":{},"body":{"injectables/RegisterService.html":{}}}],["httpclientmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["identifier",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["if(res.error",{"_index":981,"title":{},"body":{"components/RegisterPage.html":{}}}],["if(res.user",{"_index":644,"title":{},"body":{"components/HomePage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["if(soundtoplay.isnative",{"_index":325,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["if(this.email.length==0",{"_index":973,"title":{},"body":{"components/RegisterPage.html":{}}}],["if(this.fullname.length==0",{"_index":968,"title":{},"body":{"components/RegisterPage.html":{}}}],["if(this.picdesc",{"_index":770,"title":{},"body":{"components/MeditationPage.html":{}}}],["if(this.platform.is('cordova",{"_index":316,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["if(this.playing",{"_index":769,"title":{},"body":{"components/MeditationPage.html":{}}}],["if(this.subcolor==\"primary",{"_index":931,"title":{},"body":{"components/ProfilePage.html":{}}}],["if(this.subscribed==false",{"_index":926,"title":{},"body":{"components/ProfilePage.html":{}}}],["if(this.username",{"_index":634,"title":{},"body":{"components/HomePage.html":{}}}],["if(this.username.length==0",{"_index":974,"title":{},"body":{"components/RegisterPage.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/DatesPage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{}}}],["import",{"_index":69,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{}}}],["important",{"_index":131,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["imports",{"_index":206,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{}}}],["improve",{"_index":567,"title":{},"body":{"components/GoalsPage.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{}}}],["initializeapp",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":1034,"title":{},"body":{"injectables/ThemeService.html":{}}}],["inject(document",{"_index":1035,"title":{},"body":{"injectables/ThemeService.html":{}}}],["injectable",{"_index":281,"title":{"injectables/AudioService.html":{},"injectables/RegisterService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/AudioService.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":283,"title":{},"body":{"injectables/AudioService.html":{},"injectables/RegisterService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["input',\"please",{"_index":970,"title":{},"body":{"components/RegisterPage.html":{}}}],["instrumenter",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["intake",{"_index":569,"title":{},"body":{"components/GoalsPage.html":{}}}],["interface",{"_index":312,"title":{"interfaces/Sound.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":1015,"title":{},"body":{"interfaces/Sound.html":{}}}],["io",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"components/ChatRoomPage.html":{},"components/MainPage.html":{},"dependencies.html":{}}}],["ion",{"_index":138,"title":{},"body":{"components/AchievementsPage.html":{},"classes/AppPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/MenuPage.html":{},"injectables/ThemeService.html":{}}}],["ionic",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AudioService.html":{},"interfaces/Sound.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":72,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"interfaces/Sound.html":{},"dependencies.html":{}}}],["ionic/app",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["ionic/storage",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":203,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{}}}],["ionicmodule.forroot",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["ionviewwillenter",{"_index":31,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/MainPage.html":{},"components/RegisterPage.html":{}}}],["ionviewwillleave",{"_index":408,"title":{},"body":{"components/ChatRoomPage.html":{},"components/GoalsPage.html":{}}}],["ischecked",{"_index":377,"title":{},"body":{"components/CalendarPage.html":{}}}],["isnative",{"_index":313,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["istanbul",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["item",{"_index":674,"title":{},"body":{"components/JournalPage.html":{},"components/MenuPage.html":{},"injectables/ThemeService.html":{}}}],["item:string",{"_index":685,"title":{},"body":{"components/JournalPage.html":{}}}],["items",{"_index":601,"title":{},"body":{"components/GoalsPage.html":{}}}],["items:center",{"_index":140,"title":{},"body":{"components/AchievementsPage.html":{}}}],["jasmine",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["jog",{"_index":534,"title":{},"body":{"components/GoalsPage.html":{}}}],["jogdays",{"_index":487,"title":{},"body":{"components/GoalsPage.html":{}}}],["jogged",{"_index":535,"title":{},"body":{"components/GoalsPage.html":{}}}],["join",{"_index":713,"title":{},"body":{"components/MainPage.html":{}}}],["joinchat",{"_index":699,"title":{},"body":{"components/MainPage.html":{}}}],["joined",{"_index":435,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["journal",{"_index":671,"title":{},"body":{"components/JournalPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{}}}],["journal'},{'name",{"_index":166,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["journal.page",{"_index":694,"title":{},"body":{"modules/JournalPageModule.html":{}}}],["journal.page.html",{"_index":673,"title":{},"body":{"components/JournalPage.html":{}}}],["journal.page.scss",{"_index":672,"title":{},"body":{"components/JournalPage.html":{}}}],["journalpage",{"_index":165,"title":{"components/JournalPage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["journalpagemodule",{"_index":690,"title":{"modules/JournalPageModule.html":{}},"body":{"modules/JournalPageModule.html":{},"modules/MenuPageModule.html":{},"index.html":{},"modules.html":{}}}],["js",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":141,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["karma",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":392,"title":{},"body":{"components/CalendarPage.html":{}}}],["key",{"_index":296,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["left",{"_index":433,"title":{},"body":{"components/ChatRoomPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{}}}],["legend",{"_index":143,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["less",{"_index":544,"title":{},"body":{"components/GoalsPage.html":{}}}],["light",{"_index":891,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["lightgrey",{"_index":130,"title":{},"body":{"components/AchievementsPage.html":{}}}],["loadcards",{"_index":32,"title":{},"body":{"components/AchievementsPage.html":{},"components/MainPage.html":{}}}],["loadchildren",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":647,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["loading.present",{"_index":652,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["loadingcontroller",{"_index":617,"title":{},"body":{"components/HomePage.html":{},"components/MainPage.html":{},"components/RegisterPage.html":{}}}],["loadingctrl",{"_index":616,"title":{},"body":{"components/HomePage.html":{},"components/MainPage.html":{},"components/RegisterPage.html":{}}}],["loaduser",{"_index":33,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{}}}],["log",{"_index":659,"title":{},"body":{"components/HomePage.html":{}}}],["login",{"_index":612,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["loginpage",{"_index":788,"title":{},"body":{"components/MenuPage.html":{}}}],["loginreturn",{"_index":953,"title":{},"body":{"components/RegisterPage.html":{}}}],["loginuser",{"_index":996,"title":{},"body":{"injectables/RegisterService.html":{}}}],["loginuser(username",{"_index":1004,"title":{},"body":{"injectables/RegisterService.html":{}}}],["logout",{"_index":787,"title":{},"body":{"components/MenuPage.html":{},"components/ProfilePage.html":{}}}],["m",{"_index":551,"title":{},"body":{"components/GoalsPage.html":{}}}],["main",{"_index":687,"title":{},"body":{"components/JournalPage.html":{},"components/MainPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{}}}],["main'},{'name",{"_index":168,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["main.page",{"_index":720,"title":{},"body":{"modules/MainPageModule.html":{}}}],["main.page.html",{"_index":697,"title":{},"body":{"components/MainPage.html":{}}}],["main.page.scss",{"_index":696,"title":{},"body":{"components/MainPage.html":{}}}],["main/main.module",{"_index":826,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["main/main.page",{"_index":839,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["mainpage",{"_index":167,"title":{"components/MainPage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["mainpagemodule",{"_index":716,"title":{"modules/MainPageModule.html":{}},"body":{"modules/MainPageModule.html":{},"modules/MenuPageModule.html":{},"index.html":{},"modules.html":{}}}],["make",{"_index":539,"title":{},"body":{"components/GoalsPage.html":{}}}],["many",{"_index":521,"title":{},"body":{"components/GoalsPage.html":{}}}],["margin",{"_index":661,"title":{},"body":{"components/HomePage.html":{}}}],["matching",{"_index":179,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["meal",{"_index":547,"title":{},"body":{"components/GoalsPage.html":{}}}],["meditation",{"_index":722,"title":{},"body":{"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{}}}],["meditation'},{'name",{"_index":170,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["meditation.page",{"_index":781,"title":{},"body":{"modules/MeditationPageModule.html":{}}}],["meditation.page.html",{"_index":724,"title":{},"body":{"components/MeditationPage.html":{}}}],["meditation.page.scss",{"_index":723,"title":{},"body":{"components/MeditationPage.html":{}}}],["meditation/meditation.module",{"_index":834,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["meditation/meditation.page",{"_index":844,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["meditationpage",{"_index":169,"title":{"components/MeditationPage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["meditationpagemodule",{"_index":777,"title":{"modules/MeditationPageModule.html":{}},"body":{"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"index.html":{},"modules.html":{}}}],["medium",{"_index":893,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["meduim",{"_index":941,"title":{},"body":{"components/ProfilePage.html":{}}}],["menu",{"_index":618,"title":{},"body":{"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/RegisterPage.html":{}}}],["menu'},{'name",{"_index":172,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["menu.page",{"_index":825,"title":{},"body":{"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{}}}],["menu.page.html",{"_index":784,"title":{},"body":{"components/MenuPage.html":{}}}],["menu.page.scss",{"_index":783,"title":{},"body":{"components/MenuPage.html":{}}}],["menu/(menucontent:achievements",{"_index":798,"title":{},"body":{"components/MenuPage.html":{}}}],["menu/(menucontent:blog",{"_index":794,"title":{},"body":{"components/MenuPage.html":{}}}],["menu/(menucontent:calendar",{"_index":793,"title":{},"body":{"components/MenuPage.html":{}}}],["menu/(menucontent:goals",{"_index":797,"title":{},"body":{"components/MenuPage.html":{}}}],["menu/(menucontent:home",{"_index":853,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["menu/(menucontent:journal",{"_index":795,"title":{},"body":{"components/MenuPage.html":{}}}],["menu/(menucontent:main",{"_index":792,"title":{},"body":{"components/MenuPage.html":{}}}],["menu/(menucontent:meditation",{"_index":796,"title":{},"body":{"components/MenuPage.html":{}}}],["menu/(menucontent:profile",{"_index":800,"title":{},"body":{"components/MenuPage.html":{}}}],["menucontent",{"_index":851,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["menucontroller",{"_index":619,"title":{},"body":{"components/HomePage.html":{},"components/MainPage.html":{},"components/RegisterPage.html":{}}}],["menupage",{"_index":171,"title":{"components/MenuPage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["menupagemodule",{"_index":817,"title":{"modules/MenuPageModule.html":{}},"body":{"modules/MenuPageModule.html":{},"index.html":{},"modules.html":{}}}],["menuroutingmodule",{"_index":821,"title":{"modules/MenuRoutingModule.html":{}},"body":{"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["message",{"_index":85,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/RegisterPage.html":{}}}],["message.created",{"_index":451,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["message.from",{"_index":449,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["message.text",{"_index":450,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["messages",{"_index":404,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"injectables/ThemeService.html":{}}}],["mind",{"_index":752,"title":{},"body":{"components/MeditationPage.html":{}}}],["miscellaneous",{"_index":1179,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":658,"title":{},"body":{"components/HomePage.html":{}}}],["mocks",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["module",{"_index":181,"title":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{}},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["modules",{"_index":183,"title":{"modules.html":{}},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{},"modules.html":{}}}],["more",{"_index":530,"title":{},"body":{"components/GoalsPage.html":{}}}],["msg",{"_index":422,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["native/core",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["native/native",{"_index":310,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{},"dependencies.html":{}}}],["native/splash",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nativeaudio",{"_index":291,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{},"dependencies.html":{}}}],["nav",{"_index":336,"title":{},"body":{"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/DatesPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/ProfilePage.html":{}}}],["nav:navcontroller",{"_index":382,"title":{},"body":{"components/CalendarPage.html":{}}}],["navcontroller",{"_index":337,"title":{},"body":{"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{}}}],["navctrl",{"_index":415,"title":{},"body":{"components/ChatRoomPage.html":{},"components/MainPage.html":{}}}],["navigateto",{"_index":266,"title":{},"body":{"classes/AppPage.html":{}}}],["neon",{"_index":904,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":304,"title":{},"body":{"injectables/AudioService.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["ngafterviewinit",{"_index":729,"title":{},"body":{"components/MeditationPage.html":{}}}],["ngmodule",{"_index":195,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{}}}],["ngoninit",{"_index":34,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/DatesPage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{}}}],["ngx",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"components/ChatRoomPage.html":{},"components/MainPage.html":{},"dependencies.html":{}}}],["nickname",{"_index":405,"title":{},"body":{"components/ChatRoomPage.html":{},"components/MainPage.html":{}}}],["night",{"_index":897,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":351,"title":{},"body":{"components/BlogPage.html":{},"components/JournalPage.html":{}}}],["notes",{"_index":348,"title":{},"body":{"components/BlogPage.html":{},"components/JournalPage.html":{}}}],["now",{"_index":988,"title":{},"body":{"components/RegisterPage.html":{}}}],["null",{"_index":324,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{},"dependencies.html":{}}}],["num",{"_index":591,"title":{},"body":{"components/GoalsPage.html":{}}}],["number",{"_index":1182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":425,"title":{},"body":{"components/ChatRoomPage.html":{},"injectables/RegisterService.html":{}}}],["observable(observer",{"_index":438,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["observer.next(data",{"_index":440,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["ocean",{"_index":762,"title":{},"body":{"components/MeditationPage.html":{}}}],["ok",{"_index":93,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{}}}],["ones",{"_index":588,"title":{},"body":{"components/GoalsPage.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["optional",{"_index":50,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":193,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["outlet",{"_index":850,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["override",{"_index":1038,"title":{},"body":{"injectables/ThemeService.html":{}}}],["overview",{"_index":1183,"title":{"index.html":{}},"body":{"index.html":{}}}],["p.title",{"_index":811,"title":{},"body":{"components/MenuPage.html":{}}}],["package",{"_index":1135,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":133,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{}}}],["page",{"_index":342,"title":{},"body":{"components/BlogPage.html":{},"components/HomePage.html":{},"components/MenuPage.html":{}}}],["pages",{"_index":785,"title":{},"body":{"components/MenuPage.html":{}}}],["pages/menu/menu.module#menupagemodule",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":24,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{}}}],["password:string",{"_index":632,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["path",{"_index":205,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{}}}],["personal",{"_index":121,"title":{},"body":{"components/AchievementsPage.html":{},"components/JournalPage.html":{}}}],["pic",{"_index":775,"title":{},"body":{"components/MeditationPage.html":{}}}],["picdesc",{"_index":726,"title":{},"body":{"components/MeditationPage.html":{}}}],["picdesc:string",{"_index":744,"title":{},"body":{"components/MeditationPage.html":{}}}],["platform",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["play",{"_index":289,"title":{},"body":{"injectables/AudioService.html":{},"components/MeditationPage.html":{}}}],["play(key",{"_index":293,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["playing",{"_index":727,"title":{},"body":{"components/MeditationPage.html":{}}}],["playing:boolean",{"_index":742,"title":{},"body":{"components/MeditationPage.html":{}}}],["plugin",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":365,"title":{},"body":{"components/CalendarPage.html":{},"components/GoalsPage.html":{}}}],["post",{"_index":343,"title":{},"body":{"components/BlogPage.html":{}}}],["posts",{"_index":347,"title":{},"body":{"components/BlogPage.html":{}}}],["preload",{"_index":290,"title":{},"body":{"injectables/AudioService.html":{}}}],["preload(key",{"_index":298,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["presentalert",{"_index":35,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{}}}],["press",{"_index":745,"title":{},"body":{"components/MeditationPage.html":{}}}],["primary",{"_index":816,"title":{},"body":{"components/MenuPage.html":{},"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":78,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{}}}],["production",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":799,"title":{},"body":{"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{}}}],["profile'},{'name",{"_index":174,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["profile.page",{"_index":947,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["profile.page.html",{"_index":856,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.page.scss",{"_index":855,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile/profile.module",{"_index":827,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["profile/profile.page",{"_index":840,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["profilepage",{"_index":173,"title":{"components/ProfilePage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"coverage.html":{},"index.html":{}}}],["profilepagemodule",{"_index":822,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"index.html":{},"modules.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AchievementsPage.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{}}}],["protractor",{"_index":269,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":314,"title":{},"body":{"injectables/AudioService.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{}}}],["providers",{"_index":187,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["public",{"_index":287,"title":{},"body":{"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{}}}],["ratio",{"_index":1103,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["recent",{"_index":349,"title":{},"body":{"components/BlogPage.html":{}}}],["redirectto",{"_index":852,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["reg",{"_index":615,"title":{},"body":{"components/HomePage.html":{},"components/MainPage.html":{},"components/RegisterPage.html":{}}}],["register",{"_index":42,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["register.page",{"_index":992,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["register.page.html",{"_index":950,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":949,"title":{},"body":{"components/RegisterPage.html":{}}}],["register/register.page",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["registercontentquery",{"_index":565,"title":{},"body":{"components/GoalsPage.html":{}}}],["registerpage",{"_index":175,"title":{"components/RegisterPage.html":{}},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"coverage.html":{},"index.html":{}}}],["registerpagemodule",{"_index":823,"title":{"modules/RegisterPageModule.html":{}},"body":{"modules/MenuPageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{},"modules.html":{}}}],["registerservice",{"_index":43,"title":{"injectables/RegisterService.html":{}},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["registeruser",{"_index":997,"title":{},"body":{"injectables/RegisterService.html":{}}}],["registeruser(username",{"_index":1006,"title":{},"body":{"injectables/RegisterService.html":{}}}],["remember",{"_index":538,"title":{},"body":{"components/GoalsPage.html":{}}}],["removeuserlocalstorage",{"_index":613,"title":{},"body":{"components/HomePage.html":{}}}],["repassword",{"_index":952,"title":{},"body":{"components/RegisterPage.html":{}}}],["repassword:string",{"_index":967,"title":{},"body":{"components/RegisterPage.html":{}}}],["repeat",{"_index":596,"title":{},"body":{"components/GoalsPage.html":{},"components/MeditationPage.html":{},"components/RegisterPage.html":{}}}],["require",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":111,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["res.error",{"_index":113,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/RegisterPage.html":{}}}],["res.user",{"_index":117,"title":{},"body":{"components/AchievementsPage.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{}}}],["res.user.username",{"_index":985,"title":{},"body":{"components/RegisterPage.html":{}}}],["reset",{"_index":192,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}],["result",{"_index":178,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":180,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":120,"title":{},"body":{"components/AchievementsPage.html":{},"classes/AppPage.html":{},"injectables/AudioService.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{}}}],["returns",{"_index":53,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"injectables/ThemeService.html":{}}}],["rgb",{"_index":1063,"title":{},"body":{"injectables/ThemeService.html":{}}}],["right",{"_index":943,"title":{},"body":{"components/ProfilePage.html":{}}}],["room",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatRoomPage.html":{}}}],["room'},{'name",{"_index":158,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["room.module",{"_index":837,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["room.module#chatroompagemodule",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["room.module.ts",{"_index":459,"title":{},"body":{"modules/ChatRoomPageModule.html":{}}}],["room.page",{"_index":460,"title":{},"body":{"modules/ChatRoomPageModule.html":{},"modules/MenuRoutingModule.html":{}}}],["room.page.html",{"_index":403,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["room.page.scss",{"_index":402,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["room.page.ts",{"_index":401,"title":{},"body":{"components/ChatRoomPage.html":{},"coverage.html":{}}}],["room.page.ts:13",{"_index":423,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["room.page.ts:14",{"_index":424,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["room.page.ts:15",{"_index":414,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["room.page.ts:36",{"_index":419,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["room.page.ts:41",{"_index":416,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["room.page.ts:50",{"_index":417,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["room.page.ts:59",{"_index":418,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["room.page.ts:63",{"_index":421,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["room/chat",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"coverage.html":{}}}],["root",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AudioService.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{}}}],["root'},{'name",{"_index":151,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["router",{"_index":465,"title":{},"body":{"components/DatesPage.html":{},"components/HomePage.html":{},"components/MainPage.html":{},"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{},"components/RegisterPage.html":{}}}],["routereusestrategy",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["routerevent",{"_index":803,"title":{},"body":{"components/MenuPage.html":{}}}],["routermodule",{"_index":201,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{}}}],["routermodule.forchild(routes",{"_index":207,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":200,"title":{"routes.html":{}},"body":{"modules/AchievementsPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/MenuPageModule.html":{}}}],["routing.module.ts",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MenuRoutingModule.html":{}}}],["row",{"_index":139,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["rxjs",{"_index":426,"title":{},"body":{"components/ChatRoomPage.html":{},"injectables/RegisterService.html":{},"dependencies.html":{}}}],["sa",{"_index":556,"title":{},"body":{"components/GoalsPage.html":{}}}],["save",{"_index":390,"title":{},"body":{"components/CalendarPage.html":{},"components/DatesPage.html":{},"components/JournalPage.html":{}}}],["save(item",{"_index":681,"title":{},"body":{"components/JournalPage.html":{}}}],["screen",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["screen/ngx",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["scripts",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["secondary",{"_index":887,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":87,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/GoalsPage.html":{}}}],["selectedpath",{"_index":786,"title":{},"body":{"components/MenuPage.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["selectormatcher",{"_index":562,"title":{},"body":{"components/GoalsPage.html":{}}}],["send",{"_index":454,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["sendmessage",{"_index":409,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["services/audio.service",{"_index":741,"title":{},"body":{"components/MeditationPage.html":{}}}],["services/register.service",{"_index":564,"title":{},"body":{"components/GoalsPage.html":{},"components/HomePage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["set",{"_index":587,"title":{},"body":{"components/GoalsPage.html":{}}}],["setglobalcss",{"_index":1017,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setglobalcss(css",{"_index":1025,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme",{"_index":1018,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme(theme",{"_index":1028,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setvariable",{"_index":1019,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setvariable(name",{"_index":1030,"title":{},"body":{"injectables/ThemeService.html":{}}}],["shade",{"_index":1067,"title":{},"body":{"injectables/ThemeService.html":{}}}],["shaderatio",{"_index":1054,"title":{},"body":{"injectables/ThemeService.html":{}}}],["share",{"_index":688,"title":{},"body":{"components/JournalPage.html":{}}}],["showloading",{"_index":614,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["showtoast",{"_index":410,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["showtoast(msg",{"_index":420,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["single",{"_index":1045,"title":{},"body":{"injectables/ThemeService.html":{}}}],["size",{"_index":127,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{}}}],["sizes",{"_index":548,"title":{},"body":{"components/GoalsPage.html":{}}}],["socket",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"components/ChatRoomPage.html":{},"components/MainPage.html":{},"dependencies.html":{}}}],["socketioconfig",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["socketiomodule",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["socketiomodule.forroot(config",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["solid",{"_index":815,"title":{},"body":{"components/MenuPage.html":{}}}],["sound",{"_index":308,"title":{"interfaces/Sound.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{},"coverage.html":{}}}],["sound.key",{"_index":323,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["sounds",{"_index":288,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["soundtoplay",{"_index":321,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["soundtoplay.asset",{"_index":330,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AchievementsPage.html":{},"modules/AchievementsPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"modules/BlogPageModule.html":{},"components/CalendarPage.html":{},"modules/CalendarPageModule.html":{},"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"components/DatesPage.html":{},"modules/DatesPageModule.html":{},"components/GoalsPage.html":{},"modules/GoalsPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/JournalPage.html":{},"modules/JournalPageModule.html":{},"components/MainPage.html":{},"modules/MainPageModule.html":{},"components/MeditationPage.html":{},"modules/MeditationPageModule.html":{},"components/MenuPage.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{}}}],["sourcemap",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["spec\\.ts",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":649,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["splashscreen",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["square",{"_index":123,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["src/.../app.module.ts",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../profile.page.ts",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../theme.service.ts",{"_index":1181,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/chat",{"_index":400,"title":{},"body":{"components/ChatRoomPage.html":{},"modules/ChatRoomPageModule.html":{},"modules/MenuPageModule.html":{},"modules/MenuRoutingModule.html":{},"coverage.html":{}}}],["src/app/home/home.module",{"_index":828,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["src/app/home/home.module.ts",{"_index":668,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/home/home.page",{"_index":804,"title":{},"body":{"components/MenuPage.html":{},"modules/MenuRoutingModule.html":{}}}],["src/app/home/home.page.ts",{"_index":607,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/home/home.page.ts:14",{"_index":630,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:15",{"_index":620,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:17",{"_index":628,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:21",{"_index":629,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:23",{"_index":627,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:27",{"_index":624,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:48",{"_index":626,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:58",{"_index":621,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:67",{"_index":622,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:71",{"_index":623,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:75",{"_index":625,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/blog/blog.module.ts",{"_index":357,"title":{},"body":{"modules/BlogPageModule.html":{}}}],["src/app/pages/blog/blog.page.ts",{"_index":332,"title":{},"body":{"components/BlogPage.html":{},"coverage.html":{}}}],["src/app/pages/blog/blog.page.ts:10",{"_index":338,"title":{},"body":{"components/BlogPage.html":{}}}],["src/app/pages/blog/blog.page.ts:15",{"_index":341,"title":{},"body":{"components/BlogPage.html":{}}}],["src/app/pages/blog/blog.page.ts:20",{"_index":339,"title":{},"body":{"components/BlogPage.html":{}}}],["src/app/pages/blog/blog.page.ts:23",{"_index":340,"title":{},"body":{"components/BlogPage.html":{}}}],["src/app/pages/blog/journal/journal.module.ts",{"_index":693,"title":{},"body":{"modules/JournalPageModule.html":{}}}],["src/app/pages/blog/journal/journal.page.ts",{"_index":670,"title":{},"body":{"components/JournalPage.html":{},"coverage.html":{}}}],["src/app/pages/blog/journal/journal.page.ts:12",{"_index":677,"title":{},"body":{"components/JournalPage.html":{}}}],["src/app/pages/blog/journal/journal.page.ts:15",{"_index":684,"title":{},"body":{"components/JournalPage.html":{}}}],["src/app/pages/blog/journal/journal.page.ts:20",{"_index":678,"title":{},"body":{"components/JournalPage.html":{}}}],["src/app/pages/blog/journal/journal.page.ts:24",{"_index":682,"title":{},"body":{"components/JournalPage.html":{}}}],["src/app/pages/blog/journal/journal.page.ts:27",{"_index":683,"title":{},"body":{"components/JournalPage.html":{}}}],["src/app/pages/blog/journal/journal.page.ts:30",{"_index":679,"title":{},"body":{"components/JournalPage.html":{}}}],["src/app/pages/blog/journal/journal.page.ts:33",{"_index":680,"title":{},"body":{"components/JournalPage.html":{}}}],["src/app/pages/calendar/calendar.module.ts",{"_index":398,"title":{},"body":{"modules/CalendarPageModule.html":{}}}],["src/app/pages/calendar/calendar.page.ts",{"_index":359,"title":{},"body":{"components/CalendarPage.html":{},"coverage.html":{}}}],["src/app/pages/calendar/calendar.page.ts:12",{"_index":374,"title":{},"body":{"components/CalendarPage.html":{}}}],["src/app/pages/calendar/calendar.page.ts:13",{"_index":380,"title":{},"body":{"components/CalendarPage.html":{}}}],["src/app/pages/calendar/calendar.page.ts:17",{"_index":366,"title":{},"body":{"components/CalendarPage.html":{}}}],["src/app/pages/calendar/calendar.page.ts:27",{"_index":367,"title":{},"body":{"components/CalendarPage.html":{}}}],["src/app/pages/calendar/calendar.page.ts:43",{"_index":369,"title":{},"body":{"components/CalendarPage.html":{}}}],["src/app/pages/calendar/calendar.page.ts:59",{"_index":368,"title":{},"body":{"components/CalendarPage.html":{}}}],["src/app/pages/calendar/calendar.page.ts:62",{"_index":370,"title":{},"body":{"components/CalendarPage.html":{}}}],["src/app/pages/calendar/dates/dates.module.ts",{"_index":479,"title":{},"body":{"modules/DatesPageModule.html":{}}}],["src/app/pages/calendar/dates/dates.page.ts",{"_index":461,"title":{},"body":{"components/DatesPage.html":{},"coverage.html":{}}}],["src/app/pages/calendar/dates/dates.page.ts:11",{"_index":468,"title":{},"body":{"components/DatesPage.html":{}}}],["src/app/pages/calendar/dates/dates.page.ts:13",{"_index":473,"title":{},"body":{"components/DatesPage.html":{}}}],["src/app/pages/calendar/dates/dates.page.ts:14",{"_index":472,"title":{},"body":{"components/DatesPage.html":{}}}],["src/app/pages/calendar/dates/dates.page.ts:19",{"_index":471,"title":{},"body":{"components/DatesPage.html":{}}}],["src/app/pages/calendar/dates/dates.page.ts:23",{"_index":469,"title":{},"body":{"components/DatesPage.html":{}}}],["src/app/pages/calendar/dates/dates.page.ts:27",{"_index":470,"title":{},"body":{"components/DatesPage.html":{}}}],["src/app/pages/goals/achievements/achievements.module.ts",{"_index":194,"title":{},"body":{"modules/AchievementsPageModule.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts",{"_index":10,"title":{},"body":{"components/AchievementsPage.html":{},"coverage.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts:14",{"_index":67,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts:15",{"_index":68,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts:16",{"_index":45,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts:28",{"_index":65,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts:31",{"_index":66,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts:40",{"_index":64,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts:51",{"_index":63,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts:57",{"_index":62,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts:61",{"_index":56,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts:66",{"_index":52,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/pages/goals/achievements/achievements.page.ts:80",{"_index":60,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/pages/goals/goals.module.ts",{"_index":605,"title":{},"body":{"modules/GoalsPageModule.html":{}}}],["src/app/pages/goals/goals.page.ts",{"_index":481,"title":{},"body":{"components/GoalsPage.html":{},"coverage.html":{}}}],["src/app/pages/goals/goals.page.ts:112",{"_index":507,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:136",{"_index":514,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:16",{"_index":549,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:168",{"_index":499,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:182",{"_index":513,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:193",{"_index":508,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:202",{"_index":506,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:207",{"_index":515,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:216",{"_index":511,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:220",{"_index":512,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:224",{"_index":498,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:236",{"_index":504,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:24",{"_index":550,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:250",{"_index":501,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:32",{"_index":519,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:36",{"_index":559,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:44",{"_index":558,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:52",{"_index":561,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:53",{"_index":560,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:54",{"_index":495,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:66",{"_index":509,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/goals/goals.page.ts:89",{"_index":510,"title":{},"body":{"components/GoalsPage.html":{}}}],["src/app/pages/main/main.module.ts",{"_index":719,"title":{},"body":{"modules/MainPageModule.html":{}}}],["src/app/pages/main/main.page.ts",{"_index":695,"title":{},"body":{"components/MainPage.html":{},"coverage.html":{}}}],["src/app/pages/main/main.page.ts:17",{"_index":706,"title":{},"body":{"components/MainPage.html":{}}}],["src/app/pages/main/main.page.ts:18",{"_index":700,"title":{},"body":{"components/MainPage.html":{}}}],["src/app/pages/main/main.page.ts:20",{"_index":705,"title":{},"body":{"components/MainPage.html":{}}}],["src/app/pages/main/main.page.ts:32",{"_index":704,"title":{},"body":{"components/MainPage.html":{}}}],["src/app/pages/main/main.page.ts:42",{"_index":702,"title":{},"body":{"components/MainPage.html":{}}}],["src/app/pages/main/main.page.ts:49",{"_index":703,"title":{},"body":{"components/MainPage.html":{}}}],["src/app/pages/main/main.page.ts:55",{"_index":701,"title":{},"body":{"components/MainPage.html":{}}}],["src/app/pages/meditation/meditation.module.ts",{"_index":780,"title":{},"body":{"modules/MeditationPageModule.html":{}}}],["src/app/pages/meditation/meditation.page.ts",{"_index":721,"title":{},"body":{"components/MeditationPage.html":{},"coverage.html":{}}}],["src/app/pages/meditation/meditation.page.ts:11",{"_index":738,"title":{},"body":{"components/MeditationPage.html":{}}}],["src/app/pages/meditation/meditation.page.ts:12",{"_index":737,"title":{},"body":{"components/MeditationPage.html":{}}}],["src/app/pages/meditation/meditation.page.ts:13",{"_index":730,"title":{},"body":{"components/MeditationPage.html":{}}}],["src/app/pages/meditation/meditation.page.ts:18",{"_index":736,"title":{},"body":{"components/MeditationPage.html":{}}}],["src/app/pages/meditation/meditation.page.ts:23",{"_index":735,"title":{},"body":{"components/MeditationPage.html":{}}}],["src/app/pages/meditation/meditation.page.ts:33",{"_index":731,"title":{},"body":{"components/MeditationPage.html":{}}}],["src/app/pages/meditation/meditation.page.ts:59",{"_index":733,"title":{},"body":{"components/MeditationPage.html":{}}}],["src/app/pages/meditation/meditation.page.ts:63",{"_index":732,"title":{},"body":{"components/MeditationPage.html":{}}}],["src/app/pages/meditation/meditation.page.ts:68",{"_index":734,"title":{},"body":{"components/MeditationPage.html":{}}}],["src/app/pages/menu/menu",{"_index":838,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["src/app/pages/menu/menu.module.ts",{"_index":824,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["src/app/pages/menu/menu.page.ts",{"_index":782,"title":{},"body":{"components/MenuPage.html":{},"coverage.html":{}}}],["src/app/pages/menu/menu.page.ts:13",{"_index":802,"title":{},"body":{"components/MenuPage.html":{}}}],["src/app/pages/menu/menu.page.ts:14",{"_index":801,"title":{},"body":{"components/MenuPage.html":{}}}],["src/app/pages/menu/menu.page.ts:47",{"_index":789,"title":{},"body":{"components/MenuPage.html":{}}}],["src/app/pages/menu/menu.page.ts:56",{"_index":791,"title":{},"body":{"components/MenuPage.html":{}}}],["src/app/pages/menu/menu.page.ts:59",{"_index":790,"title":{},"body":{"components/MenuPage.html":{}}}],["src/app/pages/profile/profile.module.ts",{"_index":946,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/pages/profile/profile.page.ts",{"_index":854,"title":{},"body":{"components/ProfilePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/profile/profile.page.ts:102",{"_index":872,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:111",{"_index":868,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:124",{"_index":871,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:53",{"_index":879,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:54",{"_index":882,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:55",{"_index":880,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:56",{"_index":883,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:57",{"_index":876,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:58",{"_index":866,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:62",{"_index":877,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:64",{"_index":878,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:69",{"_index":870,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:73",{"_index":874,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:77",{"_index":875,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:88",{"_index":867,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:97",{"_index":873,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/register/register.module",{"_index":829,"title":{},"body":{"modules/MenuPageModule.html":{}}}],["src/app/register/register.module.ts",{"_index":991,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["src/app/register/register.page",{"_index":841,"title":{},"body":{"modules/MenuRoutingModule.html":{}}}],["src/app/register/register.page.ts",{"_index":948,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{}}}],["src/app/register/register.page.ts:13",{"_index":961,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/register/register.page.ts:14",{"_index":960,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/register/register.page.ts:15",{"_index":964,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/register/register.page.ts:16",{"_index":962,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/register/register.page.ts:17",{"_index":954,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/register/register.page.ts:20",{"_index":963,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/register/register.page.ts:29",{"_index":958,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/register/register.page.ts:63",{"_index":957,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/register/register.page.ts:67",{"_index":959,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/register/register.page.ts:77",{"_index":955,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/register/register.page.ts:85",{"_index":956,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/services/audio.service.ts",{"_index":284,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{},"coverage.html":{}}}],["src/app/services/audio.service.ts:17",{"_index":309,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/services/audio.service.ts:18",{"_index":306,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/services/audio.service.ts:19",{"_index":292,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/services/audio.service.ts:25",{"_index":300,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/services/audio.service.ts:52",{"_index":295,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/services/register.service",{"_index":74,"title":{},"body":{"components/AchievementsPage.html":{}}}],["src/app/services/register.service.ts",{"_index":993,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{}}}],["src/app/services/register.service.ts:10",{"_index":1010,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/services/register.service.ts:14",{"_index":1007,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/services/register.service.ts:23",{"_index":1005,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/services/register.service.ts:30",{"_index":1003,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/services/register.service.ts:37",{"_index":1009,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/services/register.service.ts:8",{"_index":1001,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/theme.service",{"_index":71,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/GoalsPage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{}}}],["src/app/theme.service.ts",{"_index":1016,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/theme.service.ts:11",{"_index":1024,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/theme.service.ts:22",{"_index":1029,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/theme.service.ts:29",{"_index":1031,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/theme.service.ts:33",{"_index":1026,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/theme.service.ts:37",{"_index":1033,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["statusbar",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["storage",{"_index":41,"title":{},"body":{"components/AchievementsPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/ThemeService.html":{}}}],["storage.get('theme').then(csstext",{"_index":1036,"title":{},"body":{"injectables/ThemeService.html":{}}}],["storedtheme",{"_index":1021,"title":{},"body":{"injectables/ThemeService.html":{}}}],["string",{"_index":294,"title":{},"body":{"injectables/AudioService.html":{},"components/ChatRoomPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{}}}],["strive",{"_index":657,"title":{},"body":{"components/HomePage.html":{},"components/MainPage.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["su",{"_index":557,"title":{},"body":{"components/GoalsPage.html":{}}}],["subcolor",{"_index":858,"title":{},"body":{"components/ProfilePage.html":{}}}],["subcolor:string=\"primary",{"_index":922,"title":{},"body":{"components/ProfilePage.html":{}}}],["subheader",{"_index":59,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["subscribe",{"_index":881,"title":{},"body":{"components/ProfilePage.html":{}}}],["subscribe(async",{"_index":980,"title":{},"body":{"components/RegisterPage.html":{}}}],["subscribed",{"_index":859,"title":{},"body":{"components/ProfilePage.html":{}}}],["subscribed:boolean=false",{"_index":924,"title":{},"body":{"components/ProfilePage.html":{}}}],["subscribestatus",{"_index":860,"title":{},"body":{"components/ProfilePage.html":{}}}],["subscribestatus:string=\"subscribe",{"_index":923,"title":{},"body":{"components/ProfilePage.html":{}}}],["subscribestatuschange",{"_index":864,"title":{},"body":{"components/ProfilePage.html":{}}}],["success",{"_index":913,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1187,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1188,"title":{},"body":{"modules.html":{}}}],["t",{"_index":552,"title":{},"body":{"components/GoalsPage.html":{}}}],["table",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":372,"title":{},"body":{"components/CalendarPage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"dependencies.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["tertiary",{"_index":889,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":136,"title":{},"body":{"components/AchievementsPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"injectables/ThemeService.html":{}}}],["th",{"_index":554,"title":{},"body":{"components/GoalsPage.html":{}}}],["theme",{"_index":51,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"injectables/ThemeService.html":{}}}],["theme.service",{"_index":381,"title":{},"body":{"components/CalendarPage.html":{},"components/ProfilePage.html":{}}}],["themes",{"_index":884,"title":{},"body":{"components/ProfilePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["themeservice",{"_index":38,"title":{"injectables/ThemeService.html":{}},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["this.add",{"_index":391,"title":{},"body":{"components/CalendarPage.html":{}}}],["this.alertctrl.create",{"_index":84,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.audio.play('forestsounds",{"_index":771,"title":{},"body":{"components/MeditationPage.html":{}}}],["this.audio.play('oceansounds",{"_index":772,"title":{},"body":{"components/MeditationPage.html":{}}}],["this.audio.play('silence",{"_index":774,"title":{},"body":{"components/MeditationPage.html":{}}}],["this.audio.preload('forestsounds",{"_index":759,"title":{},"body":{"components/MeditationPage.html":{}}}],["this.audio.preload('oceansounds",{"_index":764,"title":{},"body":{"components/MeditationPage.html":{}}}],["this.audio.preload('silence",{"_index":767,"title":{},"body":{"components/MeditationPage.html":{}}}],["this.audioplayer.play",{"_index":331,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["this.audioplayer.src",{"_index":329,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["this.cards",{"_index":104,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["this.cards).subscribe(async",{"_index":110,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["this.cards=user.cards",{"_index":102,"title":{},"body":{"components/AchievementsPage.html":{}}}],["this.cards[0].goal",{"_index":570,"title":{},"body":{"components/GoalsPage.html":{}}}],["this.cards[0].task",{"_index":387,"title":{},"body":{"components/CalendarPage.html":{}}}],["this.cards[1].goal",{"_index":571,"title":{},"body":{"components/GoalsPage.html":{}}}],["this.cards[2].goal",{"_index":572,"title":{},"body":{"components/GoalsPage.html":{}}}],["this.cards[3].goal",{"_index":573,"title":{},"body":{"components/GoalsPage.html":{}}}],["this.cards[4].goal",{"_index":574,"title":{},"body":{"components/GoalsPage.html":{}}}],["this.cards[5].goal",{"_index":575,"title":{},"body":{"components/GoalsPage.html":{}}}],["this.cardupdate",{"_index":108,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["this.changetheme('default",{"_index":934,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.choosepic",{"_index":766,"title":{},"body":{"components/MeditationPage.html":{}}}],["this.chosenpic",{"_index":757,"title":{},"body":{"components/MeditationPage.html":{}}}],["this.diet",{"_index":580,"title":{},"body":{"components/GoalsPage.html":{}}}],["this.displayalert('card",{"_index":114,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["this.displayalert('invalid",{"_index":969,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.displayalert('login",{"_index":637,"title":{},"body":{"components/HomePage.html":{},"components/ProfilePage.html":{}}}],["this.displayalert('sign",{"_index":982,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.document.documentelement.style.csstext",{"_index":1048,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.documentelement.style.setproperty(name",{"_index":1047,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.drinkwater",{"_index":577,"title":{},"body":{"components/GoalsPage.html":{}}}],["this.email",{"_index":936,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.exercise",{"_index":578,"title":{},"body":{"components/GoalsPage.html":{}}}],["this.forcewebaudio",{"_index":317,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["this.fullname",{"_index":979,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.getmessages().subscribe(message",{"_index":427,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["this.getusers().subscribe(data",{"_index":429,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["this.http.post('http://localhost:3000/api/changepassword/user",{"_index":1013,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.http.post('http://localhost:3000/api/login/user",{"_index":1012,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.http.post('http://localhost:3000/api/signup/user",{"_index":1011,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.http.post('http://localhost:3000/api/updatecards/user",{"_index":1014,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.initializeapp",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadcards",{"_index":105,"title":{},"body":{"components/AchievementsPage.html":{},"components/MainPage.html":{}}}],["this.loadingctrl.create",{"_index":648,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["this.loadingctrl.dismiss",{"_index":636,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["this.loaduser",{"_index":80,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{}}}],["this.loginpage.removeuserlocalstorage",{"_index":809,"title":{},"body":{"components/MenuPage.html":{}}}],["this.loginreturn",{"_index":986,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.menu.enable(false",{"_index":654,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["this.menu.enable(true",{"_index":712,"title":{},"body":{"components/MainPage.html":{}}}],["this.message",{"_index":437,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["this.messages.push(message",{"_index":428,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["this.nativeaudio.play(soundtoplay.asset).then((res",{"_index":326,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["this.nativeaudio.preloadsimple(key",{"_index":318,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["this.nav.navigateroot(\"menu/(menucontent:calendar",{"_index":475,"title":{},"body":{"components/DatesPage.html":{}}}],["this.nav.navigateroot(\"menu/(menucontent:home",{"_index":935,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.nav.navigateroot(\"menu/(menucontent:main",{"_index":645,"title":{},"body":{"components/HomePage.html":{},"components/JournalPage.html":{}}}],["this.nav.navigateroot(\"menu/(menucontent:register",{"_index":653,"title":{},"body":{"components/HomePage.html":{}}}],["this.navctrl.navigateroot(\"menu/(menucontent:chat",{"_index":711,"title":{},"body":{"components/MainPage.html":{}}}],["this.password",{"_index":100,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["this.password).subscribe",{"_index":642,"title":{},"body":{"components/HomePage.html":{}}}],["this.password).subscribe(res",{"_index":939,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.password.length==0",{"_index":975,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.picdesc",{"_index":761,"title":{},"body":{"components/MeditationPage.html":{}}}],["this.platform.ready().then",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["this.playing",{"_index":773,"title":{},"body":{"components/MeditationPage.html":{}}}],["this.reg.loginuser(this.username",{"_index":641,"title":{},"body":{"components/HomePage.html":{}}}],["this.reg.registeruser(this.username",{"_index":978,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.register.changepassworduser(this.username",{"_index":938,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.register.updatecards(this.username",{"_index":109,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["this.repassword",{"_index":977,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.repassword.length==0",{"_index":976,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.router.events.subscribe((event",{"_index":805,"title":{},"body":{"components/MenuPage.html":{}}}],["this.router.navigatebyurl('/home",{"_index":987,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.router.navigatebyurl('home",{"_index":810,"title":{},"body":{"components/MenuPage.html":{}}}],["this.selectedpath",{"_index":806,"title":{},"body":{"components/MenuPage.html":{}}}],["this.setglobalcss(csstext",{"_index":1037,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.showloading",{"_index":633,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["this.showtoast('user",{"_index":434,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["this.socket.connect",{"_index":709,"title":{},"body":{"components/MainPage.html":{}}}],["this.socket.disconnect",{"_index":443,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["this.socket.emit('add",{"_index":436,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["this.socket.emit('set",{"_index":710,"title":{},"body":{"components/MainPage.html":{}}}],["this.socket.on('message",{"_index":439,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["this.socket.on('users",{"_index":441,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["this.sounds.find((sound",{"_index":322,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["this.sounds.push",{"_index":319,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Sound.html":{}}}],["this.splashscreen.hide",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storage.get('cards').then((cards",{"_index":103,"title":{},"body":{"components/AchievementsPage.html":{},"components/MainPage.html":{}}}],["this.storage.get('theme",{"_index":1049,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.storage.get('user').then((user",{"_index":95,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{}}}],["this.storage.remove('cards",{"_index":655,"title":{},"body":{"components/HomePage.html":{}}}],["this.storage.remove('user",{"_index":656,"title":{},"body":{"components/HomePage.html":{}}}],["this.storage.set('cards",{"_index":118,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["this.storage.set('theme",{"_index":1043,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.storage.set('user",{"_index":582,"title":{},"body":{"components/GoalsPage.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{}}}],["this.storage.set('username",{"_index":984,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.subcolor=\"primary",{"_index":933,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.subcolor=\"secondary",{"_index":932,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.subscribed=false",{"_index":929,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.subscribed=true",{"_index":927,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.subscribestatus=\"subscribe",{"_index":930,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.subscribestatus=\"you",{"_index":928,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.theme.settheme('default",{"_index":808,"title":{},"body":{"components/MenuPage.html":{}}}],["this.theme.settheme(themes[name",{"_index":925,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.theme.storedtheme",{"_index":79,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{}}}],["this.toastctrl.create",{"_index":445,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["this.user",{"_index":583,"title":{},"body":{"components/GoalsPage.html":{}}}],["this.user.cards",{"_index":581,"title":{},"body":{"components/GoalsPage.html":{}}}],["this.userfullname",{"_index":707,"title":{},"body":{"components/MainPage.html":{}}}],["this.username",{"_index":99,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["thoughts",{"_index":344,"title":{},"body":{"components/BlogPage.html":{},"components/JournalPage.html":{}}}],["times",{"_index":546,"title":{},"body":{"components/GoalsPage.html":{}}}],["tint",{"_index":1069,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tintratio",{"_index":1056,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":660,"title":{},"body":{"components/HomePage.html":{},"components/MenuPage.html":{}}}],["toast",{"_index":444,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["toast.present",{"_index":448,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["toastcontroller",{"_index":413,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["toastctrl",{"_index":412,"title":{},"body":{"components/ChatRoomPage.html":{}}}],["today",{"_index":523,"title":{},"body":{"components/GoalsPage.html":{}}}],["toolbar",{"_index":1059,"title":{},"body":{"injectables/ThemeService.html":{}}}],["top",{"_index":134,"title":{},"body":{"components/AchievementsPage.html":{},"components/BlogPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["top:30vh",{"_index":662,"title":{},"body":{"components/HomePage.html":{}}}],["track",{"_index":393,"title":{},"body":{"components/CalendarPage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["true",{"_index":307,"title":{},"body":{"injectables/AudioService.html":{},"components/CalendarPage.html":{},"components/GoalsPage.html":{},"components/MeditationPage.html":{},"interfaces/Sound.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":635,"title":{},"body":{"components/HomePage.html":{}}}],["up",{"_index":983,"title":{},"body":{"components/RegisterPage.html":{}}}],["update",{"_index":115,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["updatecards",{"_index":998,"title":{},"body":{"injectables/RegisterService.html":{}}}],["updatecards(username",{"_index":1008,"title":{},"body":{"injectables/RegisterService.html":{}}}],["url",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/MenuPage.html":{},"miscellaneous/variables.html":{}}}],["url('../../../assets/bulliten.jpg",{"_index":595,"title":{},"body":{"components/GoalsPage.html":{}}}],["useclass",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":430,"title":{},"body":{"components/ChatRoomPage.html":{},"components/GoalsPage.html":{}}}],["user.cards",{"_index":584,"title":{},"body":{"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["user.email",{"_index":937,"title":{},"body":{"components/ProfilePage.html":{}}}],["user.fullname",{"_index":97,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{}}}],["user.password",{"_index":101,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{}}}],["user.username",{"_index":98,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{}}}],["userfullname",{"_index":698,"title":{},"body":{"components/MainPage.html":{}}}],["username",{"_index":25,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/MainPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/RegisterService.html":{}}}],["username:string",{"_index":631,"title":{},"body":{"components/HomePage.html":{},"components/RegisterPage.html":{}}}],["val",{"_index":375,"title":{},"body":{"components/CalendarPage.html":{}}}],["value",{"_index":303,"title":{},"body":{"injectables/AudioService.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/GoalsPage.html":{},"components/JournalPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":147,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["variable",{"_index":1046,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["variables",{"_index":1040,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":740,"title":{},"body":{"components/MeditationPage.html":{}}}],["viewnotes",{"_index":676,"title":{},"body":{"components/JournalPage.html":{}}}],["void",{"_index":54,"title":{},"body":{"components/AchievementsPage.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"components/BlogPage.html":{},"components/CalendarPage.html":{},"components/ChatRoomPage.html":{},"components/DatesPage.html":{},"components/GoalsPage.html":{},"components/HomePage.html":{},"components/JournalPage.html":{},"components/MainPage.html":{},"components/MeditationPage.html":{},"components/MenuPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/Sound.html":{},"injectables/ThemeService.html":{}}}],["w",{"_index":553,"title":{},"body":{"components/GoalsPage.html":{}}}],["wander",{"_index":753,"title":{},"body":{"components/MeditationPage.html":{}}}],["warm",{"_index":885,"title":{},"body":{"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["warning",{"_index":915,"title":{},"body":{"components/ProfilePage.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["water",{"_index":568,"title":{},"body":{"components/GoalsPage.html":{}}}],["webpack",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["week",{"_index":533,"title":{},"body":{"components/GoalsPage.html":{}}}],["welcome",{"_index":714,"title":{},"body":{"components/MainPage.html":{}}}],["well",{"_index":345,"title":{},"body":{"components/BlogPage.html":{}}}],["width:300px",{"_index":124,"title":{},"body":{"components/AchievementsPage.html":{},"components/GoalsPage.html":{},"components/MainPage.html":{}}}],["work",{"_index":91,"title":{},"body":{"components/AchievementsPage.html":{}}}],["write",{"_index":686,"title":{},"body":{"components/JournalPage.html":{}}}],["yes",{"_index":384,"title":{},"body":{"components/CalendarPage.html":{},"components/GoalsPage.html":{}}}],["zone.js",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":191,"title":{},"body":{"modules/AchievementsPageModule.html":{},"modules/AppModule.html":{},"modules/BlogPageModule.html":{},"modules/CalendarPageModule.html":{},"modules/ChatRoomPageModule.html":{},"modules/DatesPageModule.html":{},"modules/GoalsPageModule.html":{},"modules/HomePageModule.html":{},"modules/JournalPageModule.html":{},"modules/MainPageModule.html":{},"modules/MeditationPageModule.html":{},"modules/MenuPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AchievementsPage.html":{"url":"components/AchievementsPage.html","title":"component - AchievementsPage","body":"\n                   \n\n\n\n\n\n  Components\n  AchievementsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/goals/achievements/achievements.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-achievements\n            \n\n            \n                styleUrls\n                ./achievements.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./achievements.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cardUpdate\n                            \n                            \n                                deleteAch\n                            \n                            \n                                    Async\n                                displayAlert\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                loadCards\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(theme: ThemeService, alertCtrl: AlertController, storage: Storage, register: RegisterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/goals/achievements/achievements.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        register\n                                                  \n                                                        \n                                                                        RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cardUpdate\n                        \n                        \n                    \n                \n            \n            \n                \ncardUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/achievements/achievements.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAch\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAch(card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/achievements/achievements.page.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            displayAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayAlert(header, subheader)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/achievements/achievements.page.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subheader\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/achievements/achievements.page.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadCards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCards()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/achievements/achievements.page.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/achievements/achievements.page.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/achievements/achievements.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/achievements/achievements.page.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/goals/achievements/achievements.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/goals/achievements/achievements.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/goals/achievements/achievements.page.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from 'src/app/theme.service';\nimport { AlertController } from '@ionic/angular';\nimport { Storage } from'@ionic/storage';\nimport { RegisterService } from 'src/app/services/register.service';\n\n@Component({\n  selector: 'app-achievements',\n  templateUrl: './achievements.page.html',\n  styleUrls: ['./achievements.page.scss'],\n})\nexport class AchievementsPage implements OnInit {\n\n  cards:any[];\n  username: any;\n  password: any;\n\n  constructor(\n    private theme: ThemeService,\n    private alertCtrl: AlertController,\n    private storage: Storage,\n    private register: RegisterService,\n\n  ) {\n    this.theme.storedTheme;\n    this.loadUser();\n   }\n  ngOnInit() {\n  }\n\n  async presentAlert() {\n    const alert = await this.alertCtrl.create({\n      header: 'Achievements',\n      message: 'Here you can see your completed goals, good work!',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  async loadUser(){\n    await this.storage.get('user').then((user) => {\n     console.log('your name is ' + user.fullname);\n     console.log('your username is ' + user.username);\n     this.username = user.username;\n     this.password = user.password;\n     this.cards=user.cards;\n   });\n }\n\n \n async loadCards(){\n  await this.storage.get('cards').then((cards) => {\n    this.cards = cards;\n  });\n}\n\nionViewWillEnter() {\n  this.loadCards();\n}\n\ndeleteAch(card){\n  card.achieved = \"false\";\n  this.cardUpdate();\n}\n\ncardUpdate(){\n  this.register.updateCards(this.username, this.password, this.cards).subscribe(async res => {\n    console.log(res)\n\n    if (res.error) {\n      this.displayAlert('Card Update Error', res.error);\n    }\n\n    if (res.user) {\n      this.storage.set('cards', this.cards);\n    }\n  });\n}\n\nasync displayAlert(header, subheader) {\n  const alert = await this.alertCtrl.create({\n    header: header,\n    subHeader: subheader,\n    buttons: ['Dismiss']\n  });\n  return await alert.present();\n}\n\n}\n\n    \n\n    \n        \n  Achievements\n  \n      \n        \n      \n  \n\n\n\n  ?\n  Your Personal Achievements:\n  \n    \n      \n        \n          \n              \n                \n              \n            \n               {{card.name}} \n              \n                  \n                    \n                  \n                \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./achievements.page.scss\n                \n                .square {\n    width:300px;\n    height:300px;\n    background-size:  100% 100%;\n    background-color: lightgrey !important;\n  }\n\n.center {\n    padding-top: 25%;\n    text-align: center;\n  }\n\nion-row{\n  align-items:center;\n  justify-content: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Achievements                          ?  Your Personal Achievements:                                                                                                     {{card.name}}                                                                                                                                 '\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AchievementsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AchievementsPageModule.html":{"url":"modules/AchievementsPageModule.html","title":"module - AchievementsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AchievementsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AchievementsPageModule\n\n\n\ncluster_AchievementsPageModule_declarations\n\n\n\n\nAchievementsPage\n\nAchievementsPage\n\n\n\nAchievementsPageModule\n\nAchievementsPageModule\n\nAchievementsPageModule -->\n\nAchievementsPage->AchievementsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/goals/achievements/achievements.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AchievementsPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AchievementsPage } from './achievements.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AchievementsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AchievementsPage]\n})\nexport class AchievementsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IonicStorageModule } from '@ionic/storage';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomePage } from './home/home.page';\nimport { RegisterPage } from './register/register.page';\n\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nconst config: SocketIoConfig = {url: 'http://localhost:3001', options:{}};\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule, \n    HttpClientModule,\n    IonicStorageModule.forRoot(),\n    SocketIoModule.forRoot(config)],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    HomePage,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.deepCss('app-root ion-content')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', loadChildren: './pages/menu/menu.module#MenuPageModule'},\n  { path: 'chat-room', loadChildren: './chat-room/chat-room.module#ChatRoomPageModule' }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/audio.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                audioPlayer\n                            \n                            \n                                    Private\n                                forceWebAudio\n                            \n                            \n                                    Public\n                                sounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                play\n                            \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, nativeAudio: NativeAudio)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/audio.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nativeAudio\n                                                  \n                                                        \n                                                                    NativeAudio\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            play\n                        \n                        \n                    \n                \n            \n            \n                \nplay(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/audio.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            preload\n                        \n                        \n                    \n                \n            \n            \n                \npreload(key: string, asset: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/audio.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    asset\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            audioPlayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLAudioElement\n\n                        \n                    \n                    \n                        \n                            Default value : new Audio()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/audio.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            forceWebAudio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/audio.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Sound[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/audio.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { NativeAudio } from '@ionic-native/native-audio/ngx';\n\ninterface Sound {\n  key: string;\n  asset: string;\n  isNative: boolean\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AudioService {\n\n  public sounds: Sound[] = [];\n  private audioPlayer: HTMLAudioElement = new Audio();\n  private forceWebAudio: boolean = true;\n\n  constructor(private platform: Platform, private nativeAudio: NativeAudio){\n\n  }\n\n  preload(key: string, asset: string): void {\n\n    if(this.platform.is('cordova') && !this.forceWebAudio){\n\n     this.nativeAudio.preloadSimple(key, asset);\n\n      this.sounds.push({\n        key: key,\n        asset: asset,\n        isNative: true\n      });\n\n    } else {\n\n      let audio = new Audio();\n      audio.src = asset;\n\n      this.sounds.push({\n        key: key,\n        asset: asset,\n        isNative: false\n      });\n\n    }\n\n  }\n\n  play(key: string): boolean {\n\n    let soundToPlay = this.sounds.find((sound) => {\n      return sound.key === key;\n    });\n    if (soundToPlay != null){\n      if(soundToPlay.isNative){\n\n        this.nativeAudio.play(soundToPlay.asset).then((res) => {\n          console.log(res);\n          return true;\n        }, (err) => {\n          console.log(err);\n          return false;\n        });\n\n      } else {\n\n        this.audioPlayer.src = soundToPlay.asset;\n        this.audioPlayer.play();\n        return true;\n      }\n    }\n    else {\n      return false;\n    }\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlogPage.html":{"url":"components/BlogPage.html","title":"component - BlogPage","body":"\n                   \n\n\n\n\n\n  Components\n  BlogPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/blog/blog.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blog\n            \n\n            \n                styleUrls\n                ./blog.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./blog.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(theme: ThemeService, alertCtrl: AlertController, nav: NavController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/blog/blog.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/blog/blog.page.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/blog/blog.page.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/blog/blog.page.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from 'src/app/theme.service';\nimport { NavController, AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.page.html',\n  styleUrls: ['./blog.page.scss'],\n})\nexport class BlogPage implements OnInit {\n\n\tconstructor(\n\t\tprivate theme: ThemeService,\n\t\tprivate alertCtrl: AlertController,\n\t\tpublic nav: NavController\n\t) {\n\t\tthis.theme.storedTheme;\n\t}\n\t\n\tngOnInit() {\n\t}\n\n\tasync presentAlert() {\n\t\tconst alert = await this.alertCtrl.create({\n\t\t  header: 'Blog',\n\t\t  message: 'On this page you can post your thoughts and achievements as well as see your friends posts',\n\t\t  buttons: ['OK']\n\t\t});\n\t\n\t\tawait alert.present();\n\t  }\n}\n\n    \n\n    \n        \n  Blog\n  \n      \n        \n      \n  \n\n\n\n\t?\n\t\n\t\t My Notes\n\t\t\n\t\t\tRecent Notes example note\n\t\t\n\t\t\n\t\tFriend's Notes\n\t\t\n\t\t\tTop Friend's Notes  example note\n\t\t\n\t\n\n\n    \n\n    \n                \n                    ./blog.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Blog                        \t?\t\t\t My Notes\t\t\t\t\tRecent Notes example note\t\t\t\t\t\tFriend\\'s Notes\t\t\t\t\tTop Friend\\'s Notes  example note\t\t\t'\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlogPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlogPageModule.html":{"url":"modules/BlogPageModule.html","title":"module - BlogPageModule","body":"\n                   \n\n\n\n\n    Modules\n    BlogPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BlogPageModule\n\n\n\ncluster_BlogPageModule_declarations\n\n\n\n\nBlogPage\n\nBlogPage\n\n\n\nBlogPageModule\n\nBlogPageModule\n\nBlogPageModule -->\n\nBlogPage->BlogPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/blog/blog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlogPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BlogPage } from './blog.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BlogPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BlogPage]\n})\nexport class BlogPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarPage.html":{"url":"components/CalendarPage.html","title":"component - CalendarPage","body":"\n                   \n\n\n\n\n\n  Components\n  CalendarPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/calendar/calendar.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n            \n                styleUrls\n                ./calendar.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./calendar.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cards\n                            \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                add\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                popup\n                            \n                            \n                                    Async\n                                presentAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(theme: ThemeService, alertCtrl: AlertController, nav: NavController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/calendar/calendar.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/calendar/calendar.page.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/calendar/calendar.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            popup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    popup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/calendar/calendar.page.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/calendar/calendar.page.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\"name\": \"New Event\", \"task\": \"false\", \"desc\": \"\"}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/calendar/calendar.page.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      { val: 'Task 1', isChecked: false },\n      { val: 'Task 2', isChecked: false },\n      { val: 'Task 3', isChecked: false }\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/calendar/calendar.page.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from '../../theme.service'\nimport { NavController } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.page.html',\n  styleUrls: ['./calendar.page.scss'],\n})\nexport class CalendarPage implements OnInit {\n  public cards = [{\"name\": \"New Event\", \"task\": \"false\", \"desc\": \"\"}];\npublic form = [\n      { val: 'Task 1', isChecked: false },\n      { val: 'Task 2', isChecked: false },\n      { val: 'Task 3', isChecked: false }\n    ];\n\n  constructor(\n    private theme: ThemeService,\n    private alertCtrl: AlertController,\n\t  private nav:NavController\n    ) {\n    this.theme.storedTheme;\n   }\n\n  async add() {\n    let alert = await this.alertCtrl.create({\n      header: 'Add Checklist',\n      buttons: [\n        {\n          text: \"Yes\",\n          handler: data => {\n            this.cards[0].task = \"true\";\n          }\n        }\n      ]\n    });\n    return await alert.present();\n  }\n\n\n  async popup(){\n    let alert = await this.alertCtrl.create({\n      header: 'New Event',\n      cssClass: 'custom',\n      buttons: [\n\t    {\n          text: \"save\",\n          handler: data => {\n            this.add();\n\t\t\t    }\n\t\t  }\n      ]\n    });\n    return await alert.present();\n  }\n\n  ngOnInit() {\n  }\n\n  async presentAlert() {\n    const alert = await this.alertCtrl.create({\n      header: 'To-Do',\n      message: 'This is where you can keep track of your goals!',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n}\n  \n  \n  \n\n\n\n    \n\n    \n        \n  To-Do\n  \n      \n        \n      \n  \n\n\n\n?\n\n\n    \n      Add Event\n    \n  \n\n  \n    \n      \n        \n          \n            \n              New Event\n                  \n                    \n                      {{entry.val}}\n                      \n                    \n                  \n            \n          \n        \n      \n   \n  >\n\n\n    \n\n    \n                \n                    ./calendar.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  To-Do                        ?          Add Event                                                              New Event                                                            {{entry.val}}                                                                                                     >'\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CalendarPageModule.html":{"url":"modules/CalendarPageModule.html","title":"module - CalendarPageModule","body":"\n                   \n\n\n\n\n    Modules\n    CalendarPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CalendarPageModule\n\n\n\ncluster_CalendarPageModule_declarations\n\n\n\n\nCalendarPage\n\nCalendarPage\n\n\n\nCalendarPageModule\n\nCalendarPageModule\n\nCalendarPageModule -->\n\nCalendarPage->CalendarPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/calendar/calendar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalendarPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CalendarPage } from './calendar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CalendarPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CalendarPage]\n})\nexport class CalendarPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatRoomPage.html":{"url":"components/ChatRoomPage.html","title":"component - ChatRoomPage","body":"\n                   \n\n\n\n\n\n  Components\n  ChatRoomPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chat-room/chat-room.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-room\n            \n\n            \n                styleUrls\n                ./chat-room.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-room.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                messages\n                            \n                            \n                                nickname\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getUsers\n                            \n                            \n                                ionViewWillLeave\n                            \n                            \n                                sendMessage\n                            \n                            \n                                    Async\n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, socket: Socket, toastCtrl: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/chat-room/chat-room.page.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                    Socket\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-room/chat-room.page.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-room/chat-room.page.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-room/chat-room.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-room/chat-room.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            showToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showToast(msg)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-room/chat-room.page.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat-room/chat-room.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat-room/chat-room.page.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nickname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat-room/chat-room.page.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { Socket } from 'ngx-socket-io';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-chat-room',\n  templateUrl: './chat-room.page.html',\n  styleUrls: ['./chat-room.page.scss'],\n})\nexport class ChatRoomPage  {\n\n  messages = [];\n  nickname = '';\n  message = '';\n\n  constructor(\n    private navCtrl: NavController,  \n    private socket: Socket, \n    private toastCtrl: ToastController) { \n\n    this.getMessages().subscribe(message => {\n      this.messages.push(message);\n    });\n \n    this.getUsers().subscribe(data => {\n      let user = data['user'];\n      if (data['event'] === 'left') {\n        this.showToast('User left: ' + user);\n      } else {\n        this.showToast('User joined: ' + user);\n      }\n    });\n  }\n \n  sendMessage() {\n    this.socket.emit('add-message', { text: this.message });\n    this.message = '';\n  }\n \n  getMessages() {\n    let observable = new Observable(observer => {\n      this.socket.on('message', (data) => {\n        observer.next(data);\n      });\n    })\n    return observable;\n  }\n \n  getUsers() {\n    let observable = new Observable(observer => {\n      this.socket.on('users-changed', (data) => {\n        observer.next(data);\n      });\n    });\n    return observable;\n  }\n \n  ionViewWillLeave() {\n    this.socket.disconnect();\n  }\n \n  async showToast(msg) {\n     let toast = await this.toastCtrl.create({\n      message: msg,\n      duration: 2000\n    });\n    toast.present();\n  }\n  \n\n}\n\n    \n\n    \n        \n    \n      Chat\n    \n\n \n\n  \n    \n      \n      \n        {{ message.from }}:\n        {{ message.text }}\n        {{message.created | date:'dd.MM hh:MM'}}\n      \n \n      \n        {{ message.from }}:\n        {{ message.text }}\n        {{message.created | date:'dd.MM hh:MM'}}\n      \n \n    \n  \n \n\n \n\n  \n    \n      \n        \n          \n        \n      \n      \n        \n        Send\n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./chat-room.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Chat                               {{ message.from }}:        {{ message.text }}        {{message.created | date:\\'dd.MM hh:MM\\'}}                     {{ message.from }}:        {{ message.text }}        {{message.created | date:\\'dd.MM hh:MM\\'}}                                                                                 Send                  '\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatRoomPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatRoomPageModule.html":{"url":"modules/ChatRoomPageModule.html","title":"module - ChatRoomPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatRoomPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChatRoomPageModule\n\n\n\ncluster_ChatRoomPageModule_declarations\n\n\n\n\nChatRoomPage\n\nChatRoomPage\n\n\n\nChatRoomPageModule\n\nChatRoomPageModule\n\nChatRoomPageModule -->\n\nChatRoomPage->ChatRoomPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/chat-room/chat-room.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChatRoomPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatRoomPage } from './chat-room.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatRoomPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ChatRoomPage]\n})\nexport class ChatRoomPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatesPage.html":{"url":"components/DatesPage.html","title":"component - DatesPage","body":"\n                   \n\n\n\n\n\n  Components\n  DatesPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/calendar/dates/dates.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dates\n            \n\n            \n                styleUrls\n                ./dates.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./dates.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nav\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, nav: NavController, storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/calendar/dates/dates.page.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/calendar/dates/dates.page.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/calendar/dates/dates.page.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/calendar/dates/dates.page.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/calendar/dates/dates.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/calendar/dates/dates.page.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-dates',\n  templateUrl: './dates.page.html',\n  styleUrls: ['./dates.page.scss'],\n})\nexport class DatesPage implements OnInit {\n\t\n  constructor(public router: Router,\n    public nav: NavController,\n    private storage: Storage\n    ){\n  }\n  \n  save(){\n\tthis.nav.navigateRoot(\"menu/(menucontent:calendar)\");\n  }\n  \n  cancel(){\n\tthis.nav.navigateRoot(\"menu/(menucontent:calendar)\");\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Add Event\n  \n\n\n\n\t\n\t\t\n\t\n\t\n\t\t\n\t\n\t\n\t\t\n\t\n\t\n\t\t\n\t\n\tsave\n\tcancel\n\n\n    \n\n    \n                \n                    ./dates.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Add Event  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsave\tcancel'\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DatesPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatesPageModule.html":{"url":"modules/DatesPageModule.html","title":"module - DatesPageModule","body":"\n                   \n\n\n\n\n    Modules\n    DatesPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatesPageModule\n\n\n\ncluster_DatesPageModule_declarations\n\n\n\n\nDatesPage\n\nDatesPage\n\n\n\nDatesPageModule\n\nDatesPageModule\n\nDatesPageModule -->\n\nDatesPage->DatesPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/calendar/dates/dates.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DatesPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DatesPage } from './dates.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DatesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DatesPage]\n})\nexport class DatesPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoalsPage.html":{"url":"components/GoalsPage.html","title":"component - GoalsPage","body":"\n                   \n\n\n\n\n\n  Components\n  GoalsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/goals/goals.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-goals\n            \n\n            \n                styleUrls\n                ./goals.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./goals.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bottles\n                            \n                            \n                                    Public\n                                cards\n                            \n                            \n                                    Private\n                                cardTemplate\n                            \n                            \n                                    Public\n                                gymDays\n                            \n                            \n                                    Public\n                                jogDays\n                            \n                            \n                                password\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bottleCheck\n                            \n                            \n                                    Async\n                                cardUpdate\n                            \n                            \n                                    Async\n                                congratulate\n                            \n                            \n                                dayCheck\n                            \n                            \n                                deleteCard\n                            \n                            \n                                    Async\n                                diet\n                            \n                            \n                                    Async\n                                displayAlert\n                            \n                            \n                                    Async\n                                drinkWater\n                            \n                            \n                                    Async\n                                exercise\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ionViewWillLeave\n                            \n                            \n                                loadUser\n                            \n                            \n                                    Async\n                                popup\n                            \n                            \n                                    Async\n                                presentAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(theme: ThemeService, alertCtrl: AlertController, register: RegisterService, storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/goals/goals.page.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        register\n                                                  \n                                                        \n                                                                        RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bottleCheck\n                        \n                        \n                    \n                \n            \n            \n                \nbottleCheck(card, bottle)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bottle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            cardUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cardUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            congratulate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    congratulate(card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dayCheck\n                        \n                        \n                    \n                \n            \n            \n                \ndayCheck(card, day)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    day\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCard\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCard(card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            diet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    diet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            displayAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayAlert(header, subheader)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subheader\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            drinkWater\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drinkWater()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exercise\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exercise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadUser\n                        \n                        \n                    \n                \n            \n            \n                \nloadUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            popup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    popup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/goals/goals.page.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bottles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\"bottlenum\": 1, \"checked\":\"false\"},\n                    {\"bottlenum\": 2, \"checked\": \"false\"},\n                    {\"bottlenum\": 3, \"checked\": \"false\"}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/goals/goals.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\"name\": \"3 Bottles a Day\", \"goal\": \"false\", \"desc\": \"How many bottles have you drank today?  Check them as you go!\", \"achieved\": \"false\"},\n                 {\"name\": \"Drink Every Hour\", \"goal\": \"false\", \"desc\": \"Have you drank every hour today?\"},\n                 {\"name\": \"Go to the Gym More\", \"goal\": \"false\", \"desc\": \"Have you gone to the gym today? Check off each day you go this week!\", \"achieved\": \"false\"},\n                 {\"name\": \"Jog More Often\", \"goal\": \"false\", \"desc\": \"Have you jogged today? Check off each day you go this week!\", \"achieved\": \"false\"},\n                 {\"name\": \"Eat Healthier\", \"goal\": \"false\", \"desc\": \"Remember to make good health choices! Are you happy with what you ate today?\", \"achieved\": \"false\"},\n                 {\"name\": \"Eat Less\", \"goal\": \"false\", \"desc\": \"Eat less food more, but more times a day! Are you happy with your meal sizes today?\", \"achieved\": \"false\"}\n]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/goals/goals.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cardTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\"name\": \"3 Bottles a Day\", \"goal\": \"false\", \"desc\": \"How many bottles have you drank today?  Check them as you go!\"},\n   {\"name\": \"Drink Every Hour\", \"goal\": \"false\", \"desc\": \"Have you drank every hour today?\"},\n  {\"name\": \"Go to the Gym More\", \"goal\": \"false\", \"desc\": \"Have you gone to the gym today? Check off each day you go this week!\"},\n  {\"name\": \"Jog More Often\", \"goal\": \"false\", \"desc\": \"Have you jogged today? Check off each day you go this week!\"},\n  {\"name\": \"Eat Healthier\", \"goal\": \"false\", \"desc\": \"Remember to make good health choices! Are you happy with what you ate today?\"},\n  {\"name\": \"Eat Less\", \"goal\": \"false\", \"desc\": \"Eat less food more, but more times a day! Are you happy with your meal sizes today?\"},\n  {\"name\": \"\", \"goal\": \"false\", \"desc\": \"\"}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/goals/goals.page.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gymDays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\"day\": \"M\", \"checked\": \"false\"},\n  {\"day\": \"T\", \"checked\": \"false\"},\n  {\"day\": \"W\", \"checked\": \"false\"},\n  {\"day\": \"Th\", \"checked\": \"false\"},\n  {\"day\": \"F\", \"checked\": \"false\"},\n  {\"day\": \"Sa\", \"checked\": \"false\"},\n  {\"day\": \"Su\", \"checked\": \"false\"}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/goals/goals.page.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            jogDays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\"day\": \"M\", \"checked\": \"false\"},\n                {\"day\": \"T\", \"checked\": \"false\"},\n                {\"day\": \"W\", \"checked\": \"false\"},\n                {\"day\": \"Th\", \"checked\": \"false\"},\n                {\"day\": \"F\", \"checked\": \"false\"},\n                {\"day\": \"Sa\", \"checked\": \"false\"},\n                {\"day\": \"Su\", \"checked\": \"false\"}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/goals/goals.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/goals/goals.page.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/goals/goals.page.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/goals/goals.page.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from 'src/app/theme.service';\nimport { AlertController } from '@ionic/angular';\nimport { SelectorMatcher } from '@angular/compiler';\nimport { RegisterService } from '../../services/register.service';\nimport { registerContentQuery } from '@angular/core/src/render3';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-goals',\n  templateUrl: './goals.page.html',\n  styleUrls: ['./goals.page.scss'],\n})\nexport class GoalsPage {\n\n  public cards = [{\"name\": \"3 Bottles a Day\", \"goal\": \"false\", \"desc\": \"How many bottles have you drank today?  Check them as you go!\", \"achieved\": \"false\"},\n                 {\"name\": \"Drink Every Hour\", \"goal\": \"false\", \"desc\": \"Have you drank every hour today?\"},\n                 {\"name\": \"Go to the Gym More\", \"goal\": \"false\", \"desc\": \"Have you gone to the gym today? Check off each day you go this week!\", \"achieved\": \"false\"},\n                 {\"name\": \"Jog More Often\", \"goal\": \"false\", \"desc\": \"Have you jogged today? Check off each day you go this week!\", \"achieved\": \"false\"},\n                 {\"name\": \"Eat Healthier\", \"goal\": \"false\", \"desc\": \"Remember to make good health choices! Are you happy with what you ate today?\", \"achieved\": \"false\"},\n                 {\"name\": \"Eat Less\", \"goal\": \"false\", \"desc\": \"Eat less food more, but more times a day! Are you happy with your meal sizes today?\", \"achieved\": \"false\"}\n]\n\n  private cardTemplate = [{\"name\": \"3 Bottles a Day\", \"goal\": \"false\", \"desc\": \"How many bottles have you drank today?  Check them as you go!\"},\n   {\"name\": \"Drink Every Hour\", \"goal\": \"false\", \"desc\": \"Have you drank every hour today?\"},\n  {\"name\": \"Go to the Gym More\", \"goal\": \"false\", \"desc\": \"Have you gone to the gym today? Check off each day you go this week!\"},\n  {\"name\": \"Jog More Often\", \"goal\": \"false\", \"desc\": \"Have you jogged today? Check off each day you go this week!\"},\n  {\"name\": \"Eat Healthier\", \"goal\": \"false\", \"desc\": \"Remember to make good health choices! Are you happy with what you ate today?\"},\n  {\"name\": \"Eat Less\", \"goal\": \"false\", \"desc\": \"Eat less food more, but more times a day! Are you happy with your meal sizes today?\"},\n  {\"name\": \"\", \"goal\": \"false\", \"desc\": \"\"}];\n\n  public bottles = [{\"bottlenum\": 1, \"checked\":\"false\"},\n                    {\"bottlenum\": 2, \"checked\": \"false\"},\n                    {\"bottlenum\": 3, \"checked\": \"false\"}];\n\n  public jogDays = [{\"day\": \"M\", \"checked\": \"false\"},\n                {\"day\": \"T\", \"checked\": \"false\"},\n                {\"day\": \"W\", \"checked\": \"false\"},\n                {\"day\": \"Th\", \"checked\": \"false\"},\n                {\"day\": \"F\", \"checked\": \"false\"},\n                {\"day\": \"Sa\", \"checked\": \"false\"},\n                {\"day\": \"Su\", \"checked\": \"false\"}];\n\n  public gymDays = [{\"day\": \"M\", \"checked\": \"false\"},\n  {\"day\": \"T\", \"checked\": \"false\"},\n  {\"day\": \"W\", \"checked\": \"false\"},\n  {\"day\": \"Th\", \"checked\": \"false\"},\n  {\"day\": \"F\", \"checked\": \"false\"},\n  {\"day\": \"Sa\", \"checked\": \"false\"},\n  {\"day\": \"Su\", \"checked\": \"false\"}];\n\n  username: any;\n  password: any;\n  user: any;\n\n  constructor(\n    private theme: ThemeService,\n    private alertCtrl: AlertController,\n    private register: RegisterService,\n    private storage: Storage,\n  ) {\n    this.theme.storedTheme;\n    this.loadUser();\n  }\n\n  async drinkWater() {\n    let alert = await this.alertCtrl.create({\n      header: 'How would you like to improve water intake?',\n      buttons: [\n        {\n          text: \"3 Bottles a Day\",\n          handler: data => {\n            this.cards[0].goal = \"true\";\n            this.cardUpdate();\n          }\n        },\n        {\n          text: \"Drink Every Hour\",\n          handler: data => {\n            this.cards[1].goal = \"true\";\n            this.cardUpdate();\n          }\n        }\n      ]\n    });\n    return await alert.present();\n  }\n\n  async exercise() {\n    let alert = await this.alertCtrl.create({\n      header: 'What exercise goals do you have?',\n      buttons: [\n        {\n          text: \"Go to the Gym More\",\n          handler: data => {\n            this.cards[2].goal = \"true\";\n            this.cardUpdate();\n          }\n        },\n        {\n          text: \"Jog More Often\",\n          handler: data => {\n            this.cards[3].goal = \"true\";\n            this.cardUpdate();\n          }\n        }\n      ]\n    });\n    return await alert.present();\n  }\n\n  async diet() {\n    let alert = await this.alertCtrl.create({\n      header: 'What exercise goals do you have?',\n      buttons: [\n        {\n          text: \"Eat Healthier\",\n          handler: data => {\n            this.cards[4].goal = \"true\";\n            this.cardUpdate();\n          }\n        },\n        {\n          text: \"Eat Less\",\n          handler: data => {\n            this.cards[5].goal = \"true\";\n            this.cardUpdate();\n          }\n        }\n      ]\n    });\n    \n    return await alert.present();\n  }\n\n  async popup() {\n\n    let alert = await this.alertCtrl.create({\n      header: 'Choose Goals!',\n      cssClass: 'custom',\n      buttons: [\n        {\n          text: \"Drink More Water\",\n          handler: data => {\n            this.drinkWater();\n          }\n        },\n        {\n          text: \"Exercise More\",\n          handler: data => {\n            this.exercise();\n          }\n        },\n        {\n          text: \"Eat Better\",\n          handler: data => {\n            this.diet();\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n      \n\n  }\n\n  async cardUpdate(){\n    await this.storage.set('cards', this.cards);\n    this.register.updateCards(this.username, this.password, this.cards).subscribe(async res => {\n      console.log(res)\n\n      if (res.error) {\n        this.displayAlert('Card Update Error', res.error);\n      }\n      this.user.cards = this.cards;\n       await this.storage.set('user', this.user);\n        \n    });\n  }\n\n   loadUser() {\n      this.storage.get('user').then((user) => {\n      console.log('your name is ' + user.fullname);\n      console.log('your username is ' + user.username);\n      this.username = user.username;\n      this.password = user.password;\n      this.user = user;\n      this.cards = user.cards;\n    });\n  }\n\n  async displayAlert(header, subheader) {\n    const alert = await this.alertCtrl.create({\n      header: header,\n      subHeader: subheader,\n      buttons: ['Dismiss']\n    });\n    return await alert.present();\n  }\n\n  deleteCard(card){\n    card.goal = \"false\";\n    this.cardUpdate();\n  }\n\n  async presentAlert() {\n    const alert = await this.alertCtrl.create({\n      header: 'Goals',\n      message: 'Here you can see your current goals and set new ones!',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  ionViewWillEnter(){\n    this.loadUser();\n  }\n\n  ionViewWillLeave(){\n    this.cardUpdate();\n  }\n\n  bottleCheck(card, bottle){\n    console.log(card);\n    bottle.checked = \"true\";\n    let num: any = 0;\n    for(num;num \n    \n\n    \n        \n  Goals\n  \n      \n        \n      \n  \n\n\n\n  ?\n\n  \n    \n      Choose a new Goal!\n    \n  \n\n  \n    \n      \n        \n          \n              \n                \n              \n            \n               {{card.name}} \n              {{card.desc}}\n\n              \n                \n              \n\n              \n                \n              \n\n              \n                \n              \n\n              \n                yes\n                no\n              \n\n              \n                yes\n                no\n              \n\n              \n                  yes\n                  no\n                \n\n            \n          \n        \n      \n   \n  >\n\n\n    \n\n    \n                \n                    ./goals.page.scss\n                \n                ion-content{\n  --background: url('../../../assets/bulliten.jpg');\n  --background-repeat: no-repeat;\n  --backgroud-size: cover;\n}\n\n.square {\n    width:300px;\n    height:300px;\n    background-size:  100% 100%;\n    background-color: cornsilk !important;\n  }\n\n.center {\n    padding-top: 25%;\n    text-align: center;\n  }\n\n.custom {\n  color: black;\n}\n\nion-row{\n  align-items: center;\n  justify-content: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Goals                          ?            Choose a new Goal!                                                                                                           {{card.name}}               {{card.desc}}                                                                                                                                                                  yes                no                                            yes                no                                              yes                  no                                                         >'\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoalsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GoalsPageModule.html":{"url":"modules/GoalsPageModule.html","title":"module - GoalsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    GoalsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GoalsPageModule\n\n\n\ncluster_GoalsPageModule_declarations\n\n\n\n\nGoalsPage\n\nGoalsPage\n\n\n\nGoalsPageModule\n\nGoalsPageModule\n\nGoalsPageModule -->\n\nGoalsPage->GoalsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/goals/goals.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GoalsPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GoalsPage } from './goals.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GoalsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [GoalsPage]\n})\nexport class GoalsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nav\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                storage\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                displayAlert\n                            \n                            \n                                goRegister\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                removeUserLocalStorage\n                            \n                            \n                                    Async\n                                showLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, reg: RegisterService, loadingCtrl: LoadingController, alertCtrl: AlertController, storage: Storage, menu: MenuController, nav: NavController)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.page.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reg\n                                                  \n                                                        \n                                                                        RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        menu\n                                                  \n                                                        \n                                                                    MenuController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            displayAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayAlert(header, subheader)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.page.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subheader\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goRegister\n                        \n                        \n                    \n                \n            \n            \n                \ngoRegister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.page.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.page.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.page.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeUserLocalStorage\n                        \n                        \n                    \n                \n            \n            \n                \nremoveUserLocalStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.page.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            showLoading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.page.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.page.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.page.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.page.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.page.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { RegisterService } from '../services/register.service';\nimport { LoadingController, AlertController, MenuController, NavController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  username:string;\n  password:string;\n\n  constructor(public router: Router,\n    private reg: RegisterService,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController,\n    public storage: Storage,\n    private menu: MenuController,\n    public nav: NavController\n    ){\n  }\n\n  async login(){\n    await this.showLoading();\n    if(this.username === undefined || this.password === undefined){\n      this.loadingCtrl.dismiss();\n      this.displayAlert('Login Failed', 'Empty Fields');\n      return;\n    }\n    this.reg.loginUser(this.username, this.password).subscribe( res => \n      { \n        this.loadingCtrl.dismiss();\n        console.log(res.user);\n        if(res.user){\n          this.storage.set('user', res.user);\n          this.nav.navigateRoot(\"menu/(menucontent:main)\");        }\n      },\n      err => {\n        this.loadingCtrl.dismiss();\n        this.displayAlert('Login Error', err.error);\n      });\n  }\n\n  async showLoading(){\n    const loading =  await this.loadingCtrl.create({\n      message: 'Loading...',\n      spinner: 'bubbles',\n      duration: 3000\n    });\n\n     return await loading.present();\n  }\n\n  async displayAlert(header, subheader){\n    const alert = await this.alertCtrl.create({\n      header: header,\n      subHeader: subheader,\n      buttons: ['Dismiss']\n    });\n    return await alert.present();\n  }\n\n  goRegister(){\n    this.nav.navigateRoot(\"menu/(menucontent:register)\");\n  }\n\n  ionViewWillEnter() {\n    this.menu.enable(false);\n  }\n  \n  removeUserLocalStorage(){\n    this.storage.remove('cards');\n    return this.storage.remove('user');\n  }\n}\n\n    \n\n    \n        \n  Strive\n  \n    \n      \n    \n    \n      \n    \n  \n  Mobile login\n  Log in\n  Register\n\n\n    \n\n    \n                \n                    home.page.scss\n                \n                page-home  {\n    ion-title * {\n        margin-top:30vh;\n        margin-bottom:5vh;\n    }\n}\n\n.padding{\n    padding: 50px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Strive                                  Mobile login  Log in  Register'\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule} from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePage } from './home.page';\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JournalPage.html":{"url":"components/JournalPage.html","title":"component - JournalPage","body":"\n                   \n\n\n\n\n\n  Components\n  JournalPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/blog/journal/journal.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-journal\n            \n\n            \n                styleUrls\n                ./journal.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./journal.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                            \n                                    Public\n                                nav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToMain\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentAlert\n                            \n                            \n                                save\n                            \n                            \n                                viewNotes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(theme: ThemeService, nav: NavController, alertCtrl: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/blog/journal/journal.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backToMain\n                        \n                        \n                    \n                \n            \n            \n                \nbackToMain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/blog/journal/journal.page.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/blog/journal/journal.page.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/blog/journal/journal.page.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/blog/journal/journal.page.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            viewNotes\n                        \n                        \n                    \n                \n            \n            \n                \nviewNotes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/blog/journal/journal.page.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/blog/journal/journal.page.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/blog/journal/journal.page.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from 'src/app/theme.service';\nimport { NavController, AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-journal',\n  templateUrl: './journal.page.html',\n  styleUrls: ['./journal.page.scss'],\n})\nexport class JournalPage implements OnInit {\n\n  item:string = '';\n  constructor(\n  private theme: ThemeService,\n  public nav: NavController,\n  private alertCtrl: AlertController) {\n    this.theme.storedTheme;\n   }\n   \n\tbackToMain(){\n\t\tthis.nav.navigateRoot(\"menu/(menucontent:main)\");\n\t}\n   \n   save(item){\n\t\t\n   }\n   viewNotes(){\n\t\n   }\n  ngOnInit() {\n  }\n\n  async presentAlert() {\n    const alert = await this.alertCtrl.create({\n      header: 'Journal',\n      message: 'Here you can write all of your personal thoughts, they are just for you',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n}\n\n    \n\n    \n        \n  Journal\n  \n      \n        \n      \n  \n\n\n\n  ?\n\tNotes\n\tMain Menu\n  \n\n  \n    \n\t  \n    \n    \n\t\tShare\n    \n\t\n\t\tDelete\n    \n  \n  Save Note\n\n\n\n    \n\n    \n                \n                    ./journal.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Journal                          ?\tNotes\tMain Menu        \t          \t\tShare    \t\t\tDelete        Save Note'\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JournalPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JournalPageModule.html":{"url":"modules/JournalPageModule.html","title":"module - JournalPageModule","body":"\n                   \n\n\n\n\n    Modules\n    JournalPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JournalPageModule\n\n\n\ncluster_JournalPageModule_declarations\n\n\n\n\nJournalPage\n\nJournalPage\n\n\n\nJournalPageModule\n\nJournalPageModule\n\nJournalPageModule -->\n\nJournalPage->JournalPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/blog/journal/journal.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JournalPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { JournalPage } from './journal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JournalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [JournalPage]\n})\nexport class JournalPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainPage.html":{"url":"components/MainPage.html","title":"component - MainPage","body":"\n                   \n\n\n\n\n\n  Components\n  MainPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/main/main.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main\n            \n\n            \n                styleUrls\n                ./main.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                userFullName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                joinChat\n                            \n                            \n                                loadCards\n                            \n                            \n                                loadUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, reg: RegisterService, loadingCtrl: LoadingController, alertCtrl: AlertController, storage: Storage, menu: MenuController, theme: ThemeService, socket: Socket, navCtrl: NavController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/main/main.page.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reg\n                                                  \n                                                        \n                                                                        RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        menu\n                                                  \n                                                        \n                                                                    MenuController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theme\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                    Socket\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/main/main.page.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            joinChat\n                        \n                        \n                    \n                \n            \n            \n                \njoinChat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/main/main.page.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCards\n                        \n                        \n                    \n                \n            \n            \n                \nloadCards()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/main/main.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadUser\n                        \n                        \n                    \n                \n            \n            \n                \nloadUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/main/main.page.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/main/main.page.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/main/main.page.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userFullName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/main/main.page.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RegisterService } from '../../services/register.service';\nimport { LoadingController, AlertController, MenuController, NavController } from '@ionic/angular';\n\nimport { Storage } from '@ionic/storage'\nimport { ThemeService } from 'src/app/theme.service';\nimport { Socket } from 'ngx-socket-io';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.page.html',\n  styleUrls: ['./main.page.scss'],\n})\nexport class MainPage {\n\n    userFullName: any;\n    cards:any[];\n\n    constructor(public router: Router,\n    private reg: RegisterService,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController,\n    private storage: Storage,\n    private menu: MenuController,\n    private theme: ThemeService,\n    private socket: Socket,\n    private navCtrl: NavController){\n      this.theme.storedTheme;\n    }\n\n    loadUser(){\n        this.storage.get('user').then((user) => {\n        console.log('your name is ' + user.fullname);\n        console.log('your username is ' + user.username);\n        this.userFullName = user.fullname;\n        this.storage.set('cards', user.cards);\n      });\n    }\n\n    //from devdactic also\n    joinChat() {\n      this.socket.connect();\n      this.socket.emit('set-nickname', this.userFullName);\n      this.navCtrl.navigateRoot(\"menu/(menucontent:chat)\");\n    }\n\n\n     loadCards(){\n        this.storage.get('cards').then((cards) => {\n        this.cards = cards;\n      });\n    }\n\n    ionViewWillEnter() {\n      this.menu.enable(true);\n      this.loadUser();\n      this.loadCards();\n    }\n\n}\n\n    \n\n    \n        \n  Strive\n  \n    \n      \n    \n  \n\nJoin Chat as {{ userFullName }}\n\n\n  \n    \n      \n        \n          Welcome to Strive, {{userFullName}}!\n          Your new center of health!\n        \n      \n    \n  \n\n  \n    Current Goals:\n    \n      \n        \n          {{card.name}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./main.page.scss\n                \n                .square {\n    width:300px;\n    height:300px;\n    background-size:  100% 100%;;\n    text-align: center;\n  }\n\n.centerCard{\n  padding-top: 25%;\n  text-align: center;\n}\n\n.center {\n    text-align: center;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Strive                  Join Chat as {{ userFullName }}                              Welcome to Strive, {{userFullName}}!          Your new center of health!                          Current Goals:                            {{card.name}}                    '\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainPageModule.html":{"url":"modules/MainPageModule.html","title":"module - MainPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MainPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainPageModule\n\n\n\ncluster_MainPageModule_declarations\n\n\n\n\nMainPage\n\nMainPage\n\n\n\nMainPageModule\n\nMainPageModule\n\nMainPageModule -->\n\nMainPage->MainPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/main/main.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule} from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MainPage } from './main.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MainPage]\n})\nexport class MainPageModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationPage.html":{"url":"components/MeditationPage.html","title":"component - MeditationPage","body":"\n                   \n\n\n\n\n\n  Components\n  MeditationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/meditation/meditation.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditation\n            \n\n            \n                styleUrls\n                ./meditation.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditation.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertCtrl\n                            \n                            \n                                chosenPic\n                            \n                            \n                                picDesc\n                            \n                            \n                                playing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                choosePic\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                play\n                            \n                            \n                                    Async\n                                presentAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(theme: ThemeService, audio: AudioService, alertCtrl: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/meditation/meditation.page.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        audio\n                                                  \n                                                        \n                                                                        AudioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            choosePic\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    choosePic()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/meditation/meditation.page.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/meditation/meditation.page.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/meditation/meditation.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            play\n                        \n                        \n                    \n                \n            \n            \n                \nplay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/meditation/meditation.page.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/meditation/meditation.page.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/meditation/meditation.page.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chosenPic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/meditation/meditation.page.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            picDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/meditation/meditation.page.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/meditation/meditation.page.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { ThemeService } from 'src/app/theme.service';\nimport { AudioService } from '../../services/audio.service';\nimport { AlertController } from '@ionic/angular'\n@Component({\n  selector: 'app-meditation',\n  templateUrl: './meditation.page.html',\n  styleUrls: ['./meditation.page.scss'],\n})\nexport class MeditationPage implements OnInit {\n  playing:boolean = false;\n  chosenPic:string = \"\";\n  picDesc:string = \"\";\n\n  constructor(\n    private theme: ThemeService,\n    private audio: AudioService,\n    public alertCtrl: AlertController\n  ) {\n    this.theme.storedTheme;\n   }\n\n   async presentAlert() {\n    const alert = await this.alertCtrl.create({\n      header: 'Meditation',\n      message: 'Press the Breathe button to begin your meditation experience. Close your eyes and let your mind wander',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  async choosePic() {\n    const alert = await this.alertCtrl.create({\n      header: 'Choose Your Destination',\n      backdropDismiss: false,\n      buttons: [\n        {\n          text: 'Forest',\n          handler: data => {\n            this.chosenPic = '../../../assets/meditation/forest.jpg';\n            this.audio.preload('forestSounds', '../../../assets/meditation/forest.wav');\n            this.picDesc = \"forest\";\n          }\n        },\n        {\n          text: 'Ocean',\n          handler: data => {\n            this.chosenPic = '../../../assets/meditation/beach.jpg';\n            this.audio.preload('oceanSounds', '../../../assets/meditation/ocean.wav');\n            this.picDesc = \"ocean\";\n          }\n        }\n      ],\n    });\n    return await alert.present();\n  }\n\n  ngOnInit() {\n    this.choosePic();\n  }\n\n  ngAfterViewInit(){\n    this.audio.preload('silence', '../../../assets/meditation/silence.flac');\n\n  }\n\n  play(){\n    if(this.playing == false)\n    {\n      if(this.picDesc == \"forest\")\n      {\n        this.audio.play('forestSounds');\n      } else {\n        this.audio.play('oceanSounds');\n      }\n      this.playing = true;\n    } else {\n      this.audio.play('silence');\n      this.playing = false;\n    }\n    \n  }\n\n}\n\n    \n\n    \n        \n  Meditation\n  \n      \n        \n      \n  \n\n\n\n    \n        ?\n        \n          Breathe\n        \n    \n  \n    \n\n    \n                \n                    ./meditation.page.scss\n                \n                .pic {\n//  no-repeat center center fixed;\n background-size: cover;\n background-repeat: no-repeat;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Meditation                                    ?                  Breathe              '\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeditationPageModule.html":{"url":"modules/MeditationPageModule.html","title":"module - MeditationPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MeditationPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MeditationPageModule\n\n\n\ncluster_MeditationPageModule_declarations\n\n\n\n\nMeditationPage\n\nMeditationPage\n\n\n\nMeditationPageModule\n\nMeditationPageModule\n\nMeditationPageModule -->\n\nMeditationPage->MeditationPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/meditation/meditation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MeditationPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MeditationPage } from './meditation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MeditationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MeditationPage]\n})\nexport class MeditationPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuPage.html":{"url":"components/MenuPage.html","title":"component - MenuPage","body":"\n                   \n\n\n\n\n\n  Components\n  MenuPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/menu/menu.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                styleUrls\n                ./menu.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pages\n                            \n                            \n                                selectedPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, loginpage: HomePage, theme: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/menu/menu.page.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginpage\n                                                  \n                                                        \n                                                                        HomePage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theme\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/menu/menu.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/menu/menu.page.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      {\n        title: 'Main Page',\n        url: '/menu/(menucontent:main)'\n      },\n      {\n        title: 'To-Do Page',\n        url: '/menu/(menucontent:calendar)'\n      },\n      {\n        title: 'Blog Page',\n        url: '/menu/(menucontent:blog)'\n      },\n      {\n        title: 'Journal Page',\n        url: '/menu/(menucontent:journal)'\n      },\n      {\n        title: 'Meditation Page',\n        url: '/menu/(menucontent:meditation)'\n      },\n      {\n        title: 'Goals Page',\n        url: '/menu/(menucontent:goals)'\n      },\n      {\n        title: 'Achievements Page',\n        url: '/menu/(menucontent:achievements)'\n      },\n      {\n        title: 'Profile Page',\n        url: '/menu/(menucontent:profile)'\n      }\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/menu/menu.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/menu/menu.page.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, RouterEvent } from '@angular/router'\nimport { HomePage } from 'src/app/home/home.page';\nimport { ThemeService } from 'src/app/theme.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.page.html',\n  styleUrls: ['./menu.page.scss'],\n})\nexport class MenuPage implements OnInit {\n\n    selectedPath = '';\n    pages = [\n      {\n        title: 'Main Page',\n        url: '/menu/(menucontent:main)'\n      },\n      {\n        title: 'To-Do Page',\n        url: '/menu/(menucontent:calendar)'\n      },\n      {\n        title: 'Blog Page',\n        url: '/menu/(menucontent:blog)'\n      },\n      {\n        title: 'Journal Page',\n        url: '/menu/(menucontent:journal)'\n      },\n      {\n        title: 'Meditation Page',\n        url: '/menu/(menucontent:meditation)'\n      },\n      {\n        title: 'Goals Page',\n        url: '/menu/(menucontent:goals)'\n      },\n      {\n        title: 'Achievements Page',\n        url: '/menu/(menucontent:achievements)'\n      },\n      {\n        title: 'Profile Page',\n        url: '/menu/(menucontent:profile)'\n      }\n    ];\n  constructor(private router: Router,\n      private loginpage : HomePage,\n      private theme: ThemeService) { \n      this.router.events.subscribe((event: RouterEvent) => {\n      this.selectedPath = event.url;    \n    });\n  }\n\n  ngOnInit() {\n  }\n\n  logout(){\n    this.theme.setTheme('default')\n    this.loginpage.removeUserLocalStorage();\n    this.router.navigateByUrl('home');\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Menu\n      \n    \n\n    \n      \n        \n          \n            \n              {{ p.title }}\n            \n          \n        \n      \n      \n        Logout\n      \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./menu.page.scss\n                \n                .active-item {\n    border-left: 8px solid var(--ion-color-primary);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Menu                                                                {{ p.title }}                                                  Logout              '\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MenuPageModule.html":{"url":"modules/MenuPageModule.html","title":"module - MenuPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MenuPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MenuPageModule\n\n\n\ncluster_MenuPageModule_declarations\n\n\n\ncluster_MenuPageModule_imports\n\n\n\n\nMenuPage\n\nMenuPage\n\n\n\nMenuPageModule\n\nMenuPageModule\n\nMenuPageModule -->\n\nMenuPage->MenuPageModule\n\n\n\n\n\nAchievementsPageModule\n\nAchievementsPageModule\n\nMenuPageModule -->\n\nAchievementsPageModule->MenuPageModule\n\n\n\n\n\nBlogPageModule\n\nBlogPageModule\n\nMenuPageModule -->\n\nBlogPageModule->MenuPageModule\n\n\n\n\n\nCalendarPageModule\n\nCalendarPageModule\n\nMenuPageModule -->\n\nCalendarPageModule->MenuPageModule\n\n\n\n\n\nChatRoomPageModule\n\nChatRoomPageModule\n\nMenuPageModule -->\n\nChatRoomPageModule->MenuPageModule\n\n\n\n\n\nDatesPageModule\n\nDatesPageModule\n\nMenuPageModule -->\n\nDatesPageModule->MenuPageModule\n\n\n\n\n\nGoalsPageModule\n\nGoalsPageModule\n\nMenuPageModule -->\n\nGoalsPageModule->MenuPageModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nMenuPageModule -->\n\nHomePageModule->MenuPageModule\n\n\n\n\n\nJournalPageModule\n\nJournalPageModule\n\nMenuPageModule -->\n\nJournalPageModule->MenuPageModule\n\n\n\n\n\nMainPageModule\n\nMainPageModule\n\nMenuPageModule -->\n\nMainPageModule->MenuPageModule\n\n\n\n\n\nMeditationPageModule\n\nMeditationPageModule\n\nMenuPageModule -->\n\nMeditationPageModule->MenuPageModule\n\n\n\n\n\nMenuRoutingModule\n\nMenuRoutingModule\n\nMenuPageModule -->\n\nMenuRoutingModule->MenuPageModule\n\n\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nMenuPageModule -->\n\nProfilePageModule->MenuPageModule\n\n\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nMenuPageModule -->\n\nRegisterPageModule->MenuPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/menu/menu.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MenuPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AchievementsPageModule\n                        \n                        \n                            BlogPageModule\n                        \n                        \n                            CalendarPageModule\n                        \n                        \n                            ChatRoomPageModule\n                        \n                        \n                            DatesPageModule\n                        \n                        \n                            GoalsPageModule\n                        \n                        \n                            HomePageModule\n                        \n                        \n                            JournalPageModule\n                        \n                        \n                            MainPageModule\n                        \n                        \n                            MeditationPageModule\n                        \n                        \n                            MenuRoutingModule\n                        \n                        \n                            ProfilePageModule\n                        \n                        \n                            RegisterPageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { MenuPage } from './menu.page';\nimport { MenuRoutingModule } from './menu-routing.module';\nimport { MainPageModule } from '../main/main.module';\nimport { ProfilePageModule } from '../profile/profile.module';\nimport { HomePageModule } from 'src/app/home/home.module';\nimport { RegisterPageModule } from 'src/app/register/register.module';\nimport { BlogPageModule } from '../blog/blog.module';\nimport { JournalPageModule } from '../blog/journal/journal.module';\nimport { GoalsPageModule } from '../goals/goals.module';\nimport { AchievementsPageModule } from '../goals/achievements/achievements.module';\nimport { MeditationPageModule } from '../meditation/meditation.module';\nimport { CalendarPageModule } from '../calendar/calendar.module';\nimport { DatesPageModule } from '../calendar/dates/dates.module';\nimport { ChatRoomPageModule } from 'src/app/chat-room/chat-room.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MenuRoutingModule,\n    ProfilePageModule,\n    MainPageModule,\n    HomePageModule,\n    RegisterPageModule,\n    BlogPageModule,\n    JournalPageModule,\n    GoalsPageModule,\n    AchievementsPageModule,\n    MeditationPageModule,\n    CalendarPageModule,\n    ChatRoomPageModule,\n\tDatesPageModule\n  ],\n  declarations: [MenuPage]\n})\nexport class MenuPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MenuRoutingModule.html":{"url":"modules/MenuRoutingModule.html","title":"module - MenuRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MenuRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/menu/menu-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MenuPage } from './menu.page';\nimport { MainPage } from '../main/main.page';\nimport { ProfilePage } from '../profile/profile.page';\nimport { Routes, RouterModule, Router } from '@angular/router'\nimport { RegisterPage } from 'src/app/register/register.page';\nimport { HomePage } from 'src/app/home/home.page';\nimport { BlogPage } from '../blog/blog.page';\nimport { JournalPage } from '../blog/journal/journal.page';\nimport { MeditationPage } from '../meditation/meditation.page';\nimport { GoalsPage } from '../goals/goals.page';\nimport { AchievementsPage } from '../goals/achievements/achievements.page';\nimport { CalendarPage } from '../calendar/calendar.page';\nimport { DatesPage } from '../calendar/dates/dates.page';\nimport { ChatRoomPage } from 'src/app/chat-room/chat-room.page';\n\nconst routes: Routes = [\n  {\n    path: 'menu',\n    component: MenuPage,\n    children: [\n      {\n        path: 'home',\n        outlet: 'menucontent',\n        component: HomePage\n      },\n      {\n        path: 'register',\n        outlet: 'menucontent',\n        component: RegisterPage\n      },\n      {\n        path: 'main',\n        outlet: 'menucontent',\n        component: MainPage\n      },\n      {\n        path: 'calendar',\n        outlet: 'menucontent',\n        component: CalendarPage\n      },\n      {\n        path: 'blog',\n        outlet: 'menucontent',\n        component: BlogPage\n      },\n      {\n        path: 'journal',\n        outlet: 'menucontent',\n        component: JournalPage\n      },\n      {\n        path: 'meditation',\n        outlet: 'menucontent',\n        component: MeditationPage\n      },\n      {\n        path: 'goals',\n        outlet: 'menucontent',\n        component: GoalsPage\n      },\n      {\n        path: 'achievements',\n        outlet: 'menucontent',\n        component: AchievementsPage\n      },\n      {\n        path: 'profile',\n        outlet: 'menucontent',\n        component: ProfilePage\n      },\n      {\n        path: 'chat',\n        outlet: 'menucontent',\n        component: ChatRoomPage\n      },\n\t  {\n\t\tpath: 'dates',\n\t\toutlet: 'menucontent',\n\t\tcomponent: DatesPage\n\t  }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/menu/(menucontent:home)'\n  }\n];\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class MenuRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/profile/profile.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Public\n                                nav\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                storage\n                            \n                            \n                                subColor\n                            \n                            \n                                subscribed\n                            \n                            \n                                subscribeStatus\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeColor\n                            \n                            \n                                changePassword\n                            \n                            \n                                changeTheme\n                            \n                            \n                                    Async\n                                displayAlert\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                subscribeStatusChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nav: NavController, theme: ThemeService, storage: Storage, register: RegisterService, alertCtrl: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/profile/profile.page.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theme\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        register\n                                                  \n                                                        \n                                                                        RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeColor\n                        \n                        \n                    \n                \n            \n            \n                \nchangeColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/profile/profile.page.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/profile/profile.page.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeTheme\n                        \n                        \n                    \n                \n            \n            \n                \nchangeTheme(name)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/profile/profile.page.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            displayAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayAlert(header, subheader)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/profile/profile.page.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subheader\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/profile/profile.page.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/profile/profile.page.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/profile/profile.page.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribeStatusChange\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribeStatusChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/profile/profile.page.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/profile/profile.page.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/profile/profile.page.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/profile/profile.page.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/profile/profile.page.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"primary\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/profile/profile.page.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/profile/profile.page.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribeStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Subscribe\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/profile/profile.page.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/profile/profile.page.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavController, AlertController } from '@ionic/angular';\nimport { ThemeService } from '../../theme.service';\nimport { RegisterService } from '../../services/register.service'\n\nimport { Storage } from '@ionic/storage'\n\nconst themes = {\n  warm: {\n    primary: '#F78154',\n    secondary: '#4D9078',\n    tertiary: '#B4436C',\n    light: '#FDE8DF',\n    medium: '#FCD0A2',\n    dark: '#34162A'\n  },\n  night: {\n    primary: '#8CBA80',\n    secondary: '#FCFF6C',\n    tertiary: '#FE5F55',\n    medium: '#BCC2C7',\n    dark: '#F7F7FF',\n    light: '#495867'\n  },\n  neon: {\n    primary: '#39BFBD',\n    secondary: '#4CE0B3',\n    tertiary: '#FF5E79',\n    light: '#F4EDF2',\n    medium: '#B682A5',\n    dark: '#34162A'\n  },\n  default: {\n    primary: '#3880ff',\n    secondary: '#0cd1e8',\n    tertiary: '#7044ff',\n    success: '#10dc60',\n    warning: '#ffce00',\n    danger: '#f04141',\n    dark: '#222428',\n    medium: '#989aa2',\n    light: '#f4f5f8'\n  }\n};\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  subColor:string=\"primary\";\n  subscribeStatus:string=\"Subscribe\"\n  subscribed:boolean=false;\n  username: any;\n  email: any;\n  password: any;\n  \n\n  constructor(\n    public nav: NavController,\n    private theme: ThemeService,\n    public storage: Storage,\n    private register: RegisterService,\n    private alertCtrl: AlertController\n  ) {}\n\n  changeTheme(name) {\n    this.theme.setTheme(themes[name]);\n  }\n\n  ngOnInit() {\n      this.loadUser();\n  }\n\n  subscribeStatusChange(){\n    if(this.subscribed==false)\n    {\n      this.subscribed=true;\n      this.subscribeStatus=\"You are Subscribed!\"\n    } else {\n      this.subscribed=false;\n      this.subscribeStatus=\"Subscribe\"\n    }\n  }\n\n  changeColor(){\n    if(this.subColor==\"primary\")\n    {\n      this.subColor=\"secondary\";\n    } else {\n      this.subColor=\"primary\";\n    }\n  }\n\n  logout(){\n    this.changeTheme('default')\n    this.nav.navigateRoot(\"menu/(menucontent:home)\");\n  }\n\n  async loadUser(){\n    await this.storage.get('user').then((user) => {\n      console.log('your name is ' + user.fullname);\n      console.log('your username is ' + user.username);\n      this.username = user.username;\n     this.email = user.email;\n   });\n  }\n\n  changePassword(){\n    this.register.changePasswordUser(this.username, this.password).subscribe(res =>\n    { \n      console.log(res.user);\n      if(res.user){\n        this.storage.set('user', res.user);\n      }\n    },\n    err => {\n      this.displayAlert('Login Error', err.error);\n    });\n  }\n\n  async displayAlert(header, subheader){\n    const alert = await this.alertCtrl.create({\n      header: header,\n      subHeader: subheader,\n      buttons: ['Dismiss']\n    });\n    return await alert.present();\n  }\n\n}\n    \n\n    \n        \n  Profile\n  \n    \n      \n    \n  \n\n\n\n  \n      Username: {{username}} \n  \n  \n      Email: {{email}} \n  \n  \n    \n  \n  Change Password\n  {{subscribeStatus}}\n  Logout\n  \n\n  Change Theme\n  Default\n  Dark\n  Warm\n  Neon\n  \n  Primary\n  Secondary\n  Tertiary\n  Light\n  Meduim\n  Dark\n\n\n    \n\n    \n                \n                    ./profile.page.scss\n                \n                .padding{\n    padding-left: 25px;\n    padding-right: 25px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Profile                          Username: {{username}}           Email: {{email}}             Change Password  {{subscribeStatus}}  Logout    Change Theme  Default  Dark  Warm  Neon    Primary  Secondary  Tertiary  Light  Meduim  Dark'\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\n\nProfilePage\n\nProfilePage\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfilePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                fullname\n                            \n                            \n                                password\n                            \n                            \n                                repassword\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                displayAlert\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                loginreturn\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                showLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, reg: RegisterService, loadingCtrl: LoadingController, alertCtrl: AlertController, storage: Storage, menu: MenuController)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reg\n                                                  \n                                                        \n                                                                        RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        menu\n                                                  \n                                                        \n                                                                    MenuController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            displayAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayAlert(header, subheader)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.page.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subheader\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.page.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginreturn\n                        \n                        \n                    \n                \n            \n            \n                \nloginreturn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.page.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.page.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            showLoading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.page.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.page.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.page.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.page.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.page.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RegisterService } from './../services/register.service';\nimport { LoadingController, AlertController, MenuController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage{\n  fullname:string = '';\n  email:string='';\n  username:string = '';\n  password:string = '';\n  repassword:string = '';\n\n  constructor(\n    public router: Router,\n    private reg: RegisterService,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController,\n    private storage: Storage,\n    private menu: MenuController\n    ) { \n  }\n\n async register(){\n    if(this.fullname.length==0) {\n      this.displayAlert('Invalid Input',\"Please enter full name\");\n    } else if(this.email.length==0) {\n      this.displayAlert('Invalid Input',\"Please enter email\");\n    } else if(this.username.length==0) {\n      this.displayAlert('Invalid Input',\"Please enter username\");\n    } else if (this.password.length==0) {\n      this.displayAlert('Invalid Input',\"Please enter password\");\n    } else if (this.repassword.length==0 || this.repassword != this.password) {\n      this.displayAlert('Invalid Input',\"Please repeat password\") \n    } else {\n\n    await this.showLoading();\n    this.reg.registerUser(this.username, this.password, this.fullname, this.email)\n    .subscribe(async res =>  {\n        this.loadingCtrl.dismiss();\n        console.log(res)\n        \n        if(res.error){\n          this.displayAlert('Sign Up Error', res.error);\n        }\n    \n        if(res.user){\n          this.storage.set('username', res.user.username);\n          this.loginreturn();\n        }\n      });\n    }\n      this.username = '';\n      this.password = '';\n      this.repassword = '';\n  }\n\n  loginreturn() {\n    this.router.navigateByUrl('/home')\n  }\n\n   async showLoading(){\n    const loading =  await this.loadingCtrl.create({\n      message: 'Loading...',\n      spinner: 'bubbles',\n      duration: 3000\n    });\n\n     return await loading.present();\n  }\n\n  async displayAlert(header, subheader){\n    const alert = await this.alertCtrl.create({\n      header: header,\n      subHeader: subheader,\n      buttons: ['Dismiss']\n    });\n    return await alert.present();\n  }\n  ionViewWillEnter() {\n    this.menu.enable(false);\n  }\n}\n\n    \n\n    \n        \n  Register\n  \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n  \n\n  Register Now\n  Return to Login\n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Register                                                            Register Now  Return to Login'\n    var COMPONENTS = [{'name': 'AchievementsPage', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogPage', 'selector': 'app-blog'},{'name': 'CalendarPage', 'selector': 'app-calendar'},{'name': 'ChatRoomPage', 'selector': 'app-chat-room'},{'name': 'DatesPage', 'selector': 'app-dates'},{'name': 'GoalsPage', 'selector': 'app-goals'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'JournalPage', 'selector': 'app-journal'},{'name': 'MainPage', 'selector': 'app-main'},{'name': 'MeditationPage', 'selector': 'app-meditation'},{'name': 'MenuPage', 'selector': 'app-menu'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageModule.html":{"url":"modules/RegisterPageModule.html","title":"module - RegisterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/register/register.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterService.html":{"url":"injectables/RegisterService.html","title":"injectable - RegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/register.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePasswordUser\n                            \n                            \n                                loginUser\n                            \n                            \n                                registerUser\n                            \n                            \n                                updateCards\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/register.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePasswordUser\n                        \n                        \n                    \n                \n            \n            \n                \nchangePasswordUser(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/register.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginUser\n                        \n                        \n                    \n                \n            \n            \n                \nloginUser(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/register.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \nregisterUser(username, password, fullname, email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/register.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fullname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCards\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCards(username, password, cards)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/register.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/register.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(public http: HttpClient) { \n\n  }\n\n  registerUser(username, password, fullname, email): Observable {\n    return this.http.post('http://localhost:3000/api/signup/user', {\n      username: username,\n      password: password,\n      fullname: fullname,\n      email: email\n    });\n  }\n\n  loginUser(username ,password): Observable {\n    return this.http.post('http://localhost:3000/api/login/user', {\n      username: username,\n      password: password\n    });\n  }\n\n  changePasswordUser(username, password): Observable {\n    return this.http.post('http://localhost:3000/api/changepassword/user', {\n      username: username,\n      password: password\n    });\n  }\n\n  updateCards(username, password, cards): Observable {\n    return this.http.post('http://localhost:3000/api/updatecards/user', {\n      username: username,\n      password: password,\n      cards: cards\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sound.html":{"url":"interfaces/Sound.html","title":"interface - Sound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Sound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/audio.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        asset\n                                \n                                \n                                        isNative\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset\n                                    \n                                \n                                \n                                    \n                                        asset:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNative\n                                    \n                                \n                                \n                                    \n                                        isNative:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { NativeAudio } from '@ionic-native/native-audio/ngx';\n\ninterface Sound {\n  key: string;\n  asset: string;\n  isNative: boolean\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AudioService {\n\n  public sounds: Sound[] = [];\n  private audioPlayer: HTMLAudioElement = new Audio();\n  private forceWebAudio: boolean = true;\n\n  constructor(private platform: Platform, private nativeAudio: NativeAudio){\n\n  }\n\n  preload(key: string, asset: string): void {\n\n    if(this.platform.is('cordova') && !this.forceWebAudio){\n\n     this.nativeAudio.preloadSimple(key, asset);\n\n      this.sounds.push({\n        key: key,\n        asset: asset,\n        isNative: true\n      });\n\n    } else {\n\n      let audio = new Audio();\n      audio.src = asset;\n\n      this.sounds.push({\n        key: key,\n        asset: asset,\n        isNative: false\n      });\n\n    }\n\n  }\n\n  play(key: string): boolean {\n\n    let soundToPlay = this.sounds.find((sound) => {\n      return sound.key === key;\n    });\n    if (soundToPlay != null){\n      if(soundToPlay.isNative){\n\n        this.nativeAudio.play(soundToPlay.asset).then((res) => {\n          console.log(res);\n          return true;\n        }, (err) => {\n          console.log(err);\n          return false;\n        });\n\n      } else {\n\n        this.audioPlayer.src = soundToPlay.asset;\n        this.audioPlayer.play();\n        return true;\n      }\n    }\n    else {\n      return false;\n    }\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/theme.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setGlobalCSS\n                            \n                            \n                                setTheme\n                            \n                            \n                                setVariable\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    storedTheme\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/theme.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setGlobalCSS\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setGlobalCSS(css: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/theme.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    css\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetTheme(theme)\n                \n            \n\n\n            \n                \n                    Defined in src/app/theme.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVariable\n                        \n                        \n                    \n                \n            \n            \n                \nsetVariable(name, value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/theme.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        storedTheme\n                    \n                \n\n                \n                    \n                        getstoredTheme()\n                    \n                \n                            \n                                \n                                    Defined in src/app/theme.service.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as Color from 'color';\nimport { Storage } from '@ionic/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private storage: Storage\n  ) {\n    storage.get('theme').then(cssText => {\n      this.setGlobalCSS(cssText);\n    });\n  }\n\n  // Override all global variables with a new theme\n  setTheme(theme) {\n    const cssText = CSSTextGenerator(theme);\n    this.setGlobalCSS(cssText);\n    this.storage.set('theme', cssText);\n  }\n\n  // Define a single CSS variable\n  setVariable(name, value) {\n    this.document.documentElement.style.setProperty(name, value);\n  }\n\n  private setGlobalCSS(css: string) {\n    this.document.documentElement.style.cssText = css;\n  }\n\n  get storedTheme() {\n    return this.storage.get('theme');\n  }\n}\n\nconst defaults = {\n  primary: '#3880ff',\n  secondary: '#0cd1e8',\n  tertiary: '#7044ff',\n  success: '#10dc60',\n  warning: '#ffce00',\n  danger: '#f04141',\n  dark: '#222428',\n  medium: '#989aa2',\n  light: '#f4f5f8'\n};\n\nfunction CSSTextGenerator(colors) {\n  colors = { ...defaults, ...colors };\n\n  const {\n    primary,\n    secondary,\n    tertiary,\n    success,\n    warning,\n    danger,\n    dark,\n    medium,\n    light\n  } = colors;\n\n  const shadeRatio = 0.1;\n  const tintRatio = 0.1;\n\n  return `\n    --ion-color-base: ${light};\n    --ion-color-contrast: ${dark};\n    --ion-background-color: ${light};\n    --ion-text-color: ${dark};\n    --ion-toolbar-background-color: ${contrast(light, 0.1)};\n    --ion-toolbar-text-color: ${contrast(dark, 0.1)};\n    --ion-item-background-color: ${contrast(light, 0.3)};\n    --ion-item-text-color: ${contrast(dark, 0.3)};\n    --ion-color-primary: ${primary};\n    --ion-color-primary-rgb: 56,128,255;\n    --ion-color-primary-contrast: ${contrast(primary)};\n    --ion-color-primary-contrast-rgb: 255,255,255;\n    --ion-color-primary-shade:  ${Color(primary).darken(shadeRatio)};\n    --ion-color-primary-tint:  ${Color(primary).lighten(tintRatio)};\n    --ion-color-secondary: ${secondary};\n    --ion-color-secondary-rgb: 12,209,232;\n    --ion-color-secondary-contrast: ${contrast(secondary)};\n    --ion-color-secondary-contrast-rgb: 255,255,255;\n    --ion-color-secondary-shade:  ${Color(secondary).darken(shadeRatio)};\n    --ion-color-secondary-tint: ${Color(secondary).lighten(tintRatio)};\n    --ion-color-tertiary:  ${tertiary};\n    --ion-color-tertiary-rgb: 112,68,255;\n    --ion-color-tertiary-contrast: ${contrast(tertiary)};\n    --ion-color-tertiary-contrast-rgb: 255,255,255;\n    --ion-color-tertiary-shade: ${Color(tertiary).darken(shadeRatio)};\n    --ion-color-tertiary-tint:  ${Color(tertiary).lighten(tintRatio)};\n    --ion-color-success: ${success};\n    --ion-color-success-rgb: 16,220,96;\n    --ion-color-success-contrast: ${contrast(success)};\n    --ion-color-success-contrast-rgb: 255,255,255;\n    --ion-color-success-shade: ${Color(success).darken(shadeRatio)};\n    --ion-color-success-tint: ${Color(success).lighten(tintRatio)};\n    --ion-color-warning: ${warning};\n    --ion-color-warning-rgb: 255,206,0;\n    --ion-color-warning-contrast: ${contrast(warning)};\n    --ion-color-warning-contrast-rgb: 255,255,255;\n    --ion-color-warning-shade: ${Color(warning).darken(shadeRatio)};\n    --ion-color-warning-tint: ${Color(warning).lighten(tintRatio)};\n    --ion-color-danger: ${danger};\n    --ion-color-danger-rgb: 245,61,61;\n    --ion-color-danger-contrast: ${contrast(danger)};\n    --ion-color-danger-contrast-rgb: 255,255,255;\n    --ion-color-danger-shade: ${Color(danger).darken(shadeRatio)};\n    --ion-color-danger-tint: ${Color(danger).lighten(tintRatio)};\n    --ion-color-dark: ${dark};\n    --ion-color-dark-rgb: 34,34,34;\n    --ion-color-dark-contrast: ${contrast(dark)};\n    --ion-color-dark-contrast-rgb: 255,255,255;\n    --ion-color-dark-shade: ${Color(dark).darken(shadeRatio)};\n    --ion-color-dark-tint: ${Color(dark).lighten(tintRatio)};\n    --ion-color-medium: ${medium};\n    --ion-color-medium-rgb: 152,154,162;\n    --ion-color-medium-contrast: ${contrast(medium)};\n    --ion-color-medium-contrast-rgb: 255,255,255;\n    --ion-color-medium-shade: ${Color(medium).darken(shadeRatio)};\n    --ion-color-medium-tint: ${Color(medium).lighten(tintRatio)};\n    --ion-color-light: ${light};\n    --ion-color-light-rgb: 244,244,244;\n    --ion-color-light-contrast: $${contrast(light)};\n    --ion-color-light-contrast-rgb: 0,0,0;\n    --ion-color-light-shade: ${Color(light).darken(shadeRatio)};\n    --ion-color-light-tint: ${Color(light).lighten(tintRatio)};`;\n}\n\nfunction contrast(color, ratio = 0.8) {\n  color = Color(color);\n  return color.isDark() ? color.lighten(ratio) : color.darken(ratio);\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/chat-room/chat-room.page.ts\n            \n            component\n            ChatRoomPage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/home/home.page.ts\n            \n            component\n            HomePage\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/blog/blog.page.ts\n            \n            component\n            BlogPage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/blog/journal/journal.page.ts\n            \n            component\n            JournalPage\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/calendar/calendar.page.ts\n            \n            component\n            CalendarPage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/calendar/dates/dates.page.ts\n            \n            component\n            DatesPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/goals/achievements/achievements.page.ts\n            \n            component\n            AchievementsPage\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/goals/goals.page.ts\n            \n            component\n            GoalsPage\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/pages/main/main.page.ts\n            \n            component\n            MainPage\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/meditation/meditation.page.ts\n            \n            component\n            MeditationPage\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/menu/menu.page.ts\n            \n            component\n            MenuPage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/profile/profile.page.ts\n            \n            component\n            ProfilePage\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/pages/profile/profile.page.ts\n            \n            variable\n            themes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/audio.service.ts\n            \n            injectable\n            AudioService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/audio.service.ts\n            \n            interface\n            Sound\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/register.service.ts\n            \n            injectable\n            RegisterService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/theme.service.ts\n            \n            function\n            contrast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/theme.service.ts\n            \n            function\n            CSSTextGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/theme.service.ts\n            \n            variable\n            defaults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/core : ^5.0.0\n        \n            @ionic-native/native-audio : ^5.2.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.0.0\n        \n            @ionic/angular : ^4.0.0\n        \n            @ionic/app-scripts : ^3.2.3\n        \n            @ionic/storage : ^2.2.0\n        \n            angular2-template-loader : ^0.6.2\n        \n            color : ^3.1.0\n        \n            cordova-plugin-nativeaudio : 3.0.9\n        \n            core-js : ^2.5.4\n        \n            html-loader : ^0.5.5\n        \n            ionic-mocks : ^1.3.0\n        \n            istanbul-instrumenter-loader : ^3.0.1\n        \n            jasmine : ^3.3.1\n        \n            karma-sourcemap-loader : ^0.3.7\n        \n            karma-webpack : ^3.0.5\n        \n            ngx-socket-io : ^2.1.1\n        \n            null-loader : ^0.1.1\n        \n            rxjs : ~6.3.3\n        \n            ts-loader : ^5.3.3\n        \n            zone.js : ~0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            contrast   (src/.../theme.service.ts)\n                        \n                        \n                            CSSTextGenerator   (src/.../theme.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/theme.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            contrast\n                        \n                        \n                    \n                \n            \n            \n                \ncontrast(color, ratio: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ratio\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CSSTextGenerator\n                        \n                        \n                    \n                \n            \n            \n                \nCSSTextGenerator(colors)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colors\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AchievementsPageModule\n\n\n\ncluster_AchievementsPageModule_declarations\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BlogPageModule\n\n\n\ncluster_BlogPageModule_declarations\n\n\n\ncluster_CalendarPageModule\n\n\n\ncluster_CalendarPageModule_declarations\n\n\n\ncluster_ChatRoomPageModule\n\n\n\ncluster_ChatRoomPageModule_declarations\n\n\n\ncluster_DatesPageModule\n\n\n\ncluster_DatesPageModule_declarations\n\n\n\ncluster_GoalsPageModule\n\n\n\ncluster_GoalsPageModule_declarations\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_JournalPageModule\n\n\n\ncluster_JournalPageModule_declarations\n\n\n\ncluster_MainPageModule\n\n\n\ncluster_MainPageModule_declarations\n\n\n\ncluster_MeditationPageModule\n\n\n\ncluster_MeditationPageModule_declarations\n\n\n\ncluster_MenuPageModule\n\n\n\ncluster_MenuPageModule_declarations\n\n\n\ncluster_MenuPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\n\nAchievementsPage\n\nAchievementsPage\n\n\n\nAchievementsPageModule\n\nAchievementsPageModule\n\nAchievementsPageModule -->\n\nAchievementsPage->AchievementsPageModule\n\n\n\n\n\nMenuPageModule\n\nMenuPageModule\n\nMenuPageModule -->\n\nAchievementsPageModule->MenuPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBlogPage\n\nBlogPage\n\n\n\nBlogPageModule\n\nBlogPageModule\n\nBlogPageModule -->\n\nBlogPage->BlogPageModule\n\n\n\nMenuPageModule -->\n\nBlogPageModule->MenuPageModule\n\n\n\n\n\nCalendarPage\n\nCalendarPage\n\n\n\nCalendarPageModule\n\nCalendarPageModule\n\nCalendarPageModule -->\n\nCalendarPage->CalendarPageModule\n\n\n\nMenuPageModule -->\n\nCalendarPageModule->MenuPageModule\n\n\n\n\n\nChatRoomPage\n\nChatRoomPage\n\n\n\nChatRoomPageModule\n\nChatRoomPageModule\n\nChatRoomPageModule -->\n\nChatRoomPage->ChatRoomPageModule\n\n\n\nMenuPageModule -->\n\nChatRoomPageModule->MenuPageModule\n\n\n\n\n\nDatesPage\n\nDatesPage\n\n\n\nDatesPageModule\n\nDatesPageModule\n\nDatesPageModule -->\n\nDatesPage->DatesPageModule\n\n\n\nMenuPageModule -->\n\nDatesPageModule->MenuPageModule\n\n\n\n\n\nGoalsPage\n\nGoalsPage\n\n\n\nGoalsPageModule\n\nGoalsPageModule\n\nGoalsPageModule -->\n\nGoalsPage->GoalsPageModule\n\n\n\nMenuPageModule -->\n\nGoalsPageModule->MenuPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\nMenuPageModule -->\n\nHomePageModule->MenuPageModule\n\n\n\n\n\nJournalPage\n\nJournalPage\n\n\n\nJournalPageModule\n\nJournalPageModule\n\nJournalPageModule -->\n\nJournalPage->JournalPageModule\n\n\n\nMenuPageModule -->\n\nJournalPageModule->MenuPageModule\n\n\n\n\n\nMainPage\n\nMainPage\n\n\n\nMainPageModule\n\nMainPageModule\n\nMainPageModule -->\n\nMainPage->MainPageModule\n\n\n\nMenuPageModule -->\n\nMainPageModule->MenuPageModule\n\n\n\n\n\nMeditationPage\n\nMeditationPage\n\n\n\nMeditationPageModule\n\nMeditationPageModule\n\nMeditationPageModule -->\n\nMeditationPage->MeditationPageModule\n\n\n\nMenuPageModule -->\n\nMeditationPageModule->MenuPageModule\n\n\n\n\n\nMenuPage\n\nMenuPage\n\nMenuPageModule -->\n\nMenuPage->MenuPageModule\n\n\n\n\n\nMenuRoutingModule\n\nMenuRoutingModule\n\nMenuPageModule -->\n\nMenuRoutingModule->MenuPageModule\n\n\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nMenuPageModule -->\n\nProfilePageModule->MenuPageModule\n\n\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nMenuPageModule -->\n\nRegisterPageModule->MenuPageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        54 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AchievementsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlogPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CalendarPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatRoomPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatesPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GoalsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JournalPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeditationPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenuPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenuRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../app.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            defaults   (src/.../theme.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            themes   (src/.../profile.page.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SocketIoConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {url: 'http://localhost:3001', options:{}}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/theme.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  primary: '#3880ff',\n  secondary: '#0cd1e8',\n  tertiary: '#7044ff',\n  success: '#10dc60',\n  warning: '#ffce00',\n  danger: '#f04141',\n  dark: '#222428',\n  medium: '#989aa2',\n  light: '#f4f5f8'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/pages/profile/profile.page.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            themes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  warm: {\n    primary: '#F78154',\n    secondary: '#4D9078',\n    tertiary: '#B4436C',\n    light: '#FDE8DF',\n    medium: '#FCD0A2',\n    dark: '#34162A'\n  },\n  night: {\n    primary: '#8CBA80',\n    secondary: '#FCFF6C',\n    tertiary: '#FE5F55',\n    medium: '#BCC2C7',\n    dark: '#F7F7FF',\n    light: '#495867'\n  },\n  neon: {\n    primary: '#39BFBD',\n    secondary: '#4CE0B3',\n    tertiary: '#FF5E79',\n    light: '#F4EDF2',\n    medium: '#B682A5',\n    dark: '#34162A'\n  },\n  default: {\n    primary: '#3880ff',\n    secondary: '#0cd1e8',\n    tertiary: '#7044ff',\n    success: '#10dc60',\n    warning: '#ffce00',\n    danger: '#f04141',\n    dark: '#222428',\n    medium: '#989aa2',\n    light: '#f4f5f8'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
